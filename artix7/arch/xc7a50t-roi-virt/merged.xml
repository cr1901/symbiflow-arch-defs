<?xml version="1.0"?>
<!-- Generated from arch.xml - **DO NOT EDIT** -->
<!-- set: ai sw=1 ts=1 sta et -->
<architecture>
 <!-- ODIN-II model description for non-standard block type -->
 <models>
  <model name="DUMMY">
   <input_ports>
    <port name="I" combinational_sink_ports="O"/>
   </input_ports>
   <output_ports>
    <port name="O"/>
   </output_ports>
  </model>
  <model name="FDRE">
   <input_ports>
    <port name="C" is_clock="1"/>
    <port name="CE" clock="C"/>
    <port name="R" clock="C"/>
    <port name="D" clock="C"/>
   </input_ports>
   <output_ports>
    <port name="Q" clock="C"/>
   </output_ports>
  </model>
  <model name="CARRY4">
   <input_ports>
    <port name="S" combinational_sink_ports="CO O"/>
    <port name="DI" combinational_sink_ports="CO O"/>
    <port name="CIN" combinational_sink_ports="CO O"/>
   </input_ports>
   <output_ports>
    <port name="CO"/>
    <port name="O"/>
   </output_ports>
  </model>
  <model name="MUXCY">
   <input_ports>
    <port combinational_sink_ports="O" name="CI"/>
    <port combinational_sink_ports="O" name="DI"/>
    <port combinational_sink_ports="O" name="S"/>
   </input_ports>
   <output_ports>
    <port name="O"/>
   </output_ports>
  </model>
  <model name="XORCY">
   <input_ports>
    <port combinational_sink_ports="O" name="CI"/>
    <port combinational_sink_ports="O" name="LI"/>
   </input_ports>
   <output_ports>
    <port name="O"/>
   </output_ports>
  </model>
  <model name="F8MUX">
   <input_ports>
    <port combinational_sink_ports="OUT" name="I0"/>
    <port combinational_sink_ports="OUT" name="I1"/>
    <port combinational_sink_ports="OUT" name="S0"/>
   </input_ports>
   <output_ports>
    <port name="OUT"/>
   </output_ports>
  </model>
  <model name="F7AMUX">
   <input_ports>
    <port combinational_sink_ports="OUT" name="I0"/>
    <port combinational_sink_ports="OUT" name="I1"/>
    <port combinational_sink_ports="OUT" name="S0"/>
   </input_ports>
   <output_ports>
    <port name="OUT"/>
   </output_ports>
  </model>
  <model name="F7BMUX">
   <input_ports>
    <port combinational_sink_ports="OUT" name="I0"/>
    <port combinational_sink_ports="OUT" name="I1"/>
    <port combinational_sink_ports="OUT" name="S0"/>
   </input_ports>
   <output_ports>
    <port name="OUT"/>
   </output_ports>
  </model>
  <model name="BUF_DUMMY">
   <input_ports>
    <port combinational_sink_ports="O" name="I"/>
   </input_ports>
   <output_ports>
    <port name="O"/>
   </output_ports>
  </model>
 </models>
 <!-- Layout of the FPGA, we are using 4x4 -->
 <layout>
  <fixed_layout name="xc7a50t" width="26" height="57">
   <col type="EMPTY" startx="0" priority="10"/>
   <!-- <col type="LIOB" startx="0" priority="10" /> -->
   <col type="PAD" startx="1" priority="10"/>
   <col type="EMPTY" startx="3" priority="10"/>
   <!-- Start RIO -->
   <!-- Columns first -->
   <!-- ===== -->
   <!-- <col type="VBRK" startx="4" priority="10" /> -->
   <col type="EMPTY" startx="4" priority="10"/>
   <!-- <single type="NULL" x="4" y="0" priority="20"/> -->
   <single type="EMPTY" x="4" y="0" priority="20"/>
   <!-- <single type="HCLK_VBRK" x="4" y="26" priority="20"/> -->
   <single type="EMPTY" x="4" y="26" priority="20"/>
   <!-- <single type="NULL" x="4" y="56" priority="20"/> -->
   <single type="EMPTY" x="4" y="56" priority="20"/>
   <!-- ===== -->
   <!-- X10YXXX -->
   <col type="CLBLM_L" startx="5" priority="10"/>
   <!-- <single type="BRKH_CLB" x="5" y="0" priority="20"/> -->
   <single type="EMPTY" x="5" y="0" priority="20"/>
   <!-- <single type="HCLK_CLB" x="5" y="26" priority="20"/> -->
   <single type="EMPTY" x="5" y="26" priority="20"/>
   <!-- <single type="NULL" x="5" y="56" priority="20"/> -->
   <single type="EMPTY" x="5" y="56" priority="20"/>
   <!-- X31YXXX -->
   <col type="TILE_INT_L" startx="6" priority="10"/>
   <!-- <single type="BRKH_INT" x="6" y="0" priority="20"/> -->
   <single type="EMPTY" x="6" y="0" priority="20"/>
   <single type="HCLK_L" x="6" y="26" priority="20"/>
   <!-- <single type="T_TINT" x="6" y="56" priority="20"/> -->
   <single type="EMPTY" x="6" y="56" priority="20"/>
   <!-- X32YXXX -->
   <col type="INT_R" startx="7" priority="10"/>
   <!-- <single type="BRKH_INT" x="7" y="0" priority="20"/> -->
   <single type="EMPTY" x="7" y="0" priority="20"/>
   <single type="HCLK_R" x="7" y="26" priority="20"/>
   <!-- <single type="T_TINT" x="7" y="56" priority="20"/> -->
   <single type="EMPTY" x="7" y="56" priority="20"/>
   <!-- X33YXXX -->
   <col type="CLBLM_R" startx="8" priority="10"/>
   <!-- <single type="BRKH_CLB" x="8" y="0" priority="20"/> -->
   <single type="EMPTY" x="8" y="0" priority="20"/>
   <!-- <single type="HCLK_CLB" x="8" y="26" priority="20"/> -->
   <single type="EMPTY" x="8" y="26" priority="20"/>
   <!-- <single type="NULL" x="8" y="56" priority="20"/> -->
   <single type="EMPTY" x="8" y="56" priority="20"/>
   <!-- ===== -->
   <!-- X34YXXX -->
   <!-- <col type="VBRK" startx="9" priority="10" /> -->
   <col type="EMPTY" startx="9" priority="10"/>
   <!-- <single type="NULL" x="9" y="0" priority="20"/> -->
   <single type="EMPTY" x="9" y="0" priority="20"/>
   <!-- <single type="HCLK_VBRK" x="9" y="26" priority="20"/> -->
   <single type="EMPTY" x="9" y="26" priority="20"/>
   <!-- <single type="NULL" x="9" y="56" priority="20"/> -->
   <single type="EMPTY" x="9" y="56" priority="20"/>
   <!-- ===== -->
   <col type="BLOCK_CLBLL_L_INT_L" startx="10" priority="10"/>
   <!-- <single type="NULL" x="10" y="0" priority="20"/> -->
   <single type="EMPTY" x="10" y="0" priority="20"/>
   <!-- <single type="HCLK_CLB" x="10" y="26" priority="20"/> -->
   <single type="EMPTY" x="10" y="26" priority="20"/>
   <!-- <single type="NULL" x="10" y="56" priority="20"/> -->
   <single type="EMPTY" x="10" y="56" priority="20"/>
   <col type="BLOCK_CLBLL_L_INT_L" startx="11" priority="10"/>
   <!-- <col type="TILE_INT_L" startx="11" priority="10" /> -->
   <!-- <single type="BRKH_B TINT" x="11" y="0" priority="20"/> -->
   <single type="EMPTY" x="11" y="0" priority="20"/>
   <single type="HCLK_L" x="11" y="26" priority="20"/>
   <!-- <single type="T_TINT" x="11" y="56" priority="20"/> -->
   <single type="EMPTY" x="11" y="56" priority="20"/>
   <col type="INT_R" startx="12" priority="10"/>
   <!-- <single type="BRKH_B TINT" x="12" y="0" priority="20"/> -->
   <single type="EMPTY" x="12" y="0" priority="20"/>
   <single type="HCLK_R" x="12" y="26" priority="20"/>
   <!-- <single type="T_TINT" x="12" y="56" priority="20"/> -->
   <single type="EMPTY" x="12" y="56" priority="20"/>
   <col type="CLBLL_R" startx="13" priority="10"/>
   <!-- <single type="NULL" x="13" y="0" priority="20"/> -->
   <single type="EMPTY" x="13" y="0" priority="20"/>
   <!-- <single type="HCLK_CLB" x="13" y="26" priority="20"/> -->
   <single type="EMPTY" x="13" y="26" priority="20"/>
   <!-- <single type="NULL" x="13" y="56" priority="20"/> -->
   <single type="EMPTY" x="13" y="56" priority="20"/>
   <!-- ===== -->
   <col type="BLOCK_CLBLL_L_INT_L" startx="14" priority="10"/>
   <!-- <single type="NULL" x="14" y="0" priority="20"/> -->
   <single type="EMPTY" x="14" y="0" priority="20"/>
   <!-- <single type="HCLK_CLB" x="14" y="26" priority="20"/> -->
   <single type="EMPTY" x="14" y="26" priority="20"/>
   <!-- <single type="NULL" x="14" y="56" priority="20"/> -->
   <single type="EMPTY" x="14" y="56" priority="20"/>
   <col type="BLOCK_CLBLL_L_INT_L" startx="15" priority="10"/>
   <!-- <col type="TILE_INT_L" startx="15" priority="10" /> -->
   <!-- <single type="BRKH_B TINT" x="15" y="0" priority="20"/> -->
   <single type="EMPTY" x="15" y="0" priority="20"/>
   <single type="HCLK_L" x="15" y="26" priority="20"/>
   <!-- <single type="T_TINT" x="15" y="56" priority="20"/> -->
   <single type="EMPTY" x="15" y="56" priority="20"/>
   <col type="INT_R" startx="16" priority="10"/>
   <!-- <single type="BRKH_B TINT" x="16" y="0" priority="20"/> -->
   <single type="EMPTY" x="16" y="0" priority="20"/>
   <single type="HCLK_R" x="16" y="26" priority="20"/>
   <!-- <single type="T_TINT" x="16" y="56" priority="20"/> -->
   <single type="EMPTY" x="16" y="56" priority="20"/>
   <col type="CLBLL_R" startx="17" priority="10"/>
   <!-- <single type="NULL" x="17" y="0" priority="20"/> -->
   <single type="EMPTY" x="17" y="0" priority="20"/>
   <!-- <single type="HCLK_CLB" x="17" y="26" priority="20"/> -->
   <single type="EMPTY" x="17" y="26" priority="20"/>
   <!-- <single type="NULL" x="17" y="56" priority="20"/> -->
   <single type="EMPTY" x="17" y="56" priority="20"/>
   <!-- ===== -->
   <col type="BLOCK_CLBLL_L_INT_L" startx="18" priority="10"/>
   <!-- <single type="NULL" x="18" y="0" priority="20"/> -->
   <single type="EMPTY" x="18" y="0" priority="20"/>
   <!-- <single type="HCLK_CLB" x="18" y="26" priority="20"/> -->
   <single type="EMPTY" x="18" y="26" priority="20"/>
   <!-- <single type="NULL" x="18" y="56" priority="20"/> -->
   <single type="EMPTY" x="18" y="56" priority="20"/>
   <col type="BLOCK_CLBLL_L_INT_L" startx="19" priority="10"/>
   <!-- <col type="TILE_INT_L" startx="19" priority="10" /> -->
   <!-- <single type="BRKH_TINT" x="19" y="0" priority="20"/> -->
   <single type="EMPTY" x="19" y="0" priority="20"/>
   <single type="HCLK_L" x="19" y="26" priority="20"/>
   <!-- <single type="T_TINT" x="19" y="56" priority="20"/> -->
   <single type="EMPTY" x="19" y="56" priority="20"/>
   <!-- End RIO -->
   <col type="EMPTY" startx="23" priority="10"/>
   <!-- <col type="RIOB" startx="24" priority="10" /> -->
   <col type="PAD" startx="24" priority="10"/>
   <col type="EMPTY" startx="25" priority="10"/>
  </fixed_layout>
  <fixed_layout name="xc7a50t-test" width="16" height="16">
   <col type="EMPTY" startx="0" priority="10"/>
   <!-- <col type="LIOB" startx="1" priority="10" /> -->
   <col type="PAD" startx="1" priority="10"/>
   <col type="EMPTY" startx="2" priority="10"/>
   <!-- Start RIO -->
   <col type="TILE_INT_L" startx="3" priority="10"/>
   <!--<col type="BLOCK_CLBLL_L_INT_L" startx="4" priority="10" /> -->
   <!-- End RIO -->
   <col type="EMPTY" startx="5" priority="10"/>
   <!-- <col type="RIOB" startx="6" priority="10" /> -->
   <col type="PAD" startx="6" priority="10"/>
   <col type="EMPTY" startx="7" priority="10"/>
   <row type="EMPTY" starty="0" priority="11"/>
   <row type="EMPTY" starty="15" priority="11"/>
  </fixed_layout>
 </layout>
 <device>
  <sizing R_minW_nmos="6065.520020" R_minW_pmos="18138.500000"/>
  <area grid_logic_tile_area="14813.392"/>
  <connection_block input_switch_name="2"/>
  <switch_block type="wilton" fs="3"/>
  <chan_width_distr>
   <x distr="uniform" peak="1.000000"/>
   <y distr="uniform" peak="1.000000"/>
  </chan_width_distr>
 </device>
 <switchlist>
  <!-- name="buffer" == name="0" -->
  <!-- name="routing" == name="1" -->
  <switch type="mux" name="1" R="551" Cin=".77e-15" Cout="4e-15" Tdel="58e-12" mux_trans_size="2.630740" buf_size="27.645901"/>
  <switch type="mux" name="2" R="551" Cin=".77e-15" Cout="4e-15" Tdel="58e-12" mux_trans_size="2.630740" buf_size="27.645901"/>
 </switchlist>
 <segmentlist>
  <!-- Global networks -->
  <segment name="global" length="longline" freq="0.010000" type="bidir" Rmetal="101" Cmetal="22.5e-15">
   <sb type="pattern">1 1</sb>
   <cb type="pattern">1</cb>
   <wire_switch name="1"/>
   <opin_switch name="2"/>
  </segment>
  <!-- Span 12 vertical tracks -->
  <!-- Span 12 horizontal tracks -->
  <segment name="long-span" length="11" freq="0.250000" type="bidir" Rmetal="101" Cmetal="22.5e-15">
   <sb type="pattern">1 1 1 1 1 1 1 1 1 1 1 1</sb>
   <cb type="pattern">1 1 1 1 1 1 1 1 1 1 1</cb>
   <wire_switch name="1"/>
   <opin_switch name="2"/>
  </segment>
  <!-- Span 4 vertical tracks -->
  <!-- Span 4 horizontal tracks -->
  <segment name="short-span" length="4" freq="0.750000" type="bidir" Rmetal="101" Cmetal="22.5e-15">
   <sb type="pattern">1 1 1 1 1</sb>
   <cb type="pattern">1 1 1 1</cb>
   <wire_switch name="1"/>
   <opin_switch name="2"/>
  </segment>
 </segmentlist>
 <complexblocklist>
  <!-- An IO pin found on an FPGA -->
  <pb_type name="PAD" capacity="1">
   <input name="outpad" num_pins="1"/>
   <output name="inpad" num_pins="1"/>
   <!-- IO operating as an input -->
   <mode name="PAD_IS_INPUT">
    <pb_type name="inpad" blif_model=".input" num_pb="1">
     <output name="inpad" num_pins="1"/>
    </pb_type>
    <interconnect>
     <direct name="inpad" input="inpad.inpad" output="PAD.inpad">
      <delay_constant max="4.243e-11" in_port="inpad.inpad" out_port="PAD.inpad"/>
     </direct>
    </interconnect>
   </mode>
   <!-- IO operating as an output -->
   <mode name="PAD_IS_OUTPUT">
    <pb_type name="outpad" blif_model=".output" num_pb="1">
     <input name="outpad" num_pins="1"/>
    </pb_type>
    <interconnect>
     <direct name="outpad" input="PAD.outpad" output="outpad.outpad">
      <delay_constant max="1.394e-11" in_port="PAD.outpad" out_port="outpad.outpad"/>
     </direct>
    </interconnect>
   </mode>
   <!-- FIXME - Should have a IO operating as bi-directional -->
   <!-- IO pins are never connected to the fabric, they are connected to a platform specific IO tile -->
   <fc default_in_type="frac" default_in_val="1" default_out_type="frac" default_out_val="1"/>
   <!--
 IOs go on the periphery of the FPGA/

 Currently for consistency make it physically equivalent on all sides so
 that only one definition of I/Os is needed.

 If I do not make a physically equivalent definition, then we need to 4
 different pin definitions (one for each side of the FPGA).
 -->
   <pinlocations pattern="custom">
    <loc side="left">PAD.outpad PAD.inpad</loc>
    <loc side="top">PAD.outpad PAD.inpad</loc>
    <loc side="right">PAD.outpad PAD.inpad</loc>
    <loc side="bottom">PAD.outpad PAD.inpad</loc>
   </pinlocations>
  </pb_type>
  <pb_type name="TILE_INT_L" num_pb="1">
   <!-- Tile Interconnects -->
   <input name="EE2END" num_pins="4"/>
   <input name="EE4END" num_pins="4"/>
   <input name="EL1END" num_pins="4"/>
   <input name="ER1END" num_pins="4"/>
   <input name="NE2END" num_pins="4"/>
   <input name="NE6END" num_pins="4"/>
   <input name="NL1END" num_pins="3"/>
   <input name="NN2END" num_pins="4"/>
   <input name="NN6END" num_pins="4"/>
   <input name="NR1END" num_pins="4"/>
   <input name="NW2END" num_pins="4"/>
   <input name="NW6END" num_pins="4"/>
   <input name="SE2END" num_pins="4"/>
   <input name="SE6END" num_pins="4"/>
   <input name="SL1END" num_pins="4"/>
   <input name="SR1END" num_pins="4"/>
   <input name="SS2END" num_pins="4"/>
   <input name="SS6END" num_pins="4"/>
   <input name="SW2END" num_pins="4"/>
   <input name="SW6END" num_pins="4"/>
   <input name="WL1END" num_pins="4"/>
   <input name="WR1END" num_pins="4"/>
   <input name="WW2END" num_pins="4"/>
   <input name="WW4END" num_pins="4"/>
   <output name="EE2BEG" num_pins="4"/>
   <output name="EE4BEG" num_pins="4"/>
   <output name="EL1BEG" num_pins="3"/>
   <output name="ER1BEG" num_pins="4"/>
   <output name="NE2BEG" num_pins="4"/>
   <output name="NE6BEG" num_pins="4"/>
   <output name="NL1BEG" num_pins="3"/>
   <output name="NN2BEG" num_pins="4"/>
   <output name="NN6BEG" num_pins="4"/>
   <output name="NR1BEG" num_pins="4"/>
   <output name="NW2BEG" num_pins="4"/>
   <output name="NW6BEG" num_pins="4"/>
   <output name="SE2BEG" num_pins="4"/>
   <output name="SE6BEG" num_pins="4"/>
   <output name="SL1BEG" num_pins="4"/>
   <output name="SR1BEG" num_pins="4"/>
   <output name="SS2BEG" num_pins="4"/>
   <output name="SS6BEG" num_pins="4"/>
   <output name="SW2BEG" num_pins="4"/>
   <output name="SW6BEG" num_pins="4"/>
   <output name="WL1BEG" num_pins="3"/>
   <output name="WR1BEG" num_pins="4"/>
   <output name="WW2BEG" num_pins="4"/>
   <output name="WW4BEG" num_pins="4"/>
   <clock name="GCLK_L_B" num_pins="12"/>
   <clock name="GFAN" num_pins="2"/>
   <!--
 <output name="BYP_L" num_pins="8"/>
 <output name="CLK_L" num_pins="2"/>
 <output name="CTRL_L" num_pins="2"/>
 <output name="FAN_L" num_pins="8"/>
 <output name="IMUX_L" num_pins="48"/>
 <input name="LOGIC_OUTS_L" num_pins="24"/>
-->
   <input name="CIN_N" num_pins="2"/>
   <output name="COUT_N" num_pins="2"/>
   <pb_type name="TILE_CLBLL_L" num_pb="1">
    <!-- Tile Inputs -->
    <input name="BYP" num_pins="8"/>
    <clock name="CLK" num_pins="2"/>
    <input name="CTRL" num_pins="2"/>
    <input name="FAN" num_pins="8"/>
    <input name="IMUX" num_pins="48"/>
    <input name="LL_CIN_N" num_pins="1"/>
    <input name="L_CIN_N" num_pins="1"/>
    <!-- Tile Outputs -->
    <output name="LL_COUT_N" num_pins="1"/>
    <output name="LOGIC_OUTS" num_pins="24"/>
    <output name="L_COUT_N" num_pins="1"/>
    <!-- Internal Slices -->
    <pb_type name="CLBLL_L" num_pb="1">
     <!-- A diagram for the SLICEL is shown in;
 7 Series FPGAs CLB User Guide UG474 (v1.8) September 27, 2016
 Figure 2-4: Diagram of SLICEL
 -->
     <pb_type name="SLICEL" num_pb="1">
      <input name="DX" num_pins="1" equivalent="false"/>
      <input name="D1" num_pins="1" equivalent="false"/>
      <input name="D2" num_pins="1" equivalent="false"/>
      <input name="D3" num_pins="1" equivalent="false"/>
      <input name="D4" num_pins="1" equivalent="false"/>
      <input name="D5" num_pins="1" equivalent="false"/>
      <input name="D6" num_pins="1" equivalent="false"/>
      <input name="CX" num_pins="1" equivalent="false"/>
      <input name="C1" num_pins="1" equivalent="false"/>
      <input name="C2" num_pins="1" equivalent="false"/>
      <input name="C3" num_pins="1" equivalent="false"/>
      <input name="C4" num_pins="1" equivalent="false"/>
      <input name="C5" num_pins="1" equivalent="false"/>
      <input name="C6" num_pins="1" equivalent="false"/>
      <input name="BX" num_pins="1" equivalent="false"/>
      <input name="B1" num_pins="1" equivalent="false"/>
      <input name="B2" num_pins="1" equivalent="false"/>
      <input name="B3" num_pins="1" equivalent="false"/>
      <input name="B4" num_pins="1" equivalent="false"/>
      <input name="B5" num_pins="1" equivalent="false"/>
      <input name="B6" num_pins="1" equivalent="false"/>
      <input name="AX" num_pins="1" equivalent="false"/>
      <input name="A1" num_pins="1" equivalent="false"/>
      <input name="A2" num_pins="1" equivalent="false"/>
      <input name="A3" num_pins="1" equivalent="false"/>
      <input name="A4" num_pins="1" equivalent="false"/>
      <input name="A5" num_pins="1" equivalent="false"/>
      <input name="A6" num_pins="1" equivalent="false"/>
      <input name="SR" num_pins="1" equivalent="false"/>
      <input name="CE" num_pins="1" equivalent="false"/>
      <clock name="CLK" num_pins="1" equivalent="false"/>
      <input name="CIN" num_pins="1" equivalent="false"/>
      <output name="COUT" num_pins="1" equivalent="false"/>
      <output name="DMUX" num_pins="1" equivalent="false"/>
      <output name="D" num_pins="1" equivalent="false"/>
      <output name="DQ" num_pins="1" equivalent="false"/>
      <output name="CMUX" num_pins="1" equivalent="false"/>
      <output name="C" num_pins="1" equivalent="false"/>
      <output name="CQ" num_pins="1" equivalent="false"/>
      <output name="BMUX" num_pins="1" equivalent="false"/>
      <output name="B" num_pins="1" equivalent="false"/>
      <output name="BQ" num_pins="1" equivalent="false"/>
      <output name="AMUX" num_pins="1" equivalent="false"/>
      <output name="A" num_pins="1" equivalent="false"/>
      <output name="AQ" num_pins="1" equivalent="false"/>
      <!-- D6LUT, C6LUT, B6LUT, A6LUT == W6LUT
 A fracturable 6 input LUT. Can either be;
 - 2 * 5 input, 1 output LUT
 - 1 * 6 input, 1 output LUT
 -->
      <!-- D6LUT, C6LUT, B6LUT, A6LUT == W6LUT
 A fracturable 6 input LUT. Can either be;
 - 2 * 5 input, 1 output LUT
 - 1 * 6 input, 1 output LUT
 -->
      <pb_type name="ALUT" num_pb="1">
       <input name="A1" num_pins="1"/>
       <input name="A2" num_pins="1"/>
       <input name="A3" num_pins="1"/>
       <input name="A4" num_pins="1"/>
       <input name="A5" num_pins="1"/>
       <input name="A6" num_pins="1"/>
       <output name="O5" num_pins="1"/>
       <output name="O6" num_pins="1"/>
       <mode name="lut6">
        <pb_type name="A6LUT" num_pb="1" class="lut" blif_model=".names">
         <input name="in" num_pins="6" port_class="lut_in"/>
         <output name="out" num_pins="1" port_class="lut_out"/>
         <delay_matrix type="max" in_port="A6LUT.in" out_port="A6LUT.out">
 0.068e-9
 0.068e-9
 0.068e-9
 0.068e-9
 0.068e-9
 0.068e-9
 </delay_matrix>
        </pb_type>
        <interconnect>
         <direct name="ALUT_A6" input="ALUT.A6" output="A6LUT.in[5]"/>
         <direct name="ALUT_A5" input="ALUT.A5" output="A6LUT.in[4]"/>
         <direct name="ALUT_A4" input="ALUT.A4" output="A6LUT.in[3]"/>
         <direct name="ALUT_A3" input="ALUT.A3" output="A6LUT.in[2]"/>
         <direct name="ALUT_A2" input="ALUT.A2" output="A6LUT.in[1]"/>
         <direct name="ALUT_A1" input="ALUT.A1" output="A6LUT.in[0]"/>
         <direct name="O6" input="A6LUT.out" output="ALUT.O6"/>
        </interconnect>
       </mode>
       <mode name="lut5x2">
        <pb_type name="A5LUT" num_pb="2" class="lut" blif_model=".names">
         <input name="in" num_pins="5" port_class="lut_in"/>
         <output name="out" num_pins="1" port_class="lut_out"/>
         <delay_matrix type="max" in_port="A5LUT.in" out_port="A5LUT.out">
 0.068e-9
 0.068e-9
 0.068e-9
 0.068e-9
 0.068e-9
 </delay_matrix>
        </pb_type>
        <interconnect>
         <!-- First LUT5 -->
         <!-- Second LUT5 -->
         <direct name="ALUT_A6" input="ALUT.A6" output="A5LUT[0].in[4]"/>
         <direct name="ALUT_A5" input="ALUT.A5" output="A5LUT[1].in[4]"/>
         <direct name="ALUT_A4_0" input="ALUT.A4" output="A5LUT[0].in[3]"/>
         <direct name="ALUT_A4_1" input="ALUT.A4" output="A5LUT[1].in[3]"/>
         <direct name="ALUT_A3_0" input="ALUT.A3" output="A5LUT[0].in[2]"/>
         <direct name="ALUT_A3_1" input="ALUT.A3" output="A5LUT[1].in[2]"/>
         <direct name="ALUT_A2_0" input="ALUT.A2" output="A5LUT[0].in[1]"/>
         <direct name="ALUT_A2_1" input="ALUT.A2" output="A5LUT[1].in[1]"/>
         <direct name="ALUT_A1_0" input="ALUT.A1" output="A5LUT[0].in[0]"/>
         <direct name="ALUT_A1_1" input="ALUT.A1" output="A5LUT[1].in[0]"/>
         <direct name="O5" input="A5LUT[0].out" output="ALUT.O5"/>
         <direct name="O6" input="A5LUT[1].out" output="ALUT.O6"/>
        </interconnect>
       </mode>
      </pb_type>
      <!-- D6LUT, C6LUT, B6LUT, A6LUT == W6LUT
 A fracturable 6 input LUT. Can either be;
 - 2 * 5 input, 1 output LUT
 - 1 * 6 input, 1 output LUT
 -->
      <pb_type name="BLUT" num_pb="1">
       <input name="A1" num_pins="1"/>
       <input name="A2" num_pins="1"/>
       <input name="A3" num_pins="1"/>
       <input name="A4" num_pins="1"/>
       <input name="A5" num_pins="1"/>
       <input name="A6" num_pins="1"/>
       <output name="O5" num_pins="1"/>
       <output name="O6" num_pins="1"/>
       <mode name="lut6">
        <pb_type name="B6LUT" num_pb="1" class="lut" blif_model=".names">
         <input name="in" num_pins="6" port_class="lut_in"/>
         <output name="out" num_pins="1" port_class="lut_out"/>
         <delay_matrix type="max" in_port="B6LUT.in" out_port="B6LUT.out">
 0.068e-9
 0.068e-9
 0.068e-9
 0.068e-9
 0.068e-9
 0.068e-9
 </delay_matrix>
        </pb_type>
        <interconnect>
         <direct name="BLUT_A6" input="BLUT.A6" output="B6LUT.in[5]"/>
         <direct name="BLUT_A5" input="BLUT.A5" output="B6LUT.in[4]"/>
         <direct name="BLUT_A4" input="BLUT.A4" output="B6LUT.in[3]"/>
         <direct name="BLUT_A3" input="BLUT.A3" output="B6LUT.in[2]"/>
         <direct name="BLUT_A2" input="BLUT.A2" output="B6LUT.in[1]"/>
         <direct name="BLUT_A1" input="BLUT.A1" output="B6LUT.in[0]"/>
         <direct name="O6" input="B6LUT.out" output="BLUT.O6"/>
        </interconnect>
       </mode>
       <mode name="lut5x2">
        <pb_type name="B5LUT" num_pb="2" class="lut" blif_model=".names">
         <input name="in" num_pins="5" port_class="lut_in"/>
         <output name="out" num_pins="1" port_class="lut_out"/>
         <delay_matrix type="max" in_port="B5LUT.in" out_port="B5LUT.out">
 0.068e-9
 0.068e-9
 0.068e-9
 0.068e-9
 0.068e-9
 </delay_matrix>
        </pb_type>
        <interconnect>
         <!-- First LUT5 -->
         <!-- Second LUT5 -->
         <direct name="BLUT_A6" input="BLUT.A6" output="B5LUT[0].in[4]"/>
         <direct name="BLUT_A5" input="BLUT.A5" output="B5LUT[1].in[4]"/>
         <direct name="BLUT_A4_0" input="BLUT.A4" output="B5LUT[0].in[3]"/>
         <direct name="BLUT_A4_1" input="BLUT.A4" output="B5LUT[1].in[3]"/>
         <direct name="BLUT_A3_0" input="BLUT.A3" output="B5LUT[0].in[2]"/>
         <direct name="BLUT_A3_1" input="BLUT.A3" output="B5LUT[1].in[2]"/>
         <direct name="BLUT_A2_0" input="BLUT.A2" output="B5LUT[0].in[1]"/>
         <direct name="BLUT_A2_1" input="BLUT.A2" output="B5LUT[1].in[1]"/>
         <direct name="BLUT_A1_0" input="BLUT.A1" output="B5LUT[0].in[0]"/>
         <direct name="BLUT_A1_1" input="BLUT.A1" output="B5LUT[1].in[0]"/>
         <direct name="O5" input="B5LUT[0].out" output="BLUT.O5"/>
         <direct name="O6" input="B5LUT[1].out" output="BLUT.O6"/>
        </interconnect>
       </mode>
      </pb_type>
      <pb_type name="F7AMUX" num_pb="1" blif_model=".subckt F7AMUX">
       <!--
Generated with ../../../../../utils/mux_gen.py
-->
       <input name="I0" num_pins="1"/>
       <input name="I1" num_pins="1"/>
       <input name="S0" num_pins="1"/>
       <output name="OUT" num_pins="1"/>
       <delay_constant in_port="F7AMUX.I0" max="10e-12" out_port="F7AMUX.OUT"/>
       <delay_constant in_port="F7AMUX.I1" max="10e-12" out_port="F7AMUX.OUT"/>
       <delay_constant in_port="F7AMUX.S0" max="10e-12" out_port="F7AMUX.OUT"/>
      </pb_type>
      <!-- D6LUT, C6LUT, B6LUT, A6LUT == W6LUT
 A fracturable 6 input LUT. Can either be;
 - 2 * 5 input, 1 output LUT
 - 1 * 6 input, 1 output LUT
 -->
      <pb_type name="CLUT" num_pb="1">
       <input name="A1" num_pins="1"/>
       <input name="A2" num_pins="1"/>
       <input name="A3" num_pins="1"/>
       <input name="A4" num_pins="1"/>
       <input name="A5" num_pins="1"/>
       <input name="A6" num_pins="1"/>
       <output name="O5" num_pins="1"/>
       <output name="O6" num_pins="1"/>
       <mode name="lut6">
        <pb_type name="C6LUT" num_pb="1" class="lut" blif_model=".names">
         <input name="in" num_pins="6" port_class="lut_in"/>
         <output name="out" num_pins="1" port_class="lut_out"/>
         <delay_matrix type="max" in_port="C6LUT.in" out_port="C6LUT.out">
 0.068e-9
 0.068e-9
 0.068e-9
 0.068e-9
 0.068e-9
 0.068e-9
 </delay_matrix>
        </pb_type>
        <interconnect>
         <direct name="CLUT_A6" input="CLUT.A6" output="C6LUT.in[5]"/>
         <direct name="CLUT_A5" input="CLUT.A5" output="C6LUT.in[4]"/>
         <direct name="CLUT_A4" input="CLUT.A4" output="C6LUT.in[3]"/>
         <direct name="CLUT_A3" input="CLUT.A3" output="C6LUT.in[2]"/>
         <direct name="CLUT_A2" input="CLUT.A2" output="C6LUT.in[1]"/>
         <direct name="CLUT_A1" input="CLUT.A1" output="C6LUT.in[0]"/>
         <direct name="O6" input="C6LUT.out" output="CLUT.O6"/>
        </interconnect>
       </mode>
       <mode name="lut5x2">
        <pb_type name="C5LUT" num_pb="2" class="lut" blif_model=".names">
         <input name="in" num_pins="5" port_class="lut_in"/>
         <output name="out" num_pins="1" port_class="lut_out"/>
         <delay_matrix type="max" in_port="C5LUT.in" out_port="C5LUT.out">
 0.068e-9
 0.068e-9
 0.068e-9
 0.068e-9
 0.068e-9
 </delay_matrix>
        </pb_type>
        <interconnect>
         <!-- First LUT5 -->
         <!-- Second LUT5 -->
         <direct name="CLUT_A6" input="CLUT.A6" output="C5LUT[0].in[4]"/>
         <direct name="CLUT_A5" input="CLUT.A5" output="C5LUT[1].in[4]"/>
         <direct name="CLUT_A4_0" input="CLUT.A4" output="C5LUT[0].in[3]"/>
         <direct name="CLUT_A4_1" input="CLUT.A4" output="C5LUT[1].in[3]"/>
         <direct name="CLUT_A3_0" input="CLUT.A3" output="C5LUT[0].in[2]"/>
         <direct name="CLUT_A3_1" input="CLUT.A3" output="C5LUT[1].in[2]"/>
         <direct name="CLUT_A2_0" input="CLUT.A2" output="C5LUT[0].in[1]"/>
         <direct name="CLUT_A2_1" input="CLUT.A2" output="C5LUT[1].in[1]"/>
         <direct name="CLUT_A1_0" input="CLUT.A1" output="C5LUT[0].in[0]"/>
         <direct name="CLUT_A1_1" input="CLUT.A1" output="C5LUT[1].in[0]"/>
         <direct name="O5" input="C5LUT[0].out" output="CLUT.O5"/>
         <direct name="O6" input="C5LUT[1].out" output="CLUT.O6"/>
        </interconnect>
       </mode>
      </pb_type>
      <!-- D6LUT, C6LUT, B6LUT, A6LUT == W6LUT
 A fracturable 6 input LUT. Can either be;
 - 2 * 5 input, 1 output LUT
 - 1 * 6 input, 1 output LUT
 -->
      <pb_type name="DLUT" num_pb="1">
       <input name="A1" num_pins="1"/>
       <input name="A2" num_pins="1"/>
       <input name="A3" num_pins="1"/>
       <input name="A4" num_pins="1"/>
       <input name="A5" num_pins="1"/>
       <input name="A6" num_pins="1"/>
       <output name="O5" num_pins="1"/>
       <output name="O6" num_pins="1"/>
       <mode name="lut6">
        <pb_type name="D6LUT" num_pb="1" class="lut" blif_model=".names">
         <input name="in" num_pins="6" port_class="lut_in"/>
         <output name="out" num_pins="1" port_class="lut_out"/>
         <delay_matrix type="max" in_port="D6LUT.in" out_port="D6LUT.out">
 0.068e-9
 0.068e-9
 0.068e-9
 0.068e-9
 0.068e-9
 0.068e-9
 </delay_matrix>
        </pb_type>
        <interconnect>
         <direct name="DLUT_A6" input="DLUT.A6" output="D6LUT.in[5]"/>
         <direct name="DLUT_A5" input="DLUT.A5" output="D6LUT.in[4]"/>
         <direct name="DLUT_A4" input="DLUT.A4" output="D6LUT.in[3]"/>
         <direct name="DLUT_A3" input="DLUT.A3" output="D6LUT.in[2]"/>
         <direct name="DLUT_A2" input="DLUT.A2" output="D6LUT.in[1]"/>
         <direct name="DLUT_A1" input="DLUT.A1" output="D6LUT.in[0]"/>
         <direct name="O6" input="D6LUT.out" output="DLUT.O6"/>
        </interconnect>
       </mode>
       <mode name="lut5x2">
        <pb_type name="D5LUT" num_pb="2" class="lut" blif_model=".names">
         <input name="in" num_pins="5" port_class="lut_in"/>
         <output name="out" num_pins="1" port_class="lut_out"/>
         <delay_matrix type="max" in_port="D5LUT.in" out_port="D5LUT.out">
 0.068e-9
 0.068e-9
 0.068e-9
 0.068e-9
 0.068e-9
 </delay_matrix>
        </pb_type>
        <interconnect>
         <!-- First LUT5 -->
         <!-- Second LUT5 -->
         <direct name="DLUT_A6" input="DLUT.A6" output="D5LUT[0].in[4]"/>
         <direct name="DLUT_A5" input="DLUT.A5" output="D5LUT[1].in[4]"/>
         <direct name="DLUT_A4_0" input="DLUT.A4" output="D5LUT[0].in[3]"/>
         <direct name="DLUT_A4_1" input="DLUT.A4" output="D5LUT[1].in[3]"/>
         <direct name="DLUT_A3_0" input="DLUT.A3" output="D5LUT[0].in[2]"/>
         <direct name="DLUT_A3_1" input="DLUT.A3" output="D5LUT[1].in[2]"/>
         <direct name="DLUT_A2_0" input="DLUT.A2" output="D5LUT[0].in[1]"/>
         <direct name="DLUT_A2_1" input="DLUT.A2" output="D5LUT[1].in[1]"/>
         <direct name="DLUT_A1_0" input="DLUT.A1" output="D5LUT[0].in[0]"/>
         <direct name="DLUT_A1_1" input="DLUT.A1" output="D5LUT[1].in[0]"/>
         <direct name="O5" input="D5LUT[0].out" output="DLUT.O5"/>
         <direct name="O6" input="D5LUT[1].out" output="DLUT.O6"/>
        </interconnect>
       </mode>
      </pb_type>
      <pb_type name="F7BMUX" num_pb="1" blif_model=".subckt F7BMUX">
       <!--
Generated with ../../../../../utils/mux_gen.py
-->
       <input name="I0" num_pins="1"/>
       <input name="I1" num_pins="1"/>
       <input name="S0" num_pins="1"/>
       <output name="OUT" num_pins="1"/>
       <delay_constant in_port="F7BMUX.I0" max="10e-12" out_port="F7BMUX.OUT"/>
       <delay_constant in_port="F7BMUX.I1" max="10e-12" out_port="F7BMUX.OUT"/>
       <delay_constant in_port="F7BMUX.S0" max="10e-12" out_port="F7BMUX.OUT"/>
      </pb_type>
      <pb_type name="F8MUX" num_pb="1" blif_model=".subckt F8MUX">
       <!--
Generated with ../../../../../utils/mux_gen.py
-->
       <input name="I0" num_pins="1"/>
       <input name="I1" num_pins="1"/>
       <input name="S0" num_pins="1"/>
       <output name="OUT" num_pins="1"/>
       <delay_constant in_port="F8MUX.I0" max="10e-12" out_port="F8MUX.OUT"/>
       <delay_constant in_port="F8MUX.I1" max="10e-12" out_port="F8MUX.OUT"/>
       <delay_constant in_port="F8MUX.S0" max="10e-12" out_port="F8MUX.OUT"/>
      </pb_type>
      <!-- D5FF, C5FF, B5FF, A5FF == W5FF -->
      <pb_type name="A5FFMUX" num_pb="1">
       <!--
Generated with ../../../../../utils/mux_gen.py
-->
       <input name="IN_B" num_pins="1"/>
       <input name="IN_A" num_pins="1"/>
       <output name="O" num_pins="1"/>
       <pb_type name="BUF" num_pb="1">
        <input name="I" num_pins="1"/>
        <output name="O" num_pins="1"/>
        <pb_type name="BUF_DUMMY" num_pb="1" blif_model=".subckt BUF_DUMMY">
         <input name="I" num_pins="1"/>
         <output name="O" num_pins="1"/>
         <delay_constant max="10e12" in_port="BUF_DUMMY.I" out_port="BUF_DUMMY.O"/>
        </pb_type>
        <interconnect>
         <direct name="A" input="BUF.I" output="BUF_DUMMY.I"/>
         <mux name="BYPASS" input="BUF.I BUF_DUMMY.O" output="BUF.O"/>
        </interconnect>
       </pb_type>
       <interconnect>
        <mux input="A5FFMUX.IN_B A5FFMUX.IN_A" name="A5FFMUX_IN" output="BUF.I"/>
        <direct input="BUF.O" name="A5FFMUX_OUT" output="A5FFMUX.O"/>
       </interconnect>
      </pb_type>
      <pb_type name="B5FFMUX" num_pb="1">
       <!--
Generated with ../../../../../utils/mux_gen.py
-->
       <input name="IN_B" num_pins="1"/>
       <input name="IN_A" num_pins="1"/>
       <output name="O" num_pins="1"/>
       <pb_type name="BUF" num_pb="1">
        <input name="I" num_pins="1"/>
        <output name="O" num_pins="1"/>
        <pb_type name="BUF_DUMMY" num_pb="1" blif_model=".subckt BUF_DUMMY">
         <input name="I" num_pins="1"/>
         <output name="O" num_pins="1"/>
         <delay_constant max="10e12" in_port="BUF_DUMMY.I" out_port="BUF_DUMMY.O"/>
        </pb_type>
        <interconnect>
         <direct name="A" input="BUF.I" output="BUF_DUMMY.I"/>
         <mux name="BYPASS" input="BUF.I BUF_DUMMY.O" output="BUF.O"/>
        </interconnect>
       </pb_type>
       <interconnect>
        <mux input="B5FFMUX.IN_B B5FFMUX.IN_A" name="B5FFMUX_IN" output="BUF.I"/>
        <direct input="BUF.O" name="B5FFMUX_OUT" output="B5FFMUX.O"/>
       </interconnect>
      </pb_type>
      <pb_type name="C5FFMUX" num_pb="1">
       <!--
Generated with ../../../../../utils/mux_gen.py
-->
       <input name="IN_B" num_pins="1"/>
       <input name="IN_A" num_pins="1"/>
       <output name="O" num_pins="1"/>
       <pb_type name="BUF" num_pb="1">
        <input name="I" num_pins="1"/>
        <output name="O" num_pins="1"/>
        <pb_type name="BUF_DUMMY" num_pb="1" blif_model=".subckt BUF_DUMMY">
         <input name="I" num_pins="1"/>
         <output name="O" num_pins="1"/>
         <delay_constant max="10e12" in_port="BUF_DUMMY.I" out_port="BUF_DUMMY.O"/>
        </pb_type>
        <interconnect>
         <direct name="A" input="BUF.I" output="BUF_DUMMY.I"/>
         <mux name="BYPASS" input="BUF.I BUF_DUMMY.O" output="BUF.O"/>
        </interconnect>
       </pb_type>
       <interconnect>
        <mux input="C5FFMUX.IN_B C5FFMUX.IN_A" name="C5FFMUX_IN" output="BUF.I"/>
        <direct input="BUF.O" name="C5FFMUX_OUT" output="C5FFMUX.O"/>
       </interconnect>
      </pb_type>
      <pb_type name="D5FFMUX" num_pb="1">
       <!--
Generated with ../../../../../utils/mux_gen.py
-->
       <input name="IN_B" num_pins="1"/>
       <input name="IN_A" num_pins="1"/>
       <output name="O" num_pins="1"/>
       <pb_type name="BUF" num_pb="1">
        <input name="I" num_pins="1"/>
        <output name="O" num_pins="1"/>
        <pb_type name="BUF_DUMMY" num_pb="1" blif_model=".subckt BUF_DUMMY">
         <input name="I" num_pins="1"/>
         <output name="O" num_pins="1"/>
         <delay_constant max="10e12" in_port="BUF_DUMMY.I" out_port="BUF_DUMMY.O"/>
        </pb_type>
        <interconnect>
         <direct name="A" input="BUF.I" output="BUF_DUMMY.I"/>
         <mux name="BYPASS" input="BUF.I BUF_DUMMY.O" output="BUF.O"/>
        </interconnect>
       </pb_type>
       <interconnect>
        <mux input="D5FFMUX.IN_B D5FFMUX.IN_A" name="D5FFMUX_IN" output="BUF.I"/>
        <direct input="BUF.O" name="D5FFMUX_OUT" output="D5FFMUX.O"/>
       </interconnect>
      </pb_type>
      <!-- D5FF, C5FF, B5FF, A5FF == W5FF -->
      <pb_type name="A5FF" num_pb="1">
       <input name="D" num_pins="1"/>
       <input name="CE" num_pins="1"/>
       <clock name="CK" num_pins="1"/>
       <input name="SR" num_pins="1"/>
       <output name="Q" num_pins="1"/>
       <pb_type name="FF" num_pb="1" class="flipflop" blif_model=".latch">
        <input name="D" num_pins="1" port_class="D"/>
        <output name="Q" num_pins="1" port_class="Q"/>
        <clock name="clk" num_pins="1" port_class="clock"/>
        <!-- TRCE: Tas -->
        <T_setup value="0.301e-9" port="FF.D" clock="clk"/>
        <!-- TRCE: Tcko -->
        <T_clock_to_Q max="0.381e-9" port="FF.Q" clock="clk"/>
       </pb_type>
       <interconnect>
        <direct name="D" input="A5FF.D" output="FF.D"/>
        <direct name="Q" input="FF.Q" output="A5FF.Q"/>
        <direct name="C" input="A5FF.CK" output="FF.clk"/>
       </interconnect>
      </pb_type>
      <!-- D5FF, C5FF, B5FF, A5FF == W5FF -->
      <pb_type name="B5FF" num_pb="1">
       <input name="D" num_pins="1"/>
       <input name="CE" num_pins="1"/>
       <clock name="CK" num_pins="1"/>
       <input name="SR" num_pins="1"/>
       <output name="Q" num_pins="1"/>
       <pb_type name="FF" num_pb="1" class="flipflop" blif_model=".latch">
        <input name="D" num_pins="1" port_class="D"/>
        <output name="Q" num_pins="1" port_class="Q"/>
        <clock name="clk" num_pins="1" port_class="clock"/>
        <!-- TRCE: Tas -->
        <T_setup value="0.301e-9" port="FF.D" clock="clk"/>
        <!-- TRCE: Tcko -->
        <T_clock_to_Q max="0.381e-9" port="FF.Q" clock="clk"/>
       </pb_type>
       <interconnect>
        <direct name="D" input="B5FF.D" output="FF.D"/>
        <direct name="Q" input="FF.Q" output="B5FF.Q"/>
        <direct name="C" input="B5FF.CK" output="FF.clk"/>
       </interconnect>
      </pb_type>
      <!-- D5FF, C5FF, B5FF, A5FF == W5FF -->
      <pb_type name="C5FF" num_pb="1">
       <input name="D" num_pins="1"/>
       <input name="CE" num_pins="1"/>
       <clock name="CK" num_pins="1"/>
       <input name="SR" num_pins="1"/>
       <output name="Q" num_pins="1"/>
       <pb_type name="FF" num_pb="1" class="flipflop" blif_model=".latch">
        <input name="D" num_pins="1" port_class="D"/>
        <output name="Q" num_pins="1" port_class="Q"/>
        <clock name="clk" num_pins="1" port_class="clock"/>
        <!-- TRCE: Tas -->
        <T_setup value="0.301e-9" port="FF.D" clock="clk"/>
        <!-- TRCE: Tcko -->
        <T_clock_to_Q max="0.381e-9" port="FF.Q" clock="clk"/>
       </pb_type>
       <interconnect>
        <direct name="D" input="C5FF.D" output="FF.D"/>
        <direct name="Q" input="FF.Q" output="C5FF.Q"/>
        <direct name="C" input="C5FF.CK" output="FF.clk"/>
       </interconnect>
      </pb_type>
      <!-- D5FF, C5FF, B5FF, A5FF == W5FF -->
      <pb_type name="D5FF" num_pb="1">
       <input name="D" num_pins="1"/>
       <input name="CE" num_pins="1"/>
       <clock name="CK" num_pins="1"/>
       <input name="SR" num_pins="1"/>
       <output name="Q" num_pins="1"/>
       <pb_type name="FF" num_pb="1" class="flipflop" blif_model=".latch">
        <input name="D" num_pins="1" port_class="D"/>
        <output name="Q" num_pins="1" port_class="Q"/>
        <clock name="clk" num_pins="1" port_class="clock"/>
        <!-- TRCE: Tas -->
        <T_setup value="0.301e-9" port="FF.D" clock="clk"/>
        <!-- TRCE: Tcko -->
        <T_clock_to_Q max="0.381e-9" port="FF.Q" clock="clk"/>
       </pb_type>
       <interconnect>
        <direct name="D" input="D5FF.D" output="FF.D"/>
        <direct name="Q" input="FF.Q" output="D5FF.Q"/>
        <direct name="C" input="D5FF.CK" output="FF.clk"/>
       </interconnect>
      </pb_type>
      <!-- DFF, CFF, BFF, AFF == WFF -->
      <!-- DFF, CFF, BFF, AFF == WFF -->
      <pb_type name="AFF" num_pb="1">
       <input name="D" num_pins="1"/>
       <input name="CE" num_pins="1"/>
       <clock name="CK" num_pins="1"/>
       <input name="SR" num_pins="1"/>
       <output name="Q" num_pins="1"/>
       <mode name="VPR_FF">
        <pb_type name="FF" num_pb="1" class="flipflop" blif_model=".latch">
         <input name="D" num_pins="1" port_class="D"/>
         <output name="Q" num_pins="1" port_class="Q"/>
         <clock name="clk" num_pins="1" port_class="clock"/>
         <!-- TRCE: Tas -->
         <T_setup value="0.301e-9" port="FF.D" clock="clk"/>
         <!-- TRCE: Tcko -->
         <T_clock_to_Q max="0.381e-9" port="FF.Q" clock="clk"/>
        </pb_type>
        <interconnect>
         <direct name="D" input="AFF.D" output="FF.D"/>
         <direct name="C" input="AFF.CK" output="FF.clk"/>
         <direct name="Q" input="FF.Q" output="AFF.Q"/>
        </interconnect>
       </mode>
       <mode name="FDRE">
        <pb_type name="FDRE" num_pb="1" blif_model=".subckt FDRE">
         <input name="D" num_pins="1"/>
         <input name="CE" num_pins="1"/>
         <clock name="C" num_pins="1"/>
         <input name="R" num_pins="1"/>
         <output name="Q" num_pins="1"/>
         <T_setup value="10e-12" port="FDRE.D" clock="C"/>
         <T_setup value="10e-12" port="FDRE.CE" clock="C"/>
         <T_setup value="10e-12" port="FDRE.R" clock="C"/>
         <T_clock_to_Q max="10e-12" port="FDRE.Q" clock="C"/>
        </pb_type>
        <interconnect>
         <direct name="D" input="AFF.D" output="FDRE.D"/>
         <direct name="CE" input="AFF.CE" output="FDRE.CE"/>
         <direct name="C" input="AFF.CK" output="FDRE.C"/>
         <direct name="R" input="AFF.SR" output="FDRE.R"/>
         <direct name="Q" input="FDRE.Q" output="AFF.Q"/>
        </interconnect>
       </mode>
      </pb_type>
      <!-- DFF, CFF, BFF, AFF == WFF -->
      <pb_type name="BFF" num_pb="1">
       <input name="D" num_pins="1"/>
       <input name="CE" num_pins="1"/>
       <clock name="CK" num_pins="1"/>
       <input name="SR" num_pins="1"/>
       <output name="Q" num_pins="1"/>
       <mode name="VPR_FF">
        <pb_type name="FF" num_pb="1" class="flipflop" blif_model=".latch">
         <input name="D" num_pins="1" port_class="D"/>
         <output name="Q" num_pins="1" port_class="Q"/>
         <clock name="clk" num_pins="1" port_class="clock"/>
         <!-- TRCE: Tas -->
         <T_setup value="0.301e-9" port="FF.D" clock="clk"/>
         <!-- TRCE: Tcko -->
         <T_clock_to_Q max="0.381e-9" port="FF.Q" clock="clk"/>
        </pb_type>
        <interconnect>
         <direct name="D" input="BFF.D" output="FF.D"/>
         <direct name="C" input="BFF.CK" output="FF.clk"/>
         <direct name="Q" input="FF.Q" output="BFF.Q"/>
        </interconnect>
       </mode>
       <mode name="FDRE">
        <pb_type name="FDRE" num_pb="1" blif_model=".subckt FDRE">
         <input name="D" num_pins="1"/>
         <input name="CE" num_pins="1"/>
         <clock name="C" num_pins="1"/>
         <input name="R" num_pins="1"/>
         <output name="Q" num_pins="1"/>
         <T_setup value="10e-12" port="FDRE.D" clock="C"/>
         <T_setup value="10e-12" port="FDRE.CE" clock="C"/>
         <T_setup value="10e-12" port="FDRE.R" clock="C"/>
         <T_clock_to_Q max="10e-12" port="FDRE.Q" clock="C"/>
        </pb_type>
        <interconnect>
         <direct name="D" input="BFF.D" output="FDRE.D"/>
         <direct name="CE" input="BFF.CE" output="FDRE.CE"/>
         <direct name="C" input="BFF.CK" output="FDRE.C"/>
         <direct name="R" input="BFF.SR" output="FDRE.R"/>
         <direct name="Q" input="FDRE.Q" output="BFF.Q"/>
        </interconnect>
       </mode>
      </pb_type>
      <!-- DFF, CFF, BFF, AFF == WFF -->
      <pb_type name="CFF" num_pb="1">
       <input name="D" num_pins="1"/>
       <input name="CE" num_pins="1"/>
       <clock name="CK" num_pins="1"/>
       <input name="SR" num_pins="1"/>
       <output name="Q" num_pins="1"/>
       <mode name="VPR_FF">
        <pb_type name="FF" num_pb="1" class="flipflop" blif_model=".latch">
         <input name="D" num_pins="1" port_class="D"/>
         <output name="Q" num_pins="1" port_class="Q"/>
         <clock name="clk" num_pins="1" port_class="clock"/>
         <!-- TRCE: Tas -->
         <T_setup value="0.301e-9" port="FF.D" clock="clk"/>
         <!-- TRCE: Tcko -->
         <T_clock_to_Q max="0.381e-9" port="FF.Q" clock="clk"/>
        </pb_type>
        <interconnect>
         <direct name="D" input="CFF.D" output="FF.D"/>
         <direct name="C" input="CFF.CK" output="FF.clk"/>
         <direct name="Q" input="FF.Q" output="CFF.Q"/>
        </interconnect>
       </mode>
       <mode name="FDRE">
        <pb_type name="FDRE" num_pb="1" blif_model=".subckt FDRE">
         <input name="D" num_pins="1"/>
         <input name="CE" num_pins="1"/>
         <clock name="C" num_pins="1"/>
         <input name="R" num_pins="1"/>
         <output name="Q" num_pins="1"/>
         <T_setup value="10e-12" port="FDRE.D" clock="C"/>
         <T_setup value="10e-12" port="FDRE.CE" clock="C"/>
         <T_setup value="10e-12" port="FDRE.R" clock="C"/>
         <T_clock_to_Q max="10e-12" port="FDRE.Q" clock="C"/>
        </pb_type>
        <interconnect>
         <direct name="D" input="CFF.D" output="FDRE.D"/>
         <direct name="CE" input="CFF.CE" output="FDRE.CE"/>
         <direct name="C" input="CFF.CK" output="FDRE.C"/>
         <direct name="R" input="CFF.SR" output="FDRE.R"/>
         <direct name="Q" input="FDRE.Q" output="CFF.Q"/>
        </interconnect>
       </mode>
      </pb_type>
      <!-- DFF, CFF, BFF, AFF == WFF -->
      <pb_type name="DFF" num_pb="1">
       <input name="D" num_pins="1"/>
       <input name="CE" num_pins="1"/>
       <clock name="CK" num_pins="1"/>
       <input name="SR" num_pins="1"/>
       <output name="Q" num_pins="1"/>
       <mode name="VPR_FF">
        <pb_type name="FF" num_pb="1" class="flipflop" blif_model=".latch">
         <input name="D" num_pins="1" port_class="D"/>
         <output name="Q" num_pins="1" port_class="Q"/>
         <clock name="clk" num_pins="1" port_class="clock"/>
         <!-- TRCE: Tas -->
         <T_setup value="0.301e-9" port="FF.D" clock="clk"/>
         <!-- TRCE: Tcko -->
         <T_clock_to_Q max="0.381e-9" port="FF.Q" clock="clk"/>
        </pb_type>
        <interconnect>
         <direct name="D" input="DFF.D" output="FF.D"/>
         <direct name="C" input="DFF.CK" output="FF.clk"/>
         <direct name="Q" input="FF.Q" output="DFF.Q"/>
        </interconnect>
       </mode>
       <mode name="FDRE">
        <pb_type name="FDRE" num_pb="1" blif_model=".subckt FDRE">
         <input name="D" num_pins="1"/>
         <input name="CE" num_pins="1"/>
         <clock name="C" num_pins="1"/>
         <input name="R" num_pins="1"/>
         <output name="Q" num_pins="1"/>
         <T_setup value="10e-12" port="FDRE.D" clock="C"/>
         <T_setup value="10e-12" port="FDRE.CE" clock="C"/>
         <T_setup value="10e-12" port="FDRE.R" clock="C"/>
         <T_clock_to_Q max="10e-12" port="FDRE.Q" clock="C"/>
        </pb_type>
        <interconnect>
         <direct name="D" input="DFF.D" output="FDRE.D"/>
         <direct name="CE" input="DFF.CE" output="FDRE.CE"/>
         <direct name="C" input="DFF.CK" output="FDRE.C"/>
         <direct name="R" input="DFF.SR" output="FDRE.R"/>
         <direct name="Q" input="FDRE.Q" output="DFF.Q"/>
        </interconnect>
       </mode>
      </pb_type>
      <!-- CARRY4 logic -->
      <pb_type name="PRECYINIT_MUX" num_pb="1">
       <!--
Generated with ../../../../../utils/mux_gen.py
-->
       <input name="CI" num_pins="1"/>
       <input name="CYINIT" num_pins="1"/>
       <output name="OUT" num_pins="1"/>
       <pb_type name="BUF" num_pb="1">
        <input name="I" num_pins="1"/>
        <output name="O" num_pins="1"/>
        <pb_type name="BUF_DUMMY" num_pb="1" blif_model=".subckt BUF_DUMMY">
         <input name="I" num_pins="1"/>
         <output name="O" num_pins="1"/>
         <delay_constant max="10e12" in_port="BUF_DUMMY.I" out_port="BUF_DUMMY.O"/>
        </pb_type>
        <interconnect>
         <direct name="A" input="BUF.I" output="BUF_DUMMY.I"/>
         <mux name="BYPASS" input="BUF.I BUF_DUMMY.O" output="BUF.O"/>
        </interconnect>
       </pb_type>
       <interconnect>
        <mux input="PRECYINIT_MUX.CI PRECYINIT_MUX.CYINIT" name="PRECYINIT_MUX_IN" output="BUF.I"/>
        <direct input="BUF.O" name="PRECYINIT_MUX_OUT" output="PRECYINIT_MUX.OUT"/>
       </interconnect>
      </pb_type>
      <pb_type name="ACY0" num_pb="1">
       <!--
Generated with ../../../../../utils/mux_gen.py
-->
       <input name="O5" num_pins="1"/>
       <input name="AX" num_pins="1"/>
       <output name="O" num_pins="1"/>
       <pb_type name="BUF" num_pb="1">
        <input name="I" num_pins="1"/>
        <output name="O" num_pins="1"/>
        <pb_type name="BUF_DUMMY" num_pb="1" blif_model=".subckt BUF_DUMMY">
         <input name="I" num_pins="1"/>
         <output name="O" num_pins="1"/>
         <delay_constant max="10e12" in_port="BUF_DUMMY.I" out_port="BUF_DUMMY.O"/>
        </pb_type>
        <interconnect>
         <direct name="A" input="BUF.I" output="BUF_DUMMY.I"/>
         <mux name="BYPASS" input="BUF.I BUF_DUMMY.O" output="BUF.O"/>
        </interconnect>
       </pb_type>
       <interconnect>
        <mux input="ACY0.O5 ACY0.AX" name="ACY0_IN" output="BUF.I"/>
        <direct input="BUF.O" name="ACY0_OUT" output="ACY0.O"/>
       </interconnect>
      </pb_type>
      <pb_type name="BCY0" num_pb="1">
       <!--
Generated with ../../../../../utils/mux_gen.py
-->
       <input name="O5" num_pins="1"/>
       <input name="BX" num_pins="1"/>
       <output name="O" num_pins="1"/>
       <pb_type name="BUF" num_pb="1">
        <input name="I" num_pins="1"/>
        <output name="O" num_pins="1"/>
        <pb_type name="BUF_DUMMY" num_pb="1" blif_model=".subckt BUF_DUMMY">
         <input name="I" num_pins="1"/>
         <output name="O" num_pins="1"/>
         <delay_constant max="10e12" in_port="BUF_DUMMY.I" out_port="BUF_DUMMY.O"/>
        </pb_type>
        <interconnect>
         <direct name="A" input="BUF.I" output="BUF_DUMMY.I"/>
         <mux name="BYPASS" input="BUF.I BUF_DUMMY.O" output="BUF.O"/>
        </interconnect>
       </pb_type>
       <interconnect>
        <mux input="BCY0.O5 BCY0.BX" name="BCY0_IN" output="BUF.I"/>
        <direct input="BUF.O" name="BCY0_OUT" output="BCY0.O"/>
       </interconnect>
      </pb_type>
      <pb_type name="CCY0" num_pb="1">
       <!--
Generated with ../../../../../utils/mux_gen.py
-->
       <input name="O5" num_pins="1"/>
       <input name="CX" num_pins="1"/>
       <output name="O" num_pins="1"/>
       <pb_type name="BUF" num_pb="1">
        <input name="I" num_pins="1"/>
        <output name="O" num_pins="1"/>
        <pb_type name="BUF_DUMMY" num_pb="1" blif_model=".subckt BUF_DUMMY">
         <input name="I" num_pins="1"/>
         <output name="O" num_pins="1"/>
         <delay_constant max="10e12" in_port="BUF_DUMMY.I" out_port="BUF_DUMMY.O"/>
        </pb_type>
        <interconnect>
         <direct name="A" input="BUF.I" output="BUF_DUMMY.I"/>
         <mux name="BYPASS" input="BUF.I BUF_DUMMY.O" output="BUF.O"/>
        </interconnect>
       </pb_type>
       <interconnect>
        <mux input="CCY0.O5 CCY0.CX" name="CCY0_IN" output="BUF.I"/>
        <direct input="BUF.O" name="CCY0_OUT" output="CCY0.O"/>
       </interconnect>
      </pb_type>
      <pb_type name="DCY0" num_pb="1">
       <!--
Generated with ../../../../../utils/mux_gen.py
-->
       <input name="O5" num_pins="1"/>
       <input name="DX" num_pins="1"/>
       <output name="O" num_pins="1"/>
       <pb_type name="BUF" num_pb="1">
        <input name="I" num_pins="1"/>
        <output name="O" num_pins="1"/>
        <pb_type name="BUF_DUMMY" num_pb="1" blif_model=".subckt BUF_DUMMY">
         <input name="I" num_pins="1"/>
         <output name="O" num_pins="1"/>
         <delay_constant max="10e12" in_port="BUF_DUMMY.I" out_port="BUF_DUMMY.O"/>
        </pb_type>
        <interconnect>
         <direct name="A" input="BUF.I" output="BUF_DUMMY.I"/>
         <mux name="BYPASS" input="BUF.I BUF_DUMMY.O" output="BUF.O"/>
        </interconnect>
       </pb_type>
       <interconnect>
        <mux input="DCY0.O5 DCY0.DX" name="DCY0_IN" output="BUF.I"/>
        <direct input="BUF.O" name="DCY0_OUT" output="DCY0.O"/>
       </interconnect>
      </pb_type>
      <pb_type name="CARRY4" num_pb="1">
       <input name="S" num_pins="4"/>
       <input name="DI" num_pins="4"/>
       <output name="CO" num_pins="4"/>
       <output name="O" num_pins="4"/>
       <input name="CIN" num_pins="1"/>
       <mode name="COMPLETE">
        <pb_type name="CARRY4_COMPLETE" num_pb="1" blif_model=".subckt CARRY4">
         <input name="S" num_pins="4"/>
         <input name="DI" num_pins="4"/>
         <output name="CO" num_pins="4"/>
         <output name="O" num_pins="4"/>
         <input name="CIN" num_pins="1"/>
         <!-- CO output -->
         <delay_constant max="10e-12" in_port="CARRY4_COMPLETE.S" out_port="CARRY4_COMPLETE.CO"/>
         <delay_constant max="10e-12" in_port="CARRY4_COMPLETE.DI" out_port="CARRY4_COMPLETE.CO"/>
         <delay_constant max="10e-12" in_port="CARRY4_COMPLETE.CIN" out_port="CARRY4_COMPLETE.CO"/>
         <!-- O output -->
         <delay_constant max="10e-12" in_port="CARRY4_COMPLETE.S" out_port="CARRY4_COMPLETE.O"/>
         <delay_constant max="10e-12" in_port="CARRY4_COMPLETE.DI" out_port="CARRY4_COMPLETE.O"/>
         <delay_constant max="10e-12" in_port="CARRY4_COMPLETE.CIN" out_port="CARRY4_COMPLETE.O"/>
        </pb_type>
        <interconnect>
         <direct name="S" input="CARRY4.S" output="CARRY4_COMPLETE.S"/>
         <direct name="DI" input="CARRY4.DI" output="CARRY4_COMPLETE.DI"/>
         <direct name="CO" input="CARRY4_COMPLETE.CO" output="CARRY4.CO"/>
         <direct name="O" input="CARRY4_COMPLETE.O" output="CARRY4.O"/>
         <direct name="CIN" input="CARRY4.CIN" output="CARRY4_COMPLETE.CIN"/>
        </interconnect>
       </mode>
       <mode name="SPLIT">
        <pb_type name="CARRY4_AMUX" num_pb="1" blif_model=".subckt MUXCY">
         <!--
Generated with ../../../../../../utils/mux_gen.py
-->
         <input name="CI" num_pins="1"/>
         <input name="DI" num_pins="1"/>
         <input name="S" num_pins="1"/>
         <output name="O" num_pins="1"/>
         <delay_constant in_port="CARRY4_AMUX.CI" max="10e-12" out_port="CARRY4_AMUX.O"/>
         <delay_constant in_port="CARRY4_AMUX.DI" max="10e-12" out_port="CARRY4_AMUX.O"/>
         <delay_constant in_port="CARRY4_AMUX.S" max="10e-12" out_port="CARRY4_AMUX.O"/>
        </pb_type>
        <pb_type name="CARRY4_BMUX" num_pb="1" blif_model=".subckt MUXCY">
         <!--
Generated with ../../../../../../utils/mux_gen.py
-->
         <input name="CI" num_pins="1"/>
         <input name="DI" num_pins="1"/>
         <input name="S" num_pins="1"/>
         <output name="O" num_pins="1"/>
         <delay_constant in_port="CARRY4_BMUX.CI" max="10e-12" out_port="CARRY4_BMUX.O"/>
         <delay_constant in_port="CARRY4_BMUX.DI" max="10e-12" out_port="CARRY4_BMUX.O"/>
         <delay_constant in_port="CARRY4_BMUX.S" max="10e-12" out_port="CARRY4_BMUX.O"/>
        </pb_type>
        <pb_type name="CARRY4_CMUX" num_pb="1" blif_model=".subckt MUXCY">
         <!--
Generated with ../../../../../../utils/mux_gen.py
-->
         <input name="CI" num_pins="1"/>
         <input name="DI" num_pins="1"/>
         <input name="S" num_pins="1"/>
         <output name="O" num_pins="1"/>
         <delay_constant in_port="CARRY4_CMUX.CI" max="10e-12" out_port="CARRY4_CMUX.O"/>
         <delay_constant in_port="CARRY4_CMUX.DI" max="10e-12" out_port="CARRY4_CMUX.O"/>
         <delay_constant in_port="CARRY4_CMUX.S" max="10e-12" out_port="CARRY4_CMUX.O"/>
        </pb_type>
        <pb_type name="CARRY4_DMUX" num_pb="1" blif_model=".subckt MUXCY">
         <!--
Generated with ../../../../../../utils/mux_gen.py
-->
         <input name="CI" num_pins="1"/>
         <input name="DI" num_pins="1"/>
         <input name="S" num_pins="1"/>
         <output name="O" num_pins="1"/>
         <delay_constant in_port="CARRY4_DMUX.CI" max="10e-12" out_port="CARRY4_DMUX.O"/>
         <delay_constant in_port="CARRY4_DMUX.DI" max="10e-12" out_port="CARRY4_DMUX.O"/>
         <delay_constant in_port="CARRY4_DMUX.S" max="10e-12" out_port="CARRY4_DMUX.O"/>
        </pb_type>
        <pb_type blif_model=".subckt XORCY" name="CARRY4_AXOR" num_pb="1">
         <input name="CI" num_pins="1"/>
         <input name="LI" num_pins="1"/>
         <output name="O" num_pins="1"/>
         <delay_constant in_port="CARRY4_AXOR.CI" max="10e-12" out_port="CARRY4_AXOR.O"/>
         <delay_constant in_port="CARRY4_AXOR.LI" max="10e-12" out_port="CARRY4_AXOR.O"/>
        </pb_type>
        <pb_type blif_model=".subckt XORCY" name="CARRY4_BXOR" num_pb="1">
         <input name="CI" num_pins="1"/>
         <input name="LI" num_pins="1"/>
         <output name="O" num_pins="1"/>
         <delay_constant in_port="CARRY4_BXOR.CI" max="10e-12" out_port="CARRY4_BXOR.O"/>
         <delay_constant in_port="CARRY4_BXOR.LI" max="10e-12" out_port="CARRY4_BXOR.O"/>
        </pb_type>
        <pb_type blif_model=".subckt XORCY" name="CARRY4_CXOR" num_pb="1">
         <input name="CI" num_pins="1"/>
         <input name="LI" num_pins="1"/>
         <output name="O" num_pins="1"/>
         <delay_constant in_port="CARRY4_CXOR.CI" max="10e-12" out_port="CARRY4_CXOR.O"/>
         <delay_constant in_port="CARRY4_CXOR.LI" max="10e-12" out_port="CARRY4_CXOR.O"/>
        </pb_type>
        <pb_type blif_model=".subckt XORCY" name="CARRY4_DXOR" num_pb="1">
         <input name="CI" num_pins="1"/>
         <input name="LI" num_pins="1"/>
         <output name="O" num_pins="1"/>
         <delay_constant in_port="CARRY4_DXOR.CI" max="10e-12" out_port="CARRY4_DXOR.O"/>
         <delay_constant in_port="CARRY4_DXOR.LI" max="10e-12" out_port="CARRY4_DXOR.O"/>
        </pb_type>
        <interconnect>
         <direct name="MUX0_DI" input="CARRY4.DI[0]" output="CARRY4_AMUX.DI"/>
         <direct name="MUX0_CI" input="CARRY4.CIN" output="CARRY4_AMUX.CI"/>
         <direct name="MUX0_S" input="CARRY4.S[0]" output="CARRY4_AMUX.S"/>
         <direct name="MUX0_O" input="CARRY4_AMUX.O" output="CARRY4.CO[0]"/>
         <direct name="MUX1_DI" input="CARRY4.DI[1]" output="CARRY4_BMUX.DI"/>
         <direct name="MUX1_CI" input="CARRY4_AMUX.O" output="CARRY4_BMUX.CI"/>
         <direct name="MUX1_S" input="CARRY4.S[1]" output="CARRY4_BMUX.S"/>
         <direct name="MUX1_O" input="CARRY4_BMUX.O" output="CARRY4.CO[1]"/>
         <direct name="MUX2_DI" input="CARRY4.DI[2]" output="CARRY4_CMUX.DI"/>
         <direct name="MUX2_CI" input="CARRY4_BMUX.O" output="CARRY4_CMUX.CI"/>
         <direct name="MUX2_S" input="CARRY4.S[2]" output="CARRY4_CMUX.S"/>
         <direct name="MUX2_O" input="CARRY4_CMUX.O" output="CARRY4.CO[2]"/>
         <direct name="MUX3_DI" input="CARRY4.DI[3]" output="CARRY4_DMUX.DI"/>
         <direct name="MUX3_CI" input="CARRY4_CMUX.O" output="CARRY4_DMUX.CI"/>
         <direct name="MUX3_S" input="CARRY4.S[3]" output="CARRY4_DMUX.S"/>
         <direct name="MUX3_O" input="CARRY4_DMUX.O" output="CARRY4.CO[3]"/>
         <direct name="XOR0_LI" input="CARRY4.S[0]" output="CARRY4_AXOR.LI"/>
         <direct name="XOR0_CI" input="CARRY4.CIN" output="CARRY4_AXOR.CI"/>
         <direct name="XOR0_O" input="CARRY4_AXOR.O" output="CARRY4.O[0]"/>
         <direct name="XOR1_LI" input="CARRY4.S[1]" output="CARRY4_BXOR.LI"/>
         <direct name="XOR1_CI" input="CARRY4_AMUX.O" output="CARRY4_BXOR.CI"/>
         <direct name="XOR1_O" input="CARRY4_BXOR.O" output="CARRY4.O[1]"/>
         <direct name="XOR2_LI" input="CARRY4.S[2]" output="CARRY4_CXOR.LI"/>
         <direct name="XOR2_CI" input="CARRY4_BMUX.O" output="CARRY4_CXOR.CI"/>
         <direct name="XOR2_O" input="CARRY4_CXOR.O" output="CARRY4.O[2]"/>
         <direct name="XOR3_LI" input="CARRY4.S[3]" output="CARRY4_DXOR.LI"/>
         <direct name="xOR3_CI" input="CARRY4_CMUX.O" output="CARRY4_DXOR.CI"/>
         <direct name="XOR3_O" input="CARRY4_DXOR.O" output="CARRY4.O[3]"/>
        </interconnect>
       </mode>
      </pb_type>
      <!-- WOUTMUX -->
      <pb_type name="AOUTMUX" num_pb="1">
       <!--
Generated with ../../../../../utils/mux_gen.py
-->
       <input name="A5Q" num_pins="1"/>
       <input name="XOR" num_pins="1"/>
       <input name="O6" num_pins="1"/>
       <input name="O5" num_pins="1"/>
       <input name="F7" num_pins="1"/>
       <input name="CY" num_pins="1"/>
       <output name="OUT" num_pins="1"/>
       <pb_type name="BUF" num_pb="1">
        <input name="I" num_pins="1"/>
        <output name="O" num_pins="1"/>
        <pb_type name="BUF_DUMMY" num_pb="1" blif_model=".subckt BUF_DUMMY">
         <input name="I" num_pins="1"/>
         <output name="O" num_pins="1"/>
         <delay_constant max="10e12" in_port="BUF_DUMMY.I" out_port="BUF_DUMMY.O"/>
        </pb_type>
        <interconnect>
         <direct name="A" input="BUF.I" output="BUF_DUMMY.I"/>
         <mux name="BYPASS" input="BUF.I BUF_DUMMY.O" output="BUF.O"/>
        </interconnect>
       </pb_type>
       <interconnect>
        <mux input="AOUTMUX.A5Q AOUTMUX.XOR AOUTMUX.O6 AOUTMUX.O5 AOUTMUX.F7 AOUTMUX.CY" name="AOUTMUX_IN" output="BUF.I"/>
        <direct input="BUF.O" name="AOUTMUX_OUT" output="AOUTMUX.OUT"/>
       </interconnect>
      </pb_type>
      <pb_type name="BOUTMUX" num_pb="1">
       <!--
Generated with ../../../../../utils/mux_gen.py
-->
       <input name="B5Q" num_pins="1"/>
       <input name="XOR" num_pins="1"/>
       <input name="O6" num_pins="1"/>
       <input name="O5" num_pins="1"/>
       <input name="F8" num_pins="1"/>
       <input name="CY" num_pins="1"/>
       <output name="OUT" num_pins="1"/>
       <pb_type name="BUF" num_pb="1">
        <input name="I" num_pins="1"/>
        <output name="O" num_pins="1"/>
        <pb_type name="BUF_DUMMY" num_pb="1" blif_model=".subckt BUF_DUMMY">
         <input name="I" num_pins="1"/>
         <output name="O" num_pins="1"/>
         <delay_constant max="10e12" in_port="BUF_DUMMY.I" out_port="BUF_DUMMY.O"/>
        </pb_type>
        <interconnect>
         <direct name="A" input="BUF.I" output="BUF_DUMMY.I"/>
         <mux name="BYPASS" input="BUF.I BUF_DUMMY.O" output="BUF.O"/>
        </interconnect>
       </pb_type>
       <interconnect>
        <mux input="BOUTMUX.B5Q BOUTMUX.XOR BOUTMUX.O6 BOUTMUX.O5 BOUTMUX.F8 BOUTMUX.CY" name="BOUTMUX_IN" output="BUF.I"/>
        <direct input="BUF.O" name="BOUTMUX_OUT" output="BOUTMUX.OUT"/>
       </interconnect>
      </pb_type>
      <pb_type name="COUTMUX" num_pb="1">
       <!--
Generated with ../../../../../utils/mux_gen.py
-->
       <input name="C5Q" num_pins="1"/>
       <input name="XOR" num_pins="1"/>
       <input name="O6" num_pins="1"/>
       <input name="O5" num_pins="1"/>
       <input name="F7" num_pins="1"/>
       <input name="CY" num_pins="1"/>
       <output name="OUT" num_pins="1"/>
       <pb_type name="BUF" num_pb="1">
        <input name="I" num_pins="1"/>
        <output name="O" num_pins="1"/>
        <pb_type name="BUF_DUMMY" num_pb="1" blif_model=".subckt BUF_DUMMY">
         <input name="I" num_pins="1"/>
         <output name="O" num_pins="1"/>
         <delay_constant max="10e12" in_port="BUF_DUMMY.I" out_port="BUF_DUMMY.O"/>
        </pb_type>
        <interconnect>
         <direct name="A" input="BUF.I" output="BUF_DUMMY.I"/>
         <mux name="BYPASS" input="BUF.I BUF_DUMMY.O" output="BUF.O"/>
        </interconnect>
       </pb_type>
       <interconnect>
        <mux input="COUTMUX.C5Q COUTMUX.XOR COUTMUX.O6 COUTMUX.O5 COUTMUX.F7 COUTMUX.CY" name="COUTMUX_IN" output="BUF.I"/>
        <direct input="BUF.O" name="COUTMUX_OUT" output="COUTMUX.OUT"/>
       </interconnect>
      </pb_type>
      <pb_type name="DOUTMUX" num_pb="1">
       <!--
Generated with ../../../../../utils/mux_gen.py
-->
       <input name="D5Q" num_pins="1"/>
       <input name="XOR" num_pins="1"/>
       <input name="O6" num_pins="1"/>
       <input name="O5" num_pins="1"/>
       <input name="CY" num_pins="1"/>
       <output name="OUT" num_pins="1"/>
       <pb_type name="BUF" num_pb="1">
        <input name="I" num_pins="1"/>
        <output name="O" num_pins="1"/>
        <pb_type name="BUF_DUMMY" num_pb="1" blif_model=".subckt BUF_DUMMY">
         <input name="I" num_pins="1"/>
         <output name="O" num_pins="1"/>
         <delay_constant max="10e12" in_port="BUF_DUMMY.I" out_port="BUF_DUMMY.O"/>
        </pb_type>
        <interconnect>
         <direct name="A" input="BUF.I" output="BUF_DUMMY.I"/>
         <mux name="BYPASS" input="BUF.I BUF_DUMMY.O" output="BUF.O"/>
        </interconnect>
       </pb_type>
       <interconnect>
        <mux input="DOUTMUX.D5Q DOUTMUX.XOR DOUTMUX.O6 DOUTMUX.O5 DOUTMUX.CY" name="DOUTMUX_IN" output="BUF.I"/>
        <direct input="BUF.O" name="DOUTMUX_OUT" output="DOUTMUX.OUT"/>
       </interconnect>
      </pb_type>
      <!-- WFFMUX -->
      <pb_type name="AFFMUX" num_pb="1">
       <!--
Generated with ../../../../../utils/mux_gen.py
-->
       <input name="XOR" num_pins="1"/>
       <input name="O6" num_pins="1"/>
       <input name="O5" num_pins="1"/>
       <input name="F7" num_pins="1"/>
       <input name="CY" num_pins="1"/>
       <input name="AX" num_pins="1"/>
       <output name="OUT" num_pins="1"/>
       <pb_type name="BUF" num_pb="1">
        <input name="I" num_pins="1"/>
        <output name="O" num_pins="1"/>
        <pb_type name="BUF_DUMMY" num_pb="1" blif_model=".subckt BUF_DUMMY">
         <input name="I" num_pins="1"/>
         <output name="O" num_pins="1"/>
         <delay_constant max="10e12" in_port="BUF_DUMMY.I" out_port="BUF_DUMMY.O"/>
        </pb_type>
        <interconnect>
         <direct name="A" input="BUF.I" output="BUF_DUMMY.I"/>
         <mux name="BYPASS" input="BUF.I BUF_DUMMY.O" output="BUF.O"/>
        </interconnect>
       </pb_type>
       <interconnect>
        <mux input="AFFMUX.XOR AFFMUX.O6 AFFMUX.O5 AFFMUX.F7 AFFMUX.CY AFFMUX.AX" name="AFFMUX_IN" output="BUF.I"/>
        <direct input="BUF.O" name="AFFMUX_OUT" output="AFFMUX.OUT"/>
       </interconnect>
      </pb_type>
      <pb_type name="BFFMUX" num_pb="1">
       <!--
Generated with ../../../../../utils/mux_gen.py
-->
       <input name="XOR" num_pins="1"/>
       <input name="O6" num_pins="1"/>
       <input name="O5" num_pins="1"/>
       <input name="F8" num_pins="1"/>
       <input name="CY" num_pins="1"/>
       <input name="BX" num_pins="1"/>
       <output name="OUT" num_pins="1"/>
       <pb_type name="BUF" num_pb="1">
        <input name="I" num_pins="1"/>
        <output name="O" num_pins="1"/>
        <pb_type name="BUF_DUMMY" num_pb="1" blif_model=".subckt BUF_DUMMY">
         <input name="I" num_pins="1"/>
         <output name="O" num_pins="1"/>
         <delay_constant max="10e12" in_port="BUF_DUMMY.I" out_port="BUF_DUMMY.O"/>
        </pb_type>
        <interconnect>
         <direct name="A" input="BUF.I" output="BUF_DUMMY.I"/>
         <mux name="BYPASS" input="BUF.I BUF_DUMMY.O" output="BUF.O"/>
        </interconnect>
       </pb_type>
       <interconnect>
        <mux input="BFFMUX.XOR BFFMUX.O6 BFFMUX.O5 BFFMUX.F8 BFFMUX.CY BFFMUX.BX" name="BFFMUX_IN" output="BUF.I"/>
        <direct input="BUF.O" name="BFFMUX_OUT" output="BFFMUX.OUT"/>
       </interconnect>
      </pb_type>
      <pb_type name="CFFMUX" num_pb="1">
       <!--
Generated with ../../../../../utils/mux_gen.py
-->
       <input name="XOR" num_pins="1"/>
       <input name="O6" num_pins="1"/>
       <input name="O5" num_pins="1"/>
       <input name="F7" num_pins="1"/>
       <input name="CY" num_pins="1"/>
       <input name="CX" num_pins="1"/>
       <output name="OUT" num_pins="1"/>
       <pb_type name="BUF" num_pb="1">
        <input name="I" num_pins="1"/>
        <output name="O" num_pins="1"/>
        <pb_type name="BUF_DUMMY" num_pb="1" blif_model=".subckt BUF_DUMMY">
         <input name="I" num_pins="1"/>
         <output name="O" num_pins="1"/>
         <delay_constant max="10e12" in_port="BUF_DUMMY.I" out_port="BUF_DUMMY.O"/>
        </pb_type>
        <interconnect>
         <direct name="A" input="BUF.I" output="BUF_DUMMY.I"/>
         <mux name="BYPASS" input="BUF.I BUF_DUMMY.O" output="BUF.O"/>
        </interconnect>
       </pb_type>
       <interconnect>
        <mux input="CFFMUX.XOR CFFMUX.O6 CFFMUX.O5 CFFMUX.F7 CFFMUX.CY CFFMUX.CX" name="CFFMUX_IN" output="BUF.I"/>
        <direct input="BUF.O" name="CFFMUX_OUT" output="CFFMUX.OUT"/>
       </interconnect>
      </pb_type>
      <pb_type name="DFFMUX" num_pb="1">
       <!--
Generated with ../../../../../utils/mux_gen.py
-->
       <input name="XOR" num_pins="1"/>
       <input name="O6" num_pins="1"/>
       <input name="O5" num_pins="1"/>
       <input name="DX" num_pins="1"/>
       <input name="CY" num_pins="1"/>
       <output name="OUT" num_pins="1"/>
       <pb_type name="BUF" num_pb="1">
        <input name="I" num_pins="1"/>
        <output name="O" num_pins="1"/>
        <pb_type name="BUF_DUMMY" num_pb="1" blif_model=".subckt BUF_DUMMY">
         <input name="I" num_pins="1"/>
         <output name="O" num_pins="1"/>
         <delay_constant max="10e12" in_port="BUF_DUMMY.I" out_port="BUF_DUMMY.O"/>
        </pb_type>
        <interconnect>
         <direct name="A" input="BUF.I" output="BUF_DUMMY.I"/>
         <mux name="BYPASS" input="BUF.I BUF_DUMMY.O" output="BUF.O"/>
        </interconnect>
       </pb_type>
       <interconnect>
        <mux input="DFFMUX.XOR DFFMUX.O6 DFFMUX.O5 DFFMUX.DX DFFMUX.CY" name="DFFMUX_IN" output="BUF.I"/>
        <direct input="BUF.O" name="DFFMUX_OUT" output="DFFMUX.OUT"/>
       </interconnect>
      </pb_type>
      <!--
 <pb_type name="COUT_USED" num_pb="1" blif_model="">
 <input name="I0" num_pins="1"/>
 <input name="O0" num_pins="1"/>
 </pb_type>
 -->
      <!-- DUSED, CUSED, BUSED, AUSED
 <pb_type name="USED" num_pb="4" blif_model="">
 <input name="I0" num_pins="1"/>
 <input name="O0" num_pins="1"/>
 </pb_type>
 -->
      <interconnect>
       <direct name="D1" input="SLICEL.D1" output="DLUT.A1"/>
       <direct name="D2" input="SLICEL.D2" output="DLUT.A2"/>
       <direct name="D3" input="SLICEL.D3" output="DLUT.A3"/>
       <direct name="D4" input="SLICEL.D4" output="DLUT.A4"/>
       <direct name="D5" input="SLICEL.D5" output="DLUT.A5"/>
       <direct name="D6" input="SLICEL.D6" output="DLUT.A6"/>
       <direct name="C1" input="SLICEL.C1" output="CLUT.A1"/>
       <direct name="C2" input="SLICEL.C2" output="CLUT.A2"/>
       <direct name="C3" input="SLICEL.C3" output="CLUT.A3"/>
       <direct name="C4" input="SLICEL.C4" output="CLUT.A4"/>
       <direct name="C5" input="SLICEL.C5" output="CLUT.A5"/>
       <direct name="C6" input="SLICEL.C6" output="CLUT.A6"/>
       <direct name="B1" input="SLICEL.B1" output="BLUT.A1"/>
       <direct name="B2" input="SLICEL.B2" output="BLUT.A2"/>
       <direct name="B3" input="SLICEL.B3" output="BLUT.A3"/>
       <direct name="B4" input="SLICEL.B4" output="BLUT.A4"/>
       <direct name="B5" input="SLICEL.B5" output="BLUT.A5"/>
       <direct name="B6" input="SLICEL.B6" output="BLUT.A6"/>
       <direct name="A1" input="SLICEL.A1" output="ALUT.A1"/>
       <direct name="A2" input="SLICEL.A2" output="ALUT.A2"/>
       <direct name="A3" input="SLICEL.A3" output="ALUT.A3"/>
       <direct name="A4" input="SLICEL.A4" output="ALUT.A4"/>
       <direct name="A5" input="SLICEL.A5" output="ALUT.A5"/>
       <direct name="A6" input="SLICEL.A6" output="ALUT.A6"/>
       <direct name="D5FFMUX_IN_B" input="SLICEL.DX" output="D5FFMUX.IN_B"/>
       <direct name="D5FFMUX_IN_A" input="DLUT.O5" output="D5FFMUX.IN_A"/>
       <direct name="D5FFMUX_OUT" input="D5FFMUX.O" output="D5FF.D"/>
       <direct name="C5FFMUX_IN_B" input="SLICEL.CX" output="C5FFMUX.IN_B"/>
       <direct name="C5FFMUX_IN_A" input="CLUT.O5" output="C5FFMUX.IN_A"/>
       <direct name="C5FFMUX_OUT" input="C5FFMUX.O" output="C5FF.D"/>
       <direct name="B5FFMUX_IN_B" input="SLICEL.BX" output="B5FFMUX.IN_B"/>
       <direct name="B5FFMUX_IN_A" input="BLUT.O5" output="B5FFMUX.IN_A"/>
       <direct name="B5FFMUX_OUT" input="B5FFMUX.O" output="B5FF.D"/>
       <direct name="A5FFMUX_IN_B" input="SLICEL.AX" output="A5FFMUX.IN_B"/>
       <direct name="A5FFMUX_IN_A" input="ALUT.O5" output="A5FFMUX.IN_A"/>
       <direct name="A5FFMUX_OUT" input="A5FFMUX.O" output="A5FF.D"/>
       <!-- WOUTMUX -->
       <direct name="DOUTMUX_IN_D5Q" input="D5FF.Q" output="DOUTMUX.D5Q"/>
       <direct name="DOUTMUX_IN_XOR" input="CARRY4.O[3]" output="DOUTMUX.XOR"/>
       <direct name="DOUTMUX_IN_O6" input="DLUT.O6" output="DOUTMUX.O6"/>
       <direct name="DOUTMUX_IN_O5" input="DLUT.O5" output="DOUTMUX.O5"/>
       <direct name="DOUTMUX_IN_CY" input="CARRY4.CO[3]" output="DOUTMUX.CY"/>
       <direct name="DOUTMUX_OUT" input="DOUTMUX.OUT" output="SLICEL.DMUX"/>
       <direct name="COUTMUX_IN_C5Q" input="C5FF.Q" output="COUTMUX.C5Q"/>
       <direct name="COUTMUX_IN_XOR" input="CARRY4.O[2]" output="COUTMUX.XOR"/>
       <direct name="COUTMUX_IN_O6" input="CLUT.O6" output="COUTMUX.O6"/>
       <direct name="COUTMUX_IN_O5" input="CLUT.O5" output="COUTMUX.O5"/>
       <direct name="COUTMUX_IN_F7" input="F7BMUX.OUT" output="COUTMUX.F7"/>
       <direct name="COUTMUX_IN_CY" input="CARRY4.CO[2]" output="COUTMUX.CY"/>
       <direct name="COUTMUX_OUT" input="COUTMUX.OUT" output="SLICEL.CMUX"/>
       <direct name="BOUTMUX_IN_B5Q" input="B5FF.Q" output="BOUTMUX.B5Q"/>
       <direct name="BOUTMUX_IN_XOR" input="CARRY4.O[1]" output="BOUTMUX.XOR"/>
       <direct name="BOUTMUX_IN_O6" input="BLUT.O6" output="BOUTMUX.O6"/>
       <direct name="BOUTMUX_IN_O5" input="BLUT.O5" output="BOUTMUX.O5"/>
       <direct name="BOUTMUX_IN_F8" input="F8MUX.OUT" output="BOUTMUX.F8"/>
       <direct name="BOUTMUX_IN_CY" input="CARRY4.CO[1]" output="BOUTMUX.CY"/>
       <direct name="BOUTMUX_OUT" input="BOUTMUX.OUT" output="SLICEL.BMUX"/>
       <direct name="AOUTMUX_IN_A5Q" input="A5FF.Q" output="AOUTMUX.A5Q"/>
       <direct name="AOUTMUX_IN_XOR" input="CARRY4.O[0]" output="AOUTMUX.XOR"/>
       <direct name="AOUTMUX_IN_O6" input="ALUT.O6" output="AOUTMUX.O6"/>
       <direct name="AOUTMUX_IN_O5" input="ALUT.O5" output="AOUTMUX.O5"/>
       <direct name="AOUTMUX_IN_F7" input="F7BMUX.OUT" output="AOUTMUX.F7"/>
       <direct name="AOUTMUX_IN_CY" input="CARRY4.CO[0]" output="AOUTMUX.CY"/>
       <direct name="AOUTMUX_OUT" input="AOUTMUX.OUT" output="SLICEL.AMUX"/>
       <!-- WFFMUX -->
       <direct name="DFFMUX_IN_XOR" input="CARRY4.O[3]" output="DFFMUX.XOR"/>
       <direct name="DFFMUX_IN_O6" input="DLUT.O6" output="DFFMUX.O6"/>
       <direct name="DFFMUX_IN_O5" input="DLUT.O5" output="DFFMUX.O5"/>
       <direct name="DFFMUX_IN_DX" input="SLICEL.DX" output="DFFMUX.DX"/>
       <direct name="DFFMUX_IN_CY" input="CARRY4.CO[3]" output="DFFMUX.CY"/>
       <direct name="DFFMUX_OUT" input="DFFMUX.OUT" output="DFF.D"/>
       <direct name="CFFMUX_IN_XOR" input="CARRY4.O[2]" output="CFFMUX.XOR"/>
       <direct name="CFFMUX_IN_O6" input="CLUT.O6" output="CFFMUX.O6"/>
       <direct name="CFFMUX_IN_O5" input="CLUT.O5" output="CFFMUX.O5"/>
       <direct name="CFFMUX_IN_F7" input="F7BMUX.OUT" output="CFFMUX.F7"/>
       <direct name="CFFMUX_IN_CY" input="CARRY4.CO[2]" output="CFFMUX.CY"/>
       <direct name="CFFMUX_IN_CX" input="SLICEL.CX" output="CFFMUX.CX"/>
       <direct name="CFFMUX_OUT" input="CFFMUX.OUT" output="CFF.D"/>
       <direct name="BFFMUX_IN_XOR" input="CARRY4.O[1]" output="BFFMUX.XOR"/>
       <direct name="BFFMUX_IN_O6" input="BLUT.O6" output="BFFMUX.O6"/>
       <direct name="BFFMUX_IN_O5" input="BLUT.O5" output="BFFMUX.O5"/>
       <direct name="BFFMUX_IN_F8" input="F8MUX.OUT" output="BFFMUX.F8"/>
       <direct name="BFFMUX_IN_CY" input="CARRY4.CO[1]" output="BFFMUX.CY"/>
       <direct name="BFFMUX_IN_BX" input="SLICEL.BX" output="BFFMUX.BX"/>
       <direct name="BFFMUX_OUT" input="BFFMUX.OUT" output="BFF.D"/>
       <direct name="AFFMUX_IN_XOR" input="CARRY4.O[0]" output="AFFMUX.XOR"/>
       <direct name="AFFMUX_IN_O6" input="ALUT.O6" output="AFFMUX.O6"/>
       <direct name="AFFMUX_IN_O5" input="ALUT.O5" output="AFFMUX.O5"/>
       <direct name="AFFMUX_IN_F7" input="F7AMUX.OUT" output="AFFMUX.F7"/>
       <direct name="AFFMUX_IN_CY" input="CARRY4.CO[0]" output="AFFMUX.CY"/>
       <direct name="AFFMUX_IN_AX" input="SLICEL.AX" output="AFFMUX.AX"/>
       <direct name="AFFMUX_OUT" input="AFFMUX.OUT" output="AFF.D"/>
       <!-- AFF -->
       <direct name="DFF" input="DFF.Q" output="SLICEL.AQ"/>
       <direct name="CFF" input="CFF.Q" output="SLICEL.BQ"/>
       <direct name="BFF" input="BFF.Q" output="SLICEL.CQ"/>
       <direct name="AFF" input="AFF.Q" output="SLICEL.DQ"/>
       <!-- LUT O6 output -->
       <direct name="F7BMUX_I0" input="DLUT.O6" output="F7BMUX.I0"/>
       <direct name="CARRY_S3" input="DLUT.O6" output="CARRY4.S[3]"/>
       <direct name="SLICEL_DOUT" input="DLUT.O6" output="SLICEL.D"/>
       <direct name="F7BMUX_I1" input="CLUT.O6" output="F7BMUX.I1"/>
       <direct name="CARRY_S2" input="CLUT.O6" output="CARRY4.S[2]"/>
       <direct name="SLICEL_COUT" input="CLUT.O6" output="SLICEL.C"/>
       <direct name="F7AMUX_I0" input="BLUT.O6" output="F7AMUX.I0"/>
       <direct name="CARRY_S1" input="BLUT.O6" output="CARRY4.S[1]"/>
       <direct name="SLICEL_BOUT" input="BLUT.O6" output="SLICEL.B"/>
       <direct name="F7AMUX_I1" input="ALUT.O6" output="F7AMUX.I1"/>
       <direct name="CARRY_S0" input="ALUT.O6" output="CARRY4.S[0]"/>
       <direct name="SLICEL_AOUT" input="ALUT.O6" output="SLICEL.A"/>
       <!-- Select lines for F7 MUXes -->
       <direct name="CX7S" input="SLICEL.CX" output="F7BMUX.S0"/>
       <direct name="AX7S" input="SLICEL.AX" output="F7AMUX.S0"/>
       <!-- F8MUX -->
       <direct name="F8MUX_IN0" input="F7BMUX.OUT" output="F8MUX.I0"/>
       <direct name="F8MUX_IN1" input="F7AMUX.OUT" output="F8MUX.I1"/>
       <direct name="F8MUX_S" input="SLICEL.BX" output="F8MUX.S0"/>
       <!-- <direct name="F8MUX_O" input="F8MUX.O" output="" /> -->
       <!-- Carry -->
       <!-- FIXME! -->
       <direct name="PRECYINIT_MUX.CYINIT" input="SLICEL.AX" output="PRECYINIT_MUX.CYINIT">
        <!-- <pack_pattern name="chain" in_port="SLICEL.AX" out_port="PRECYINIT_MUX.CYINIT" /> -->
       </direct>
       <direct name="PRECYINIT_MUX.CI" input="SLICEL.CIN" output="PRECYINIT_MUX.CI">
        <!-- <pack_pattern name="chain" in_port="SLICEL.CIN" out_port="PRECYINIT_MUX.CI" /> -->
       </direct>
       <direct name="PRECYINIT_MUX.OUT" input="PRECYINIT_MUX.OUT" output="CARRY4.CIN">
        <!-- <pack_pattern name="chain" in_port="PRECYINIT_MUX.OUT" out_port="CARRY4.CIN" /> -->
       </direct>
       <direct name="DCY0_O5" input="DLUT.O5" output="DCY0.O5"/>
       <direct name="DCY0_DX" input="SLICEL.DX" output="DCY0.DX"/>
       <direct name="DCY0_O" input="DCY0.O" output="CARRY4.DI[3]"/>
       <direct name="CCY0_O5" input="CLUT.O5" output="CCY0.O5"/>
       <direct name="CCY0_CX" input="SLICEL.CX" output="CCY0.CX"/>
       <direct name="CCY0_O" input="CCY0.O" output="CARRY4.DI[2]"/>
       <direct name="BCY0_O5" input="BLUT.O5" output="BCY0.O5"/>
       <direct name="BCY0_BX" input="SLICEL.BX" output="BCY0.BX"/>
       <direct name="BCY0_O" input="BCY0.O" output="CARRY4.DI[1]"/>
       <direct name="ACY0_O5" input="ALUT.O5" output="ACY0.O5"/>
       <direct name="ACY0_AX" input="SLICEL.AX" output="ACY0.AX"/>
       <direct name="ACY0_O" input="ACY0.O" output="CARRY4.DI[0]"/>
       <direct name="COUT" input="CARRY4.CO[3]" output="SLICEL.COUT"/>
       <!-- Clock, Clock Enable and Reset -->
       <direct name="A5FF_CK" input="SLICEL.CLK" output="A5FF.CK"/>
       <direct name="AFF_CK" input="SLICEL.CLK" output="AFF.CK"/>
       <direct name="B5FF_CK" input="SLICEL.CLK" output="B5FF.CK"/>
       <direct name="BFF_CK" input="SLICEL.CLK" output="BFF.CK"/>
       <direct name="C5FF_CK" input="SLICEL.CLK" output="C5FF.CK"/>
       <direct name="CFF_CK" input="SLICEL.CLK" output="CFF.CK"/>
       <direct name="D5FF_CK" input="SLICEL.CLK" output="D5FF.CK"/>
       <direct name="DFF_CK" input="SLICEL.CLK" output="DFF.CK"/>
       <!-- <mux name="CEUSED" input="VCC SLICEL.CE" output="{}"/> -->
       <direct name="A5FF_CE" input="SLICEL.CE" output="A5FF.CE"/>
       <direct name="AFF_CE" input="SLICEL.CE" output="AFF.CE"/>
       <direct name="B5FF_CE" input="SLICEL.CE" output="B5FF.CE"/>
       <direct name="BFF_CE" input="SLICEL.CE" output="BFF.CE"/>
       <direct name="C5FF_CE" input="SLICEL.CE" output="C5FF.CE"/>
       <direct name="CFF_CE" input="SLICEL.CE" output="CFF.CE"/>
       <direct name="D5FF_CE" input="SLICEL.CE" output="D5FF.CE"/>
       <direct name="DFF_CE" input="SLICEL.CE" output="DFF.CE"/>
       <!-- <mux name="SRUSED" input="GND SLICEL.SR" output="{}"/> -->
       <direct name="A5FF_SR" input="SLICEL.SR" output="A5FF.SR"/>
       <direct name="AFF_SR" input="SLICEL.SR" output="AFF.SR"/>
       <direct name="B5FF_SR" input="SLICEL.SR" output="B5FF.SR"/>
       <direct name="BFF_SR" input="SLICEL.SR" output="BFF.SR"/>
       <direct name="C5FF_SR" input="SLICEL.SR" output="C5FF.SR"/>
       <direct name="CFF_SR" input="SLICEL.SR" output="CFF.SR"/>
       <direct name="D5FF_SR" input="SLICEL.SR" output="D5FF.SR"/>
       <direct name="DFF_SR" input="SLICEL.SR" output="DFF.SR"/>
      </interconnect>
     </pb_type>
     <input name="A1" num_pins="1"/>
     <input name="A2" num_pins="1"/>
     <input name="A3" num_pins="1"/>
     <input name="A4" num_pins="1"/>
     <input name="A5" num_pins="1"/>
     <input name="A6" num_pins="1"/>
     <input name="AX" num_pins="1"/>
     <input name="B1" num_pins="1"/>
     <input name="B2" num_pins="1"/>
     <input name="B3" num_pins="1"/>
     <input name="B4" num_pins="1"/>
     <input name="B5" num_pins="1"/>
     <input name="B6" num_pins="1"/>
     <input name="BX" num_pins="1"/>
     <input name="C1" num_pins="1"/>
     <input name="C2" num_pins="1"/>
     <input name="C3" num_pins="1"/>
     <input name="C4" num_pins="1"/>
     <input name="C5" num_pins="1"/>
     <input name="C6" num_pins="1"/>
     <input name="CE" num_pins="1"/>
     <input name="CIN" num_pins="1"/>
     <clock name="CLK" num_pins="1"/>
     <input name="CX" num_pins="1"/>
     <input name="D1" num_pins="1"/>
     <input name="D2" num_pins="1"/>
     <input name="D3" num_pins="1"/>
     <input name="D4" num_pins="1"/>
     <input name="D5" num_pins="1"/>
     <input name="D6" num_pins="1"/>
     <input name="DX" num_pins="1"/>
     <input name="SR" num_pins="1"/>
     <output name="A" num_pins="1"/>
     <output name="AMUX" num_pins="1"/>
     <output name="AQ" num_pins="1"/>
     <output name="B" num_pins="1"/>
     <output name="BMUX" num_pins="1"/>
     <output name="BQ" num_pins="1"/>
     <output name="C" num_pins="1"/>
     <output name="CMUX" num_pins="1"/>
     <output name="COUT" num_pins="1"/>
     <output name="CQ" num_pins="1"/>
     <output name="D" num_pins="1"/>
     <output name="DMUX" num_pins="1"/>
     <output name="DQ" num_pins="1"/>
     <interconnect>
      <!-- Slice->Cell -->
      <direct input="CLBLL_L.A1" name="SLICEL.A1" output="SLICEL.A1"/>
      <direct input="CLBLL_L.A2" name="SLICEL.A2" output="SLICEL.A2"/>
      <direct input="CLBLL_L.A3" name="SLICEL.A3" output="SLICEL.A3"/>
      <direct input="CLBLL_L.A4" name="SLICEL.A4" output="SLICEL.A4"/>
      <direct input="CLBLL_L.A5" name="SLICEL.A5" output="SLICEL.A5"/>
      <direct input="CLBLL_L.A6" name="SLICEL.A6" output="SLICEL.A6"/>
      <direct input="CLBLL_L.AX" name="SLICEL.AX" output="SLICEL.AX"/>
      <direct input="CLBLL_L.B1" name="SLICEL.B1" output="SLICEL.B1"/>
      <direct input="CLBLL_L.B2" name="SLICEL.B2" output="SLICEL.B2"/>
      <direct input="CLBLL_L.B3" name="SLICEL.B3" output="SLICEL.B3"/>
      <direct input="CLBLL_L.B4" name="SLICEL.B4" output="SLICEL.B4"/>
      <direct input="CLBLL_L.B5" name="SLICEL.B5" output="SLICEL.B5"/>
      <direct input="CLBLL_L.B6" name="SLICEL.B6" output="SLICEL.B6"/>
      <direct input="CLBLL_L.BX" name="SLICEL.BX" output="SLICEL.BX"/>
      <direct input="CLBLL_L.C1" name="SLICEL.C1" output="SLICEL.C1"/>
      <direct input="CLBLL_L.C2" name="SLICEL.C2" output="SLICEL.C2"/>
      <direct input="CLBLL_L.C3" name="SLICEL.C3" output="SLICEL.C3"/>
      <direct input="CLBLL_L.C4" name="SLICEL.C4" output="SLICEL.C4"/>
      <direct input="CLBLL_L.C5" name="SLICEL.C5" output="SLICEL.C5"/>
      <direct input="CLBLL_L.C6" name="SLICEL.C6" output="SLICEL.C6"/>
      <direct input="CLBLL_L.CE" name="SLICEL.CE" output="SLICEL.CE"/>
      <direct input="CLBLL_L.CIN" name="SLICEL.CIN" output="SLICEL.CIN"/>
      <direct input="CLBLL_L.CLK" name="SLICEL.CLK" output="SLICEL.CLK"/>
      <direct input="CLBLL_L.CX" name="SLICEL.CX" output="SLICEL.CX"/>
      <direct input="CLBLL_L.D1" name="SLICEL.D1" output="SLICEL.D1"/>
      <direct input="CLBLL_L.D2" name="SLICEL.D2" output="SLICEL.D2"/>
      <direct input="CLBLL_L.D3" name="SLICEL.D3" output="SLICEL.D3"/>
      <direct input="CLBLL_L.D4" name="SLICEL.D4" output="SLICEL.D4"/>
      <direct input="CLBLL_L.D5" name="SLICEL.D5" output="SLICEL.D5"/>
      <direct input="CLBLL_L.D6" name="SLICEL.D6" output="SLICEL.D6"/>
      <direct input="CLBLL_L.DX" name="SLICEL.DX" output="SLICEL.DX"/>
      <direct input="CLBLL_L.SR" name="SLICEL.SR" output="SLICEL.SR"/>
      <!-- Cell->Slice -->
      <direct input="SLICEL.A" name="CLBLL_L.A" output="CLBLL_L.A"/>
      <direct input="SLICEL.AMUX" name="CLBLL_L.AMUX" output="CLBLL_L.AMUX"/>
      <direct input="SLICEL.AQ" name="CLBLL_L.AQ" output="CLBLL_L.AQ"/>
      <direct input="SLICEL.B" name="CLBLL_L.B" output="CLBLL_L.B"/>
      <direct input="SLICEL.BMUX" name="CLBLL_L.BMUX" output="CLBLL_L.BMUX"/>
      <direct input="SLICEL.BQ" name="CLBLL_L.BQ" output="CLBLL_L.BQ"/>
      <direct input="SLICEL.C" name="CLBLL_L.C" output="CLBLL_L.C"/>
      <direct input="SLICEL.CMUX" name="CLBLL_L.CMUX" output="CLBLL_L.CMUX"/>
      <direct input="SLICEL.COUT" name="CLBLL_L.COUT" output="CLBLL_L.COUT"/>
      <direct input="SLICEL.CQ" name="CLBLL_L.CQ" output="CLBLL_L.CQ"/>
      <direct input="SLICEL.D" name="CLBLL_L.D" output="CLBLL_L.D"/>
      <direct input="SLICEL.DMUX" name="CLBLL_L.DMUX" output="CLBLL_L.DMUX"/>
      <direct input="SLICEL.DQ" name="CLBLL_L.DQ" output="CLBLL_L.DQ"/>
     </interconnect>
    </pb_type>
    <pb_type name="CLBLL_LL" num_pb="1">
     <!-- A diagram for the SLICEL is shown in;
 7 Series FPGAs CLB User Guide UG474 (v1.8) September 27, 2016
 Figure 2-4: Diagram of SLICEL
 -->
     <pb_type name="SLICEL" num_pb="1">
      <input name="DX" num_pins="1" equivalent="false"/>
      <input name="D1" num_pins="1" equivalent="false"/>
      <input name="D2" num_pins="1" equivalent="false"/>
      <input name="D3" num_pins="1" equivalent="false"/>
      <input name="D4" num_pins="1" equivalent="false"/>
      <input name="D5" num_pins="1" equivalent="false"/>
      <input name="D6" num_pins="1" equivalent="false"/>
      <input name="CX" num_pins="1" equivalent="false"/>
      <input name="C1" num_pins="1" equivalent="false"/>
      <input name="C2" num_pins="1" equivalent="false"/>
      <input name="C3" num_pins="1" equivalent="false"/>
      <input name="C4" num_pins="1" equivalent="false"/>
      <input name="C5" num_pins="1" equivalent="false"/>
      <input name="C6" num_pins="1" equivalent="false"/>
      <input name="BX" num_pins="1" equivalent="false"/>
      <input name="B1" num_pins="1" equivalent="false"/>
      <input name="B2" num_pins="1" equivalent="false"/>
      <input name="B3" num_pins="1" equivalent="false"/>
      <input name="B4" num_pins="1" equivalent="false"/>
      <input name="B5" num_pins="1" equivalent="false"/>
      <input name="B6" num_pins="1" equivalent="false"/>
      <input name="AX" num_pins="1" equivalent="false"/>
      <input name="A1" num_pins="1" equivalent="false"/>
      <input name="A2" num_pins="1" equivalent="false"/>
      <input name="A3" num_pins="1" equivalent="false"/>
      <input name="A4" num_pins="1" equivalent="false"/>
      <input name="A5" num_pins="1" equivalent="false"/>
      <input name="A6" num_pins="1" equivalent="false"/>
      <input name="SR" num_pins="1" equivalent="false"/>
      <input name="CE" num_pins="1" equivalent="false"/>
      <clock name="CLK" num_pins="1" equivalent="false"/>
      <input name="CIN" num_pins="1" equivalent="false"/>
      <output name="COUT" num_pins="1" equivalent="false"/>
      <output name="DMUX" num_pins="1" equivalent="false"/>
      <output name="D" num_pins="1" equivalent="false"/>
      <output name="DQ" num_pins="1" equivalent="false"/>
      <output name="CMUX" num_pins="1" equivalent="false"/>
      <output name="C" num_pins="1" equivalent="false"/>
      <output name="CQ" num_pins="1" equivalent="false"/>
      <output name="BMUX" num_pins="1" equivalent="false"/>
      <output name="B" num_pins="1" equivalent="false"/>
      <output name="BQ" num_pins="1" equivalent="false"/>
      <output name="AMUX" num_pins="1" equivalent="false"/>
      <output name="A" num_pins="1" equivalent="false"/>
      <output name="AQ" num_pins="1" equivalent="false"/>
      <!-- D6LUT, C6LUT, B6LUT, A6LUT == W6LUT
 A fracturable 6 input LUT. Can either be;
 - 2 * 5 input, 1 output LUT
 - 1 * 6 input, 1 output LUT
 -->
      <!-- D6LUT, C6LUT, B6LUT, A6LUT == W6LUT
 A fracturable 6 input LUT. Can either be;
 - 2 * 5 input, 1 output LUT
 - 1 * 6 input, 1 output LUT
 -->
      <pb_type name="ALUT" num_pb="1">
       <input name="A1" num_pins="1"/>
       <input name="A2" num_pins="1"/>
       <input name="A3" num_pins="1"/>
       <input name="A4" num_pins="1"/>
       <input name="A5" num_pins="1"/>
       <input name="A6" num_pins="1"/>
       <output name="O5" num_pins="1"/>
       <output name="O6" num_pins="1"/>
       <mode name="lut6">
        <pb_type name="A6LUT" num_pb="1" class="lut" blif_model=".names">
         <input name="in" num_pins="6" port_class="lut_in"/>
         <output name="out" num_pins="1" port_class="lut_out"/>
         <delay_matrix type="max" in_port="A6LUT.in" out_port="A6LUT.out">
 0.068e-9
 0.068e-9
 0.068e-9
 0.068e-9
 0.068e-9
 0.068e-9
 </delay_matrix>
        </pb_type>
        <interconnect>
         <direct name="ALUT_A6" input="ALUT.A6" output="A6LUT.in[5]"/>
         <direct name="ALUT_A5" input="ALUT.A5" output="A6LUT.in[4]"/>
         <direct name="ALUT_A4" input="ALUT.A4" output="A6LUT.in[3]"/>
         <direct name="ALUT_A3" input="ALUT.A3" output="A6LUT.in[2]"/>
         <direct name="ALUT_A2" input="ALUT.A2" output="A6LUT.in[1]"/>
         <direct name="ALUT_A1" input="ALUT.A1" output="A6LUT.in[0]"/>
         <direct name="O6" input="A6LUT.out" output="ALUT.O6"/>
        </interconnect>
       </mode>
       <mode name="lut5x2">
        <pb_type name="A5LUT" num_pb="2" class="lut" blif_model=".names">
         <input name="in" num_pins="5" port_class="lut_in"/>
         <output name="out" num_pins="1" port_class="lut_out"/>
         <delay_matrix type="max" in_port="A5LUT.in" out_port="A5LUT.out">
 0.068e-9
 0.068e-9
 0.068e-9
 0.068e-9
 0.068e-9
 </delay_matrix>
        </pb_type>
        <interconnect>
         <!-- First LUT5 -->
         <!-- Second LUT5 -->
         <direct name="ALUT_A6" input="ALUT.A6" output="A5LUT[0].in[4]"/>
         <direct name="ALUT_A5" input="ALUT.A5" output="A5LUT[1].in[4]"/>
         <direct name="ALUT_A4_0" input="ALUT.A4" output="A5LUT[0].in[3]"/>
         <direct name="ALUT_A4_1" input="ALUT.A4" output="A5LUT[1].in[3]"/>
         <direct name="ALUT_A3_0" input="ALUT.A3" output="A5LUT[0].in[2]"/>
         <direct name="ALUT_A3_1" input="ALUT.A3" output="A5LUT[1].in[2]"/>
         <direct name="ALUT_A2_0" input="ALUT.A2" output="A5LUT[0].in[1]"/>
         <direct name="ALUT_A2_1" input="ALUT.A2" output="A5LUT[1].in[1]"/>
         <direct name="ALUT_A1_0" input="ALUT.A1" output="A5LUT[0].in[0]"/>
         <direct name="ALUT_A1_1" input="ALUT.A1" output="A5LUT[1].in[0]"/>
         <direct name="O5" input="A5LUT[0].out" output="ALUT.O5"/>
         <direct name="O6" input="A5LUT[1].out" output="ALUT.O6"/>
        </interconnect>
       </mode>
      </pb_type>
      <!-- D6LUT, C6LUT, B6LUT, A6LUT == W6LUT
 A fracturable 6 input LUT. Can either be;
 - 2 * 5 input, 1 output LUT
 - 1 * 6 input, 1 output LUT
 -->
      <pb_type name="BLUT" num_pb="1">
       <input name="A1" num_pins="1"/>
       <input name="A2" num_pins="1"/>
       <input name="A3" num_pins="1"/>
       <input name="A4" num_pins="1"/>
       <input name="A5" num_pins="1"/>
       <input name="A6" num_pins="1"/>
       <output name="O5" num_pins="1"/>
       <output name="O6" num_pins="1"/>
       <mode name="lut6">
        <pb_type name="B6LUT" num_pb="1" class="lut" blif_model=".names">
         <input name="in" num_pins="6" port_class="lut_in"/>
         <output name="out" num_pins="1" port_class="lut_out"/>
         <delay_matrix type="max" in_port="B6LUT.in" out_port="B6LUT.out">
 0.068e-9
 0.068e-9
 0.068e-9
 0.068e-9
 0.068e-9
 0.068e-9
 </delay_matrix>
        </pb_type>
        <interconnect>
         <direct name="BLUT_A6" input="BLUT.A6" output="B6LUT.in[5]"/>
         <direct name="BLUT_A5" input="BLUT.A5" output="B6LUT.in[4]"/>
         <direct name="BLUT_A4" input="BLUT.A4" output="B6LUT.in[3]"/>
         <direct name="BLUT_A3" input="BLUT.A3" output="B6LUT.in[2]"/>
         <direct name="BLUT_A2" input="BLUT.A2" output="B6LUT.in[1]"/>
         <direct name="BLUT_A1" input="BLUT.A1" output="B6LUT.in[0]"/>
         <direct name="O6" input="B6LUT.out" output="BLUT.O6"/>
        </interconnect>
       </mode>
       <mode name="lut5x2">
        <pb_type name="B5LUT" num_pb="2" class="lut" blif_model=".names">
         <input name="in" num_pins="5" port_class="lut_in"/>
         <output name="out" num_pins="1" port_class="lut_out"/>
         <delay_matrix type="max" in_port="B5LUT.in" out_port="B5LUT.out">
 0.068e-9
 0.068e-9
 0.068e-9
 0.068e-9
 0.068e-9
 </delay_matrix>
        </pb_type>
        <interconnect>
         <!-- First LUT5 -->
         <!-- Second LUT5 -->
         <direct name="BLUT_A6" input="BLUT.A6" output="B5LUT[0].in[4]"/>
         <direct name="BLUT_A5" input="BLUT.A5" output="B5LUT[1].in[4]"/>
         <direct name="BLUT_A4_0" input="BLUT.A4" output="B5LUT[0].in[3]"/>
         <direct name="BLUT_A4_1" input="BLUT.A4" output="B5LUT[1].in[3]"/>
         <direct name="BLUT_A3_0" input="BLUT.A3" output="B5LUT[0].in[2]"/>
         <direct name="BLUT_A3_1" input="BLUT.A3" output="B5LUT[1].in[2]"/>
         <direct name="BLUT_A2_0" input="BLUT.A2" output="B5LUT[0].in[1]"/>
         <direct name="BLUT_A2_1" input="BLUT.A2" output="B5LUT[1].in[1]"/>
         <direct name="BLUT_A1_0" input="BLUT.A1" output="B5LUT[0].in[0]"/>
         <direct name="BLUT_A1_1" input="BLUT.A1" output="B5LUT[1].in[0]"/>
         <direct name="O5" input="B5LUT[0].out" output="BLUT.O5"/>
         <direct name="O6" input="B5LUT[1].out" output="BLUT.O6"/>
        </interconnect>
       </mode>
      </pb_type>
      <pb_type name="F7AMUX" num_pb="1" blif_model=".subckt F7AMUX">
       <!--
Generated with ../../../../../utils/mux_gen.py
-->
       <input name="I0" num_pins="1"/>
       <input name="I1" num_pins="1"/>
       <input name="S0" num_pins="1"/>
       <output name="OUT" num_pins="1"/>
       <delay_constant in_port="F7AMUX.I0" max="10e-12" out_port="F7AMUX.OUT"/>
       <delay_constant in_port="F7AMUX.I1" max="10e-12" out_port="F7AMUX.OUT"/>
       <delay_constant in_port="F7AMUX.S0" max="10e-12" out_port="F7AMUX.OUT"/>
      </pb_type>
      <!-- D6LUT, C6LUT, B6LUT, A6LUT == W6LUT
 A fracturable 6 input LUT. Can either be;
 - 2 * 5 input, 1 output LUT
 - 1 * 6 input, 1 output LUT
 -->
      <pb_type name="CLUT" num_pb="1">
       <input name="A1" num_pins="1"/>
       <input name="A2" num_pins="1"/>
       <input name="A3" num_pins="1"/>
       <input name="A4" num_pins="1"/>
       <input name="A5" num_pins="1"/>
       <input name="A6" num_pins="1"/>
       <output name="O5" num_pins="1"/>
       <output name="O6" num_pins="1"/>
       <mode name="lut6">
        <pb_type name="C6LUT" num_pb="1" class="lut" blif_model=".names">
         <input name="in" num_pins="6" port_class="lut_in"/>
         <output name="out" num_pins="1" port_class="lut_out"/>
         <delay_matrix type="max" in_port="C6LUT.in" out_port="C6LUT.out">
 0.068e-9
 0.068e-9
 0.068e-9
 0.068e-9
 0.068e-9
 0.068e-9
 </delay_matrix>
        </pb_type>
        <interconnect>
         <direct name="CLUT_A6" input="CLUT.A6" output="C6LUT.in[5]"/>
         <direct name="CLUT_A5" input="CLUT.A5" output="C6LUT.in[4]"/>
         <direct name="CLUT_A4" input="CLUT.A4" output="C6LUT.in[3]"/>
         <direct name="CLUT_A3" input="CLUT.A3" output="C6LUT.in[2]"/>
         <direct name="CLUT_A2" input="CLUT.A2" output="C6LUT.in[1]"/>
         <direct name="CLUT_A1" input="CLUT.A1" output="C6LUT.in[0]"/>
         <direct name="O6" input="C6LUT.out" output="CLUT.O6"/>
        </interconnect>
       </mode>
       <mode name="lut5x2">
        <pb_type name="C5LUT" num_pb="2" class="lut" blif_model=".names">
         <input name="in" num_pins="5" port_class="lut_in"/>
         <output name="out" num_pins="1" port_class="lut_out"/>
         <delay_matrix type="max" in_port="C5LUT.in" out_port="C5LUT.out">
 0.068e-9
 0.068e-9
 0.068e-9
 0.068e-9
 0.068e-9
 </delay_matrix>
        </pb_type>
        <interconnect>
         <!-- First LUT5 -->
         <!-- Second LUT5 -->
         <direct name="CLUT_A6" input="CLUT.A6" output="C5LUT[0].in[4]"/>
         <direct name="CLUT_A5" input="CLUT.A5" output="C5LUT[1].in[4]"/>
         <direct name="CLUT_A4_0" input="CLUT.A4" output="C5LUT[0].in[3]"/>
         <direct name="CLUT_A4_1" input="CLUT.A4" output="C5LUT[1].in[3]"/>
         <direct name="CLUT_A3_0" input="CLUT.A3" output="C5LUT[0].in[2]"/>
         <direct name="CLUT_A3_1" input="CLUT.A3" output="C5LUT[1].in[2]"/>
         <direct name="CLUT_A2_0" input="CLUT.A2" output="C5LUT[0].in[1]"/>
         <direct name="CLUT_A2_1" input="CLUT.A2" output="C5LUT[1].in[1]"/>
         <direct name="CLUT_A1_0" input="CLUT.A1" output="C5LUT[0].in[0]"/>
         <direct name="CLUT_A1_1" input="CLUT.A1" output="C5LUT[1].in[0]"/>
         <direct name="O5" input="C5LUT[0].out" output="CLUT.O5"/>
         <direct name="O6" input="C5LUT[1].out" output="CLUT.O6"/>
        </interconnect>
       </mode>
      </pb_type>
      <!-- D6LUT, C6LUT, B6LUT, A6LUT == W6LUT
 A fracturable 6 input LUT. Can either be;
 - 2 * 5 input, 1 output LUT
 - 1 * 6 input, 1 output LUT
 -->
      <pb_type name="DLUT" num_pb="1">
       <input name="A1" num_pins="1"/>
       <input name="A2" num_pins="1"/>
       <input name="A3" num_pins="1"/>
       <input name="A4" num_pins="1"/>
       <input name="A5" num_pins="1"/>
       <input name="A6" num_pins="1"/>
       <output name="O5" num_pins="1"/>
       <output name="O6" num_pins="1"/>
       <mode name="lut6">
        <pb_type name="D6LUT" num_pb="1" class="lut" blif_model=".names">
         <input name="in" num_pins="6" port_class="lut_in"/>
         <output name="out" num_pins="1" port_class="lut_out"/>
         <delay_matrix type="max" in_port="D6LUT.in" out_port="D6LUT.out">
 0.068e-9
 0.068e-9
 0.068e-9
 0.068e-9
 0.068e-9
 0.068e-9
 </delay_matrix>
        </pb_type>
        <interconnect>
         <direct name="DLUT_A6" input="DLUT.A6" output="D6LUT.in[5]"/>
         <direct name="DLUT_A5" input="DLUT.A5" output="D6LUT.in[4]"/>
         <direct name="DLUT_A4" input="DLUT.A4" output="D6LUT.in[3]"/>
         <direct name="DLUT_A3" input="DLUT.A3" output="D6LUT.in[2]"/>
         <direct name="DLUT_A2" input="DLUT.A2" output="D6LUT.in[1]"/>
         <direct name="DLUT_A1" input="DLUT.A1" output="D6LUT.in[0]"/>
         <direct name="O6" input="D6LUT.out" output="DLUT.O6"/>
        </interconnect>
       </mode>
       <mode name="lut5x2">
        <pb_type name="D5LUT" num_pb="2" class="lut" blif_model=".names">
         <input name="in" num_pins="5" port_class="lut_in"/>
         <output name="out" num_pins="1" port_class="lut_out"/>
         <delay_matrix type="max" in_port="D5LUT.in" out_port="D5LUT.out">
 0.068e-9
 0.068e-9
 0.068e-9
 0.068e-9
 0.068e-9
 </delay_matrix>
        </pb_type>
        <interconnect>
         <!-- First LUT5 -->
         <!-- Second LUT5 -->
         <direct name="DLUT_A6" input="DLUT.A6" output="D5LUT[0].in[4]"/>
         <direct name="DLUT_A5" input="DLUT.A5" output="D5LUT[1].in[4]"/>
         <direct name="DLUT_A4_0" input="DLUT.A4" output="D5LUT[0].in[3]"/>
         <direct name="DLUT_A4_1" input="DLUT.A4" output="D5LUT[1].in[3]"/>
         <direct name="DLUT_A3_0" input="DLUT.A3" output="D5LUT[0].in[2]"/>
         <direct name="DLUT_A3_1" input="DLUT.A3" output="D5LUT[1].in[2]"/>
         <direct name="DLUT_A2_0" input="DLUT.A2" output="D5LUT[0].in[1]"/>
         <direct name="DLUT_A2_1" input="DLUT.A2" output="D5LUT[1].in[1]"/>
         <direct name="DLUT_A1_0" input="DLUT.A1" output="D5LUT[0].in[0]"/>
         <direct name="DLUT_A1_1" input="DLUT.A1" output="D5LUT[1].in[0]"/>
         <direct name="O5" input="D5LUT[0].out" output="DLUT.O5"/>
         <direct name="O6" input="D5LUT[1].out" output="DLUT.O6"/>
        </interconnect>
       </mode>
      </pb_type>
      <pb_type name="F7BMUX" num_pb="1" blif_model=".subckt F7BMUX">
       <!--
Generated with ../../../../../utils/mux_gen.py
-->
       <input name="I0" num_pins="1"/>
       <input name="I1" num_pins="1"/>
       <input name="S0" num_pins="1"/>
       <output name="OUT" num_pins="1"/>
       <delay_constant in_port="F7BMUX.I0" max="10e-12" out_port="F7BMUX.OUT"/>
       <delay_constant in_port="F7BMUX.I1" max="10e-12" out_port="F7BMUX.OUT"/>
       <delay_constant in_port="F7BMUX.S0" max="10e-12" out_port="F7BMUX.OUT"/>
      </pb_type>
      <pb_type name="F8MUX" num_pb="1" blif_model=".subckt F8MUX">
       <!--
Generated with ../../../../../utils/mux_gen.py
-->
       <input name="I0" num_pins="1"/>
       <input name="I1" num_pins="1"/>
       <input name="S0" num_pins="1"/>
       <output name="OUT" num_pins="1"/>
       <delay_constant in_port="F8MUX.I0" max="10e-12" out_port="F8MUX.OUT"/>
       <delay_constant in_port="F8MUX.I1" max="10e-12" out_port="F8MUX.OUT"/>
       <delay_constant in_port="F8MUX.S0" max="10e-12" out_port="F8MUX.OUT"/>
      </pb_type>
      <!-- D5FF, C5FF, B5FF, A5FF == W5FF -->
      <pb_type name="A5FFMUX" num_pb="1">
       <!--
Generated with ../../../../../utils/mux_gen.py
-->
       <input name="IN_B" num_pins="1"/>
       <input name="IN_A" num_pins="1"/>
       <output name="O" num_pins="1"/>
       <pb_type name="BUF" num_pb="1">
        <input name="I" num_pins="1"/>
        <output name="O" num_pins="1"/>
        <pb_type name="BUF_DUMMY" num_pb="1" blif_model=".subckt BUF_DUMMY">
         <input name="I" num_pins="1"/>
         <output name="O" num_pins="1"/>
         <delay_constant max="10e12" in_port="BUF_DUMMY.I" out_port="BUF_DUMMY.O"/>
        </pb_type>
        <interconnect>
         <direct name="A" input="BUF.I" output="BUF_DUMMY.I"/>
         <mux name="BYPASS" input="BUF.I BUF_DUMMY.O" output="BUF.O"/>
        </interconnect>
       </pb_type>
       <interconnect>
        <mux input="A5FFMUX.IN_B A5FFMUX.IN_A" name="A5FFMUX_IN" output="BUF.I"/>
        <direct input="BUF.O" name="A5FFMUX_OUT" output="A5FFMUX.O"/>
       </interconnect>
      </pb_type>
      <pb_type name="B5FFMUX" num_pb="1">
       <!--
Generated with ../../../../../utils/mux_gen.py
-->
       <input name="IN_B" num_pins="1"/>
       <input name="IN_A" num_pins="1"/>
       <output name="O" num_pins="1"/>
       <pb_type name="BUF" num_pb="1">
        <input name="I" num_pins="1"/>
        <output name="O" num_pins="1"/>
        <pb_type name="BUF_DUMMY" num_pb="1" blif_model=".subckt BUF_DUMMY">
         <input name="I" num_pins="1"/>
         <output name="O" num_pins="1"/>
         <delay_constant max="10e12" in_port="BUF_DUMMY.I" out_port="BUF_DUMMY.O"/>
        </pb_type>
        <interconnect>
         <direct name="A" input="BUF.I" output="BUF_DUMMY.I"/>
         <mux name="BYPASS" input="BUF.I BUF_DUMMY.O" output="BUF.O"/>
        </interconnect>
       </pb_type>
       <interconnect>
        <mux input="B5FFMUX.IN_B B5FFMUX.IN_A" name="B5FFMUX_IN" output="BUF.I"/>
        <direct input="BUF.O" name="B5FFMUX_OUT" output="B5FFMUX.O"/>
       </interconnect>
      </pb_type>
      <pb_type name="C5FFMUX" num_pb="1">
       <!--
Generated with ../../../../../utils/mux_gen.py
-->
       <input name="IN_B" num_pins="1"/>
       <input name="IN_A" num_pins="1"/>
       <output name="O" num_pins="1"/>
       <pb_type name="BUF" num_pb="1">
        <input name="I" num_pins="1"/>
        <output name="O" num_pins="1"/>
        <pb_type name="BUF_DUMMY" num_pb="1" blif_model=".subckt BUF_DUMMY">
         <input name="I" num_pins="1"/>
         <output name="O" num_pins="1"/>
         <delay_constant max="10e12" in_port="BUF_DUMMY.I" out_port="BUF_DUMMY.O"/>
        </pb_type>
        <interconnect>
         <direct name="A" input="BUF.I" output="BUF_DUMMY.I"/>
         <mux name="BYPASS" input="BUF.I BUF_DUMMY.O" output="BUF.O"/>
        </interconnect>
       </pb_type>
       <interconnect>
        <mux input="C5FFMUX.IN_B C5FFMUX.IN_A" name="C5FFMUX_IN" output="BUF.I"/>
        <direct input="BUF.O" name="C5FFMUX_OUT" output="C5FFMUX.O"/>
       </interconnect>
      </pb_type>
      <pb_type name="D5FFMUX" num_pb="1">
       <!--
Generated with ../../../../../utils/mux_gen.py
-->
       <input name="IN_B" num_pins="1"/>
       <input name="IN_A" num_pins="1"/>
       <output name="O" num_pins="1"/>
       <pb_type name="BUF" num_pb="1">
        <input name="I" num_pins="1"/>
        <output name="O" num_pins="1"/>
        <pb_type name="BUF_DUMMY" num_pb="1" blif_model=".subckt BUF_DUMMY">
         <input name="I" num_pins="1"/>
         <output name="O" num_pins="1"/>
         <delay_constant max="10e12" in_port="BUF_DUMMY.I" out_port="BUF_DUMMY.O"/>
        </pb_type>
        <interconnect>
         <direct name="A" input="BUF.I" output="BUF_DUMMY.I"/>
         <mux name="BYPASS" input="BUF.I BUF_DUMMY.O" output="BUF.O"/>
        </interconnect>
       </pb_type>
       <interconnect>
        <mux input="D5FFMUX.IN_B D5FFMUX.IN_A" name="D5FFMUX_IN" output="BUF.I"/>
        <direct input="BUF.O" name="D5FFMUX_OUT" output="D5FFMUX.O"/>
       </interconnect>
      </pb_type>
      <!-- D5FF, C5FF, B5FF, A5FF == W5FF -->
      <pb_type name="A5FF" num_pb="1">
       <input name="D" num_pins="1"/>
       <input name="CE" num_pins="1"/>
       <clock name="CK" num_pins="1"/>
       <input name="SR" num_pins="1"/>
       <output name="Q" num_pins="1"/>
       <pb_type name="FF" num_pb="1" class="flipflop" blif_model=".latch">
        <input name="D" num_pins="1" port_class="D"/>
        <output name="Q" num_pins="1" port_class="Q"/>
        <clock name="clk" num_pins="1" port_class="clock"/>
        <!-- TRCE: Tas -->
        <T_setup value="0.301e-9" port="FF.D" clock="clk"/>
        <!-- TRCE: Tcko -->
        <T_clock_to_Q max="0.381e-9" port="FF.Q" clock="clk"/>
       </pb_type>
       <interconnect>
        <direct name="D" input="A5FF.D" output="FF.D"/>
        <direct name="Q" input="FF.Q" output="A5FF.Q"/>
        <direct name="C" input="A5FF.CK" output="FF.clk"/>
       </interconnect>
      </pb_type>
      <!-- D5FF, C5FF, B5FF, A5FF == W5FF -->
      <pb_type name="B5FF" num_pb="1">
       <input name="D" num_pins="1"/>
       <input name="CE" num_pins="1"/>
       <clock name="CK" num_pins="1"/>
       <input name="SR" num_pins="1"/>
       <output name="Q" num_pins="1"/>
       <pb_type name="FF" num_pb="1" class="flipflop" blif_model=".latch">
        <input name="D" num_pins="1" port_class="D"/>
        <output name="Q" num_pins="1" port_class="Q"/>
        <clock name="clk" num_pins="1" port_class="clock"/>
        <!-- TRCE: Tas -->
        <T_setup value="0.301e-9" port="FF.D" clock="clk"/>
        <!-- TRCE: Tcko -->
        <T_clock_to_Q max="0.381e-9" port="FF.Q" clock="clk"/>
       </pb_type>
       <interconnect>
        <direct name="D" input="B5FF.D" output="FF.D"/>
        <direct name="Q" input="FF.Q" output="B5FF.Q"/>
        <direct name="C" input="B5FF.CK" output="FF.clk"/>
       </interconnect>
      </pb_type>
      <!-- D5FF, C5FF, B5FF, A5FF == W5FF -->
      <pb_type name="C5FF" num_pb="1">
       <input name="D" num_pins="1"/>
       <input name="CE" num_pins="1"/>
       <clock name="CK" num_pins="1"/>
       <input name="SR" num_pins="1"/>
       <output name="Q" num_pins="1"/>
       <pb_type name="FF" num_pb="1" class="flipflop" blif_model=".latch">
        <input name="D" num_pins="1" port_class="D"/>
        <output name="Q" num_pins="1" port_class="Q"/>
        <clock name="clk" num_pins="1" port_class="clock"/>
        <!-- TRCE: Tas -->
        <T_setup value="0.301e-9" port="FF.D" clock="clk"/>
        <!-- TRCE: Tcko -->
        <T_clock_to_Q max="0.381e-9" port="FF.Q" clock="clk"/>
       </pb_type>
       <interconnect>
        <direct name="D" input="C5FF.D" output="FF.D"/>
        <direct name="Q" input="FF.Q" output="C5FF.Q"/>
        <direct name="C" input="C5FF.CK" output="FF.clk"/>
       </interconnect>
      </pb_type>
      <!-- D5FF, C5FF, B5FF, A5FF == W5FF -->
      <pb_type name="D5FF" num_pb="1">
       <input name="D" num_pins="1"/>
       <input name="CE" num_pins="1"/>
       <clock name="CK" num_pins="1"/>
       <input name="SR" num_pins="1"/>
       <output name="Q" num_pins="1"/>
       <pb_type name="FF" num_pb="1" class="flipflop" blif_model=".latch">
        <input name="D" num_pins="1" port_class="D"/>
        <output name="Q" num_pins="1" port_class="Q"/>
        <clock name="clk" num_pins="1" port_class="clock"/>
        <!-- TRCE: Tas -->
        <T_setup value="0.301e-9" port="FF.D" clock="clk"/>
        <!-- TRCE: Tcko -->
        <T_clock_to_Q max="0.381e-9" port="FF.Q" clock="clk"/>
       </pb_type>
       <interconnect>
        <direct name="D" input="D5FF.D" output="FF.D"/>
        <direct name="Q" input="FF.Q" output="D5FF.Q"/>
        <direct name="C" input="D5FF.CK" output="FF.clk"/>
       </interconnect>
      </pb_type>
      <!-- DFF, CFF, BFF, AFF == WFF -->
      <!-- DFF, CFF, BFF, AFF == WFF -->
      <pb_type name="AFF" num_pb="1">
       <input name="D" num_pins="1"/>
       <input name="CE" num_pins="1"/>
       <clock name="CK" num_pins="1"/>
       <input name="SR" num_pins="1"/>
       <output name="Q" num_pins="1"/>
       <mode name="VPR_FF">
        <pb_type name="FF" num_pb="1" class="flipflop" blif_model=".latch">
         <input name="D" num_pins="1" port_class="D"/>
         <output name="Q" num_pins="1" port_class="Q"/>
         <clock name="clk" num_pins="1" port_class="clock"/>
         <!-- TRCE: Tas -->
         <T_setup value="0.301e-9" port="FF.D" clock="clk"/>
         <!-- TRCE: Tcko -->
         <T_clock_to_Q max="0.381e-9" port="FF.Q" clock="clk"/>
        </pb_type>
        <interconnect>
         <direct name="D" input="AFF.D" output="FF.D"/>
         <direct name="C" input="AFF.CK" output="FF.clk"/>
         <direct name="Q" input="FF.Q" output="AFF.Q"/>
        </interconnect>
       </mode>
       <mode name="FDRE">
        <pb_type name="FDRE" num_pb="1" blif_model=".subckt FDRE">
         <input name="D" num_pins="1"/>
         <input name="CE" num_pins="1"/>
         <clock name="C" num_pins="1"/>
         <input name="R" num_pins="1"/>
         <output name="Q" num_pins="1"/>
         <T_setup value="10e-12" port="FDRE.D" clock="C"/>
         <T_setup value="10e-12" port="FDRE.CE" clock="C"/>
         <T_setup value="10e-12" port="FDRE.R" clock="C"/>
         <T_clock_to_Q max="10e-12" port="FDRE.Q" clock="C"/>
        </pb_type>
        <interconnect>
         <direct name="D" input="AFF.D" output="FDRE.D"/>
         <direct name="CE" input="AFF.CE" output="FDRE.CE"/>
         <direct name="C" input="AFF.CK" output="FDRE.C"/>
         <direct name="R" input="AFF.SR" output="FDRE.R"/>
         <direct name="Q" input="FDRE.Q" output="AFF.Q"/>
        </interconnect>
       </mode>
      </pb_type>
      <!-- DFF, CFF, BFF, AFF == WFF -->
      <pb_type name="BFF" num_pb="1">
       <input name="D" num_pins="1"/>
       <input name="CE" num_pins="1"/>
       <clock name="CK" num_pins="1"/>
       <input name="SR" num_pins="1"/>
       <output name="Q" num_pins="1"/>
       <mode name="VPR_FF">
        <pb_type name="FF" num_pb="1" class="flipflop" blif_model=".latch">
         <input name="D" num_pins="1" port_class="D"/>
         <output name="Q" num_pins="1" port_class="Q"/>
         <clock name="clk" num_pins="1" port_class="clock"/>
         <!-- TRCE: Tas -->
         <T_setup value="0.301e-9" port="FF.D" clock="clk"/>
         <!-- TRCE: Tcko -->
         <T_clock_to_Q max="0.381e-9" port="FF.Q" clock="clk"/>
        </pb_type>
        <interconnect>
         <direct name="D" input="BFF.D" output="FF.D"/>
         <direct name="C" input="BFF.CK" output="FF.clk"/>
         <direct name="Q" input="FF.Q" output="BFF.Q"/>
        </interconnect>
       </mode>
       <mode name="FDRE">
        <pb_type name="FDRE" num_pb="1" blif_model=".subckt FDRE">
         <input name="D" num_pins="1"/>
         <input name="CE" num_pins="1"/>
         <clock name="C" num_pins="1"/>
         <input name="R" num_pins="1"/>
         <output name="Q" num_pins="1"/>
         <T_setup value="10e-12" port="FDRE.D" clock="C"/>
         <T_setup value="10e-12" port="FDRE.CE" clock="C"/>
         <T_setup value="10e-12" port="FDRE.R" clock="C"/>
         <T_clock_to_Q max="10e-12" port="FDRE.Q" clock="C"/>
        </pb_type>
        <interconnect>
         <direct name="D" input="BFF.D" output="FDRE.D"/>
         <direct name="CE" input="BFF.CE" output="FDRE.CE"/>
         <direct name="C" input="BFF.CK" output="FDRE.C"/>
         <direct name="R" input="BFF.SR" output="FDRE.R"/>
         <direct name="Q" input="FDRE.Q" output="BFF.Q"/>
        </interconnect>
       </mode>
      </pb_type>
      <!-- DFF, CFF, BFF, AFF == WFF -->
      <pb_type name="CFF" num_pb="1">
       <input name="D" num_pins="1"/>
       <input name="CE" num_pins="1"/>
       <clock name="CK" num_pins="1"/>
       <input name="SR" num_pins="1"/>
       <output name="Q" num_pins="1"/>
       <mode name="VPR_FF">
        <pb_type name="FF" num_pb="1" class="flipflop" blif_model=".latch">
         <input name="D" num_pins="1" port_class="D"/>
         <output name="Q" num_pins="1" port_class="Q"/>
         <clock name="clk" num_pins="1" port_class="clock"/>
         <!-- TRCE: Tas -->
         <T_setup value="0.301e-9" port="FF.D" clock="clk"/>
         <!-- TRCE: Tcko -->
         <T_clock_to_Q max="0.381e-9" port="FF.Q" clock="clk"/>
        </pb_type>
        <interconnect>
         <direct name="D" input="CFF.D" output="FF.D"/>
         <direct name="C" input="CFF.CK" output="FF.clk"/>
         <direct name="Q" input="FF.Q" output="CFF.Q"/>
        </interconnect>
       </mode>
       <mode name="FDRE">
        <pb_type name="FDRE" num_pb="1" blif_model=".subckt FDRE">
         <input name="D" num_pins="1"/>
         <input name="CE" num_pins="1"/>
         <clock name="C" num_pins="1"/>
         <input name="R" num_pins="1"/>
         <output name="Q" num_pins="1"/>
         <T_setup value="10e-12" port="FDRE.D" clock="C"/>
         <T_setup value="10e-12" port="FDRE.CE" clock="C"/>
         <T_setup value="10e-12" port="FDRE.R" clock="C"/>
         <T_clock_to_Q max="10e-12" port="FDRE.Q" clock="C"/>
        </pb_type>
        <interconnect>
         <direct name="D" input="CFF.D" output="FDRE.D"/>
         <direct name="CE" input="CFF.CE" output="FDRE.CE"/>
         <direct name="C" input="CFF.CK" output="FDRE.C"/>
         <direct name="R" input="CFF.SR" output="FDRE.R"/>
         <direct name="Q" input="FDRE.Q" output="CFF.Q"/>
        </interconnect>
       </mode>
      </pb_type>
      <!-- DFF, CFF, BFF, AFF == WFF -->
      <pb_type name="DFF" num_pb="1">
       <input name="D" num_pins="1"/>
       <input name="CE" num_pins="1"/>
       <clock name="CK" num_pins="1"/>
       <input name="SR" num_pins="1"/>
       <output name="Q" num_pins="1"/>
       <mode name="VPR_FF">
        <pb_type name="FF" num_pb="1" class="flipflop" blif_model=".latch">
         <input name="D" num_pins="1" port_class="D"/>
         <output name="Q" num_pins="1" port_class="Q"/>
         <clock name="clk" num_pins="1" port_class="clock"/>
         <!-- TRCE: Tas -->
         <T_setup value="0.301e-9" port="FF.D" clock="clk"/>
         <!-- TRCE: Tcko -->
         <T_clock_to_Q max="0.381e-9" port="FF.Q" clock="clk"/>
        </pb_type>
        <interconnect>
         <direct name="D" input="DFF.D" output="FF.D"/>
         <direct name="C" input="DFF.CK" output="FF.clk"/>
         <direct name="Q" input="FF.Q" output="DFF.Q"/>
        </interconnect>
       </mode>
       <mode name="FDRE">
        <pb_type name="FDRE" num_pb="1" blif_model=".subckt FDRE">
         <input name="D" num_pins="1"/>
         <input name="CE" num_pins="1"/>
         <clock name="C" num_pins="1"/>
         <input name="R" num_pins="1"/>
         <output name="Q" num_pins="1"/>
         <T_setup value="10e-12" port="FDRE.D" clock="C"/>
         <T_setup value="10e-12" port="FDRE.CE" clock="C"/>
         <T_setup value="10e-12" port="FDRE.R" clock="C"/>
         <T_clock_to_Q max="10e-12" port="FDRE.Q" clock="C"/>
        </pb_type>
        <interconnect>
         <direct name="D" input="DFF.D" output="FDRE.D"/>
         <direct name="CE" input="DFF.CE" output="FDRE.CE"/>
         <direct name="C" input="DFF.CK" output="FDRE.C"/>
         <direct name="R" input="DFF.SR" output="FDRE.R"/>
         <direct name="Q" input="FDRE.Q" output="DFF.Q"/>
        </interconnect>
       </mode>
      </pb_type>
      <!-- CARRY4 logic -->
      <pb_type name="PRECYINIT_MUX" num_pb="1">
       <!--
Generated with ../../../../../utils/mux_gen.py
-->
       <input name="CI" num_pins="1"/>
       <input name="CYINIT" num_pins="1"/>
       <output name="OUT" num_pins="1"/>
       <pb_type name="BUF" num_pb="1">
        <input name="I" num_pins="1"/>
        <output name="O" num_pins="1"/>
        <pb_type name="BUF_DUMMY" num_pb="1" blif_model=".subckt BUF_DUMMY">
         <input name="I" num_pins="1"/>
         <output name="O" num_pins="1"/>
         <delay_constant max="10e12" in_port="BUF_DUMMY.I" out_port="BUF_DUMMY.O"/>
        </pb_type>
        <interconnect>
         <direct name="A" input="BUF.I" output="BUF_DUMMY.I"/>
         <mux name="BYPASS" input="BUF.I BUF_DUMMY.O" output="BUF.O"/>
        </interconnect>
       </pb_type>
       <interconnect>
        <mux input="PRECYINIT_MUX.CI PRECYINIT_MUX.CYINIT" name="PRECYINIT_MUX_IN" output="BUF.I"/>
        <direct input="BUF.O" name="PRECYINIT_MUX_OUT" output="PRECYINIT_MUX.OUT"/>
       </interconnect>
      </pb_type>
      <pb_type name="ACY0" num_pb="1">
       <!--
Generated with ../../../../../utils/mux_gen.py
-->
       <input name="O5" num_pins="1"/>
       <input name="AX" num_pins="1"/>
       <output name="O" num_pins="1"/>
       <pb_type name="BUF" num_pb="1">
        <input name="I" num_pins="1"/>
        <output name="O" num_pins="1"/>
        <pb_type name="BUF_DUMMY" num_pb="1" blif_model=".subckt BUF_DUMMY">
         <input name="I" num_pins="1"/>
         <output name="O" num_pins="1"/>
         <delay_constant max="10e12" in_port="BUF_DUMMY.I" out_port="BUF_DUMMY.O"/>
        </pb_type>
        <interconnect>
         <direct name="A" input="BUF.I" output="BUF_DUMMY.I"/>
         <mux name="BYPASS" input="BUF.I BUF_DUMMY.O" output="BUF.O"/>
        </interconnect>
       </pb_type>
       <interconnect>
        <mux input="ACY0.O5 ACY0.AX" name="ACY0_IN" output="BUF.I"/>
        <direct input="BUF.O" name="ACY0_OUT" output="ACY0.O"/>
       </interconnect>
      </pb_type>
      <pb_type name="BCY0" num_pb="1">
       <!--
Generated with ../../../../../utils/mux_gen.py
-->
       <input name="O5" num_pins="1"/>
       <input name="BX" num_pins="1"/>
       <output name="O" num_pins="1"/>
       <pb_type name="BUF" num_pb="1">
        <input name="I" num_pins="1"/>
        <output name="O" num_pins="1"/>
        <pb_type name="BUF_DUMMY" num_pb="1" blif_model=".subckt BUF_DUMMY">
         <input name="I" num_pins="1"/>
         <output name="O" num_pins="1"/>
         <delay_constant max="10e12" in_port="BUF_DUMMY.I" out_port="BUF_DUMMY.O"/>
        </pb_type>
        <interconnect>
         <direct name="A" input="BUF.I" output="BUF_DUMMY.I"/>
         <mux name="BYPASS" input="BUF.I BUF_DUMMY.O" output="BUF.O"/>
        </interconnect>
       </pb_type>
       <interconnect>
        <mux input="BCY0.O5 BCY0.BX" name="BCY0_IN" output="BUF.I"/>
        <direct input="BUF.O" name="BCY0_OUT" output="BCY0.O"/>
       </interconnect>
      </pb_type>
      <pb_type name="CCY0" num_pb="1">
       <!--
Generated with ../../../../../utils/mux_gen.py
-->
       <input name="O5" num_pins="1"/>
       <input name="CX" num_pins="1"/>
       <output name="O" num_pins="1"/>
       <pb_type name="BUF" num_pb="1">
        <input name="I" num_pins="1"/>
        <output name="O" num_pins="1"/>
        <pb_type name="BUF_DUMMY" num_pb="1" blif_model=".subckt BUF_DUMMY">
         <input name="I" num_pins="1"/>
         <output name="O" num_pins="1"/>
         <delay_constant max="10e12" in_port="BUF_DUMMY.I" out_port="BUF_DUMMY.O"/>
        </pb_type>
        <interconnect>
         <direct name="A" input="BUF.I" output="BUF_DUMMY.I"/>
         <mux name="BYPASS" input="BUF.I BUF_DUMMY.O" output="BUF.O"/>
        </interconnect>
       </pb_type>
       <interconnect>
        <mux input="CCY0.O5 CCY0.CX" name="CCY0_IN" output="BUF.I"/>
        <direct input="BUF.O" name="CCY0_OUT" output="CCY0.O"/>
       </interconnect>
      </pb_type>
      <pb_type name="DCY0" num_pb="1">
       <!--
Generated with ../../../../../utils/mux_gen.py
-->
       <input name="O5" num_pins="1"/>
       <input name="DX" num_pins="1"/>
       <output name="O" num_pins="1"/>
       <pb_type name="BUF" num_pb="1">
        <input name="I" num_pins="1"/>
        <output name="O" num_pins="1"/>
        <pb_type name="BUF_DUMMY" num_pb="1" blif_model=".subckt BUF_DUMMY">
         <input name="I" num_pins="1"/>
         <output name="O" num_pins="1"/>
         <delay_constant max="10e12" in_port="BUF_DUMMY.I" out_port="BUF_DUMMY.O"/>
        </pb_type>
        <interconnect>
         <direct name="A" input="BUF.I" output="BUF_DUMMY.I"/>
         <mux name="BYPASS" input="BUF.I BUF_DUMMY.O" output="BUF.O"/>
        </interconnect>
       </pb_type>
       <interconnect>
        <mux input="DCY0.O5 DCY0.DX" name="DCY0_IN" output="BUF.I"/>
        <direct input="BUF.O" name="DCY0_OUT" output="DCY0.O"/>
       </interconnect>
      </pb_type>
      <pb_type name="CARRY4" num_pb="1">
       <input name="S" num_pins="4"/>
       <input name="DI" num_pins="4"/>
       <output name="CO" num_pins="4"/>
       <output name="O" num_pins="4"/>
       <input name="CIN" num_pins="1"/>
       <mode name="COMPLETE">
        <pb_type name="CARRY4_COMPLETE" num_pb="1" blif_model=".subckt CARRY4">
         <input name="S" num_pins="4"/>
         <input name="DI" num_pins="4"/>
         <output name="CO" num_pins="4"/>
         <output name="O" num_pins="4"/>
         <input name="CIN" num_pins="1"/>
         <!-- CO output -->
         <delay_constant max="10e-12" in_port="CARRY4_COMPLETE.S" out_port="CARRY4_COMPLETE.CO"/>
         <delay_constant max="10e-12" in_port="CARRY4_COMPLETE.DI" out_port="CARRY4_COMPLETE.CO"/>
         <delay_constant max="10e-12" in_port="CARRY4_COMPLETE.CIN" out_port="CARRY4_COMPLETE.CO"/>
         <!-- O output -->
         <delay_constant max="10e-12" in_port="CARRY4_COMPLETE.S" out_port="CARRY4_COMPLETE.O"/>
         <delay_constant max="10e-12" in_port="CARRY4_COMPLETE.DI" out_port="CARRY4_COMPLETE.O"/>
         <delay_constant max="10e-12" in_port="CARRY4_COMPLETE.CIN" out_port="CARRY4_COMPLETE.O"/>
        </pb_type>
        <interconnect>
         <direct name="S" input="CARRY4.S" output="CARRY4_COMPLETE.S"/>
         <direct name="DI" input="CARRY4.DI" output="CARRY4_COMPLETE.DI"/>
         <direct name="CO" input="CARRY4_COMPLETE.CO" output="CARRY4.CO"/>
         <direct name="O" input="CARRY4_COMPLETE.O" output="CARRY4.O"/>
         <direct name="CIN" input="CARRY4.CIN" output="CARRY4_COMPLETE.CIN"/>
        </interconnect>
       </mode>
       <mode name="SPLIT">
        <pb_type name="CARRY4_AMUX" num_pb="1" blif_model=".subckt MUXCY">
         <!--
Generated with ../../../../../../utils/mux_gen.py
-->
         <input name="CI" num_pins="1"/>
         <input name="DI" num_pins="1"/>
         <input name="S" num_pins="1"/>
         <output name="O" num_pins="1"/>
         <delay_constant in_port="CARRY4_AMUX.CI" max="10e-12" out_port="CARRY4_AMUX.O"/>
         <delay_constant in_port="CARRY4_AMUX.DI" max="10e-12" out_port="CARRY4_AMUX.O"/>
         <delay_constant in_port="CARRY4_AMUX.S" max="10e-12" out_port="CARRY4_AMUX.O"/>
        </pb_type>
        <pb_type name="CARRY4_BMUX" num_pb="1" blif_model=".subckt MUXCY">
         <!--
Generated with ../../../../../../utils/mux_gen.py
-->
         <input name="CI" num_pins="1"/>
         <input name="DI" num_pins="1"/>
         <input name="S" num_pins="1"/>
         <output name="O" num_pins="1"/>
         <delay_constant in_port="CARRY4_BMUX.CI" max="10e-12" out_port="CARRY4_BMUX.O"/>
         <delay_constant in_port="CARRY4_BMUX.DI" max="10e-12" out_port="CARRY4_BMUX.O"/>
         <delay_constant in_port="CARRY4_BMUX.S" max="10e-12" out_port="CARRY4_BMUX.O"/>
        </pb_type>
        <pb_type name="CARRY4_CMUX" num_pb="1" blif_model=".subckt MUXCY">
         <!--
Generated with ../../../../../../utils/mux_gen.py
-->
         <input name="CI" num_pins="1"/>
         <input name="DI" num_pins="1"/>
         <input name="S" num_pins="1"/>
         <output name="O" num_pins="1"/>
         <delay_constant in_port="CARRY4_CMUX.CI" max="10e-12" out_port="CARRY4_CMUX.O"/>
         <delay_constant in_port="CARRY4_CMUX.DI" max="10e-12" out_port="CARRY4_CMUX.O"/>
         <delay_constant in_port="CARRY4_CMUX.S" max="10e-12" out_port="CARRY4_CMUX.O"/>
        </pb_type>
        <pb_type name="CARRY4_DMUX" num_pb="1" blif_model=".subckt MUXCY">
         <!--
Generated with ../../../../../../utils/mux_gen.py
-->
         <input name="CI" num_pins="1"/>
         <input name="DI" num_pins="1"/>
         <input name="S" num_pins="1"/>
         <output name="O" num_pins="1"/>
         <delay_constant in_port="CARRY4_DMUX.CI" max="10e-12" out_port="CARRY4_DMUX.O"/>
         <delay_constant in_port="CARRY4_DMUX.DI" max="10e-12" out_port="CARRY4_DMUX.O"/>
         <delay_constant in_port="CARRY4_DMUX.S" max="10e-12" out_port="CARRY4_DMUX.O"/>
        </pb_type>
        <pb_type blif_model=".subckt XORCY" name="CARRY4_AXOR" num_pb="1">
         <input name="CI" num_pins="1"/>
         <input name="LI" num_pins="1"/>
         <output name="O" num_pins="1"/>
         <delay_constant in_port="CARRY4_AXOR.CI" max="10e-12" out_port="CARRY4_AXOR.O"/>
         <delay_constant in_port="CARRY4_AXOR.LI" max="10e-12" out_port="CARRY4_AXOR.O"/>
        </pb_type>
        <pb_type blif_model=".subckt XORCY" name="CARRY4_BXOR" num_pb="1">
         <input name="CI" num_pins="1"/>
         <input name="LI" num_pins="1"/>
         <output name="O" num_pins="1"/>
         <delay_constant in_port="CARRY4_BXOR.CI" max="10e-12" out_port="CARRY4_BXOR.O"/>
         <delay_constant in_port="CARRY4_BXOR.LI" max="10e-12" out_port="CARRY4_BXOR.O"/>
        </pb_type>
        <pb_type blif_model=".subckt XORCY" name="CARRY4_CXOR" num_pb="1">
         <input name="CI" num_pins="1"/>
         <input name="LI" num_pins="1"/>
         <output name="O" num_pins="1"/>
         <delay_constant in_port="CARRY4_CXOR.CI" max="10e-12" out_port="CARRY4_CXOR.O"/>
         <delay_constant in_port="CARRY4_CXOR.LI" max="10e-12" out_port="CARRY4_CXOR.O"/>
        </pb_type>
        <pb_type blif_model=".subckt XORCY" name="CARRY4_DXOR" num_pb="1">
         <input name="CI" num_pins="1"/>
         <input name="LI" num_pins="1"/>
         <output name="O" num_pins="1"/>
         <delay_constant in_port="CARRY4_DXOR.CI" max="10e-12" out_port="CARRY4_DXOR.O"/>
         <delay_constant in_port="CARRY4_DXOR.LI" max="10e-12" out_port="CARRY4_DXOR.O"/>
        </pb_type>
        <interconnect>
         <direct name="MUX0_DI" input="CARRY4.DI[0]" output="CARRY4_AMUX.DI"/>
         <direct name="MUX0_CI" input="CARRY4.CIN" output="CARRY4_AMUX.CI"/>
         <direct name="MUX0_S" input="CARRY4.S[0]" output="CARRY4_AMUX.S"/>
         <direct name="MUX0_O" input="CARRY4_AMUX.O" output="CARRY4.CO[0]"/>
         <direct name="MUX1_DI" input="CARRY4.DI[1]" output="CARRY4_BMUX.DI"/>
         <direct name="MUX1_CI" input="CARRY4_AMUX.O" output="CARRY4_BMUX.CI"/>
         <direct name="MUX1_S" input="CARRY4.S[1]" output="CARRY4_BMUX.S"/>
         <direct name="MUX1_O" input="CARRY4_BMUX.O" output="CARRY4.CO[1]"/>
         <direct name="MUX2_DI" input="CARRY4.DI[2]" output="CARRY4_CMUX.DI"/>
         <direct name="MUX2_CI" input="CARRY4_BMUX.O" output="CARRY4_CMUX.CI"/>
         <direct name="MUX2_S" input="CARRY4.S[2]" output="CARRY4_CMUX.S"/>
         <direct name="MUX2_O" input="CARRY4_CMUX.O" output="CARRY4.CO[2]"/>
         <direct name="MUX3_DI" input="CARRY4.DI[3]" output="CARRY4_DMUX.DI"/>
         <direct name="MUX3_CI" input="CARRY4_CMUX.O" output="CARRY4_DMUX.CI"/>
         <direct name="MUX3_S" input="CARRY4.S[3]" output="CARRY4_DMUX.S"/>
         <direct name="MUX3_O" input="CARRY4_DMUX.O" output="CARRY4.CO[3]"/>
         <direct name="XOR0_LI" input="CARRY4.S[0]" output="CARRY4_AXOR.LI"/>
         <direct name="XOR0_CI" input="CARRY4.CIN" output="CARRY4_AXOR.CI"/>
         <direct name="XOR0_O" input="CARRY4_AXOR.O" output="CARRY4.O[0]"/>
         <direct name="XOR1_LI" input="CARRY4.S[1]" output="CARRY4_BXOR.LI"/>
         <direct name="XOR1_CI" input="CARRY4_AMUX.O" output="CARRY4_BXOR.CI"/>
         <direct name="XOR1_O" input="CARRY4_BXOR.O" output="CARRY4.O[1]"/>
         <direct name="XOR2_LI" input="CARRY4.S[2]" output="CARRY4_CXOR.LI"/>
         <direct name="XOR2_CI" input="CARRY4_BMUX.O" output="CARRY4_CXOR.CI"/>
         <direct name="XOR2_O" input="CARRY4_CXOR.O" output="CARRY4.O[2]"/>
         <direct name="XOR3_LI" input="CARRY4.S[3]" output="CARRY4_DXOR.LI"/>
         <direct name="xOR3_CI" input="CARRY4_CMUX.O" output="CARRY4_DXOR.CI"/>
         <direct name="XOR3_O" input="CARRY4_DXOR.O" output="CARRY4.O[3]"/>
        </interconnect>
       </mode>
      </pb_type>
      <!-- WOUTMUX -->
      <pb_type name="AOUTMUX" num_pb="1">
       <!--
Generated with ../../../../../utils/mux_gen.py
-->
       <input name="A5Q" num_pins="1"/>
       <input name="XOR" num_pins="1"/>
       <input name="O6" num_pins="1"/>
       <input name="O5" num_pins="1"/>
       <input name="F7" num_pins="1"/>
       <input name="CY" num_pins="1"/>
       <output name="OUT" num_pins="1"/>
       <pb_type name="BUF" num_pb="1">
        <input name="I" num_pins="1"/>
        <output name="O" num_pins="1"/>
        <pb_type name="BUF_DUMMY" num_pb="1" blif_model=".subckt BUF_DUMMY">
         <input name="I" num_pins="1"/>
         <output name="O" num_pins="1"/>
         <delay_constant max="10e12" in_port="BUF_DUMMY.I" out_port="BUF_DUMMY.O"/>
        </pb_type>
        <interconnect>
         <direct name="A" input="BUF.I" output="BUF_DUMMY.I"/>
         <mux name="BYPASS" input="BUF.I BUF_DUMMY.O" output="BUF.O"/>
        </interconnect>
       </pb_type>
       <interconnect>
        <mux input="AOUTMUX.A5Q AOUTMUX.XOR AOUTMUX.O6 AOUTMUX.O5 AOUTMUX.F7 AOUTMUX.CY" name="AOUTMUX_IN" output="BUF.I"/>
        <direct input="BUF.O" name="AOUTMUX_OUT" output="AOUTMUX.OUT"/>
       </interconnect>
      </pb_type>
      <pb_type name="BOUTMUX" num_pb="1">
       <!--
Generated with ../../../../../utils/mux_gen.py
-->
       <input name="B5Q" num_pins="1"/>
       <input name="XOR" num_pins="1"/>
       <input name="O6" num_pins="1"/>
       <input name="O5" num_pins="1"/>
       <input name="F8" num_pins="1"/>
       <input name="CY" num_pins="1"/>
       <output name="OUT" num_pins="1"/>
       <pb_type name="BUF" num_pb="1">
        <input name="I" num_pins="1"/>
        <output name="O" num_pins="1"/>
        <pb_type name="BUF_DUMMY" num_pb="1" blif_model=".subckt BUF_DUMMY">
         <input name="I" num_pins="1"/>
         <output name="O" num_pins="1"/>
         <delay_constant max="10e12" in_port="BUF_DUMMY.I" out_port="BUF_DUMMY.O"/>
        </pb_type>
        <interconnect>
         <direct name="A" input="BUF.I" output="BUF_DUMMY.I"/>
         <mux name="BYPASS" input="BUF.I BUF_DUMMY.O" output="BUF.O"/>
        </interconnect>
       </pb_type>
       <interconnect>
        <mux input="BOUTMUX.B5Q BOUTMUX.XOR BOUTMUX.O6 BOUTMUX.O5 BOUTMUX.F8 BOUTMUX.CY" name="BOUTMUX_IN" output="BUF.I"/>
        <direct input="BUF.O" name="BOUTMUX_OUT" output="BOUTMUX.OUT"/>
       </interconnect>
      </pb_type>
      <pb_type name="COUTMUX" num_pb="1">
       <!--
Generated with ../../../../../utils/mux_gen.py
-->
       <input name="C5Q" num_pins="1"/>
       <input name="XOR" num_pins="1"/>
       <input name="O6" num_pins="1"/>
       <input name="O5" num_pins="1"/>
       <input name="F7" num_pins="1"/>
       <input name="CY" num_pins="1"/>
       <output name="OUT" num_pins="1"/>
       <pb_type name="BUF" num_pb="1">
        <input name="I" num_pins="1"/>
        <output name="O" num_pins="1"/>
        <pb_type name="BUF_DUMMY" num_pb="1" blif_model=".subckt BUF_DUMMY">
         <input name="I" num_pins="1"/>
         <output name="O" num_pins="1"/>
         <delay_constant max="10e12" in_port="BUF_DUMMY.I" out_port="BUF_DUMMY.O"/>
        </pb_type>
        <interconnect>
         <direct name="A" input="BUF.I" output="BUF_DUMMY.I"/>
         <mux name="BYPASS" input="BUF.I BUF_DUMMY.O" output="BUF.O"/>
        </interconnect>
       </pb_type>
       <interconnect>
        <mux input="COUTMUX.C5Q COUTMUX.XOR COUTMUX.O6 COUTMUX.O5 COUTMUX.F7 COUTMUX.CY" name="COUTMUX_IN" output="BUF.I"/>
        <direct input="BUF.O" name="COUTMUX_OUT" output="COUTMUX.OUT"/>
       </interconnect>
      </pb_type>
      <pb_type name="DOUTMUX" num_pb="1">
       <!--
Generated with ../../../../../utils/mux_gen.py
-->
       <input name="D5Q" num_pins="1"/>
       <input name="XOR" num_pins="1"/>
       <input name="O6" num_pins="1"/>
       <input name="O5" num_pins="1"/>
       <input name="CY" num_pins="1"/>
       <output name="OUT" num_pins="1"/>
       <pb_type name="BUF" num_pb="1">
        <input name="I" num_pins="1"/>
        <output name="O" num_pins="1"/>
        <pb_type name="BUF_DUMMY" num_pb="1" blif_model=".subckt BUF_DUMMY">
         <input name="I" num_pins="1"/>
         <output name="O" num_pins="1"/>
         <delay_constant max="10e12" in_port="BUF_DUMMY.I" out_port="BUF_DUMMY.O"/>
        </pb_type>
        <interconnect>
         <direct name="A" input="BUF.I" output="BUF_DUMMY.I"/>
         <mux name="BYPASS" input="BUF.I BUF_DUMMY.O" output="BUF.O"/>
        </interconnect>
       </pb_type>
       <interconnect>
        <mux input="DOUTMUX.D5Q DOUTMUX.XOR DOUTMUX.O6 DOUTMUX.O5 DOUTMUX.CY" name="DOUTMUX_IN" output="BUF.I"/>
        <direct input="BUF.O" name="DOUTMUX_OUT" output="DOUTMUX.OUT"/>
       </interconnect>
      </pb_type>
      <!-- WFFMUX -->
      <pb_type name="AFFMUX" num_pb="1">
       <!--
Generated with ../../../../../utils/mux_gen.py
-->
       <input name="XOR" num_pins="1"/>
       <input name="O6" num_pins="1"/>
       <input name="O5" num_pins="1"/>
       <input name="F7" num_pins="1"/>
       <input name="CY" num_pins="1"/>
       <input name="AX" num_pins="1"/>
       <output name="OUT" num_pins="1"/>
       <pb_type name="BUF" num_pb="1">
        <input name="I" num_pins="1"/>
        <output name="O" num_pins="1"/>
        <pb_type name="BUF_DUMMY" num_pb="1" blif_model=".subckt BUF_DUMMY">
         <input name="I" num_pins="1"/>
         <output name="O" num_pins="1"/>
         <delay_constant max="10e12" in_port="BUF_DUMMY.I" out_port="BUF_DUMMY.O"/>
        </pb_type>
        <interconnect>
         <direct name="A" input="BUF.I" output="BUF_DUMMY.I"/>
         <mux name="BYPASS" input="BUF.I BUF_DUMMY.O" output="BUF.O"/>
        </interconnect>
       </pb_type>
       <interconnect>
        <mux input="AFFMUX.XOR AFFMUX.O6 AFFMUX.O5 AFFMUX.F7 AFFMUX.CY AFFMUX.AX" name="AFFMUX_IN" output="BUF.I"/>
        <direct input="BUF.O" name="AFFMUX_OUT" output="AFFMUX.OUT"/>
       </interconnect>
      </pb_type>
      <pb_type name="BFFMUX" num_pb="1">
       <!--
Generated with ../../../../../utils/mux_gen.py
-->
       <input name="XOR" num_pins="1"/>
       <input name="O6" num_pins="1"/>
       <input name="O5" num_pins="1"/>
       <input name="F8" num_pins="1"/>
       <input name="CY" num_pins="1"/>
       <input name="BX" num_pins="1"/>
       <output name="OUT" num_pins="1"/>
       <pb_type name="BUF" num_pb="1">
        <input name="I" num_pins="1"/>
        <output name="O" num_pins="1"/>
        <pb_type name="BUF_DUMMY" num_pb="1" blif_model=".subckt BUF_DUMMY">
         <input name="I" num_pins="1"/>
         <output name="O" num_pins="1"/>
         <delay_constant max="10e12" in_port="BUF_DUMMY.I" out_port="BUF_DUMMY.O"/>
        </pb_type>
        <interconnect>
         <direct name="A" input="BUF.I" output="BUF_DUMMY.I"/>
         <mux name="BYPASS" input="BUF.I BUF_DUMMY.O" output="BUF.O"/>
        </interconnect>
       </pb_type>
       <interconnect>
        <mux input="BFFMUX.XOR BFFMUX.O6 BFFMUX.O5 BFFMUX.F8 BFFMUX.CY BFFMUX.BX" name="BFFMUX_IN" output="BUF.I"/>
        <direct input="BUF.O" name="BFFMUX_OUT" output="BFFMUX.OUT"/>
       </interconnect>
      </pb_type>
      <pb_type name="CFFMUX" num_pb="1">
       <!--
Generated with ../../../../../utils/mux_gen.py
-->
       <input name="XOR" num_pins="1"/>
       <input name="O6" num_pins="1"/>
       <input name="O5" num_pins="1"/>
       <input name="F7" num_pins="1"/>
       <input name="CY" num_pins="1"/>
       <input name="CX" num_pins="1"/>
       <output name="OUT" num_pins="1"/>
       <pb_type name="BUF" num_pb="1">
        <input name="I" num_pins="1"/>
        <output name="O" num_pins="1"/>
        <pb_type name="BUF_DUMMY" num_pb="1" blif_model=".subckt BUF_DUMMY">
         <input name="I" num_pins="1"/>
         <output name="O" num_pins="1"/>
         <delay_constant max="10e12" in_port="BUF_DUMMY.I" out_port="BUF_DUMMY.O"/>
        </pb_type>
        <interconnect>
         <direct name="A" input="BUF.I" output="BUF_DUMMY.I"/>
         <mux name="BYPASS" input="BUF.I BUF_DUMMY.O" output="BUF.O"/>
        </interconnect>
       </pb_type>
       <interconnect>
        <mux input="CFFMUX.XOR CFFMUX.O6 CFFMUX.O5 CFFMUX.F7 CFFMUX.CY CFFMUX.CX" name="CFFMUX_IN" output="BUF.I"/>
        <direct input="BUF.O" name="CFFMUX_OUT" output="CFFMUX.OUT"/>
       </interconnect>
      </pb_type>
      <pb_type name="DFFMUX" num_pb="1">
       <!--
Generated with ../../../../../utils/mux_gen.py
-->
       <input name="XOR" num_pins="1"/>
       <input name="O6" num_pins="1"/>
       <input name="O5" num_pins="1"/>
       <input name="DX" num_pins="1"/>
       <input name="CY" num_pins="1"/>
       <output name="OUT" num_pins="1"/>
       <pb_type name="BUF" num_pb="1">
        <input name="I" num_pins="1"/>
        <output name="O" num_pins="1"/>
        <pb_type name="BUF_DUMMY" num_pb="1" blif_model=".subckt BUF_DUMMY">
         <input name="I" num_pins="1"/>
         <output name="O" num_pins="1"/>
         <delay_constant max="10e12" in_port="BUF_DUMMY.I" out_port="BUF_DUMMY.O"/>
        </pb_type>
        <interconnect>
         <direct name="A" input="BUF.I" output="BUF_DUMMY.I"/>
         <mux name="BYPASS" input="BUF.I BUF_DUMMY.O" output="BUF.O"/>
        </interconnect>
       </pb_type>
       <interconnect>
        <mux input="DFFMUX.XOR DFFMUX.O6 DFFMUX.O5 DFFMUX.DX DFFMUX.CY" name="DFFMUX_IN" output="BUF.I"/>
        <direct input="BUF.O" name="DFFMUX_OUT" output="DFFMUX.OUT"/>
       </interconnect>
      </pb_type>
      <!--
 <pb_type name="COUT_USED" num_pb="1" blif_model="">
 <input name="I0" num_pins="1"/>
 <input name="O0" num_pins="1"/>
 </pb_type>
 -->
      <!-- DUSED, CUSED, BUSED, AUSED
 <pb_type name="USED" num_pb="4" blif_model="">
 <input name="I0" num_pins="1"/>
 <input name="O0" num_pins="1"/>
 </pb_type>
 -->
      <interconnect>
       <direct name="D1" input="SLICEL.D1" output="DLUT.A1"/>
       <direct name="D2" input="SLICEL.D2" output="DLUT.A2"/>
       <direct name="D3" input="SLICEL.D3" output="DLUT.A3"/>
       <direct name="D4" input="SLICEL.D4" output="DLUT.A4"/>
       <direct name="D5" input="SLICEL.D5" output="DLUT.A5"/>
       <direct name="D6" input="SLICEL.D6" output="DLUT.A6"/>
       <direct name="C1" input="SLICEL.C1" output="CLUT.A1"/>
       <direct name="C2" input="SLICEL.C2" output="CLUT.A2"/>
       <direct name="C3" input="SLICEL.C3" output="CLUT.A3"/>
       <direct name="C4" input="SLICEL.C4" output="CLUT.A4"/>
       <direct name="C5" input="SLICEL.C5" output="CLUT.A5"/>
       <direct name="C6" input="SLICEL.C6" output="CLUT.A6"/>
       <direct name="B1" input="SLICEL.B1" output="BLUT.A1"/>
       <direct name="B2" input="SLICEL.B2" output="BLUT.A2"/>
       <direct name="B3" input="SLICEL.B3" output="BLUT.A3"/>
       <direct name="B4" input="SLICEL.B4" output="BLUT.A4"/>
       <direct name="B5" input="SLICEL.B5" output="BLUT.A5"/>
       <direct name="B6" input="SLICEL.B6" output="BLUT.A6"/>
       <direct name="A1" input="SLICEL.A1" output="ALUT.A1"/>
       <direct name="A2" input="SLICEL.A2" output="ALUT.A2"/>
       <direct name="A3" input="SLICEL.A3" output="ALUT.A3"/>
       <direct name="A4" input="SLICEL.A4" output="ALUT.A4"/>
       <direct name="A5" input="SLICEL.A5" output="ALUT.A5"/>
       <direct name="A6" input="SLICEL.A6" output="ALUT.A6"/>
       <direct name="D5FFMUX_IN_B" input="SLICEL.DX" output="D5FFMUX.IN_B"/>
       <direct name="D5FFMUX_IN_A" input="DLUT.O5" output="D5FFMUX.IN_A"/>
       <direct name="D5FFMUX_OUT" input="D5FFMUX.O" output="D5FF.D"/>
       <direct name="C5FFMUX_IN_B" input="SLICEL.CX" output="C5FFMUX.IN_B"/>
       <direct name="C5FFMUX_IN_A" input="CLUT.O5" output="C5FFMUX.IN_A"/>
       <direct name="C5FFMUX_OUT" input="C5FFMUX.O" output="C5FF.D"/>
       <direct name="B5FFMUX_IN_B" input="SLICEL.BX" output="B5FFMUX.IN_B"/>
       <direct name="B5FFMUX_IN_A" input="BLUT.O5" output="B5FFMUX.IN_A"/>
       <direct name="B5FFMUX_OUT" input="B5FFMUX.O" output="B5FF.D"/>
       <direct name="A5FFMUX_IN_B" input="SLICEL.AX" output="A5FFMUX.IN_B"/>
       <direct name="A5FFMUX_IN_A" input="ALUT.O5" output="A5FFMUX.IN_A"/>
       <direct name="A5FFMUX_OUT" input="A5FFMUX.O" output="A5FF.D"/>
       <!-- WOUTMUX -->
       <direct name="DOUTMUX_IN_D5Q" input="D5FF.Q" output="DOUTMUX.D5Q"/>
       <direct name="DOUTMUX_IN_XOR" input="CARRY4.O[3]" output="DOUTMUX.XOR"/>
       <direct name="DOUTMUX_IN_O6" input="DLUT.O6" output="DOUTMUX.O6"/>
       <direct name="DOUTMUX_IN_O5" input="DLUT.O5" output="DOUTMUX.O5"/>
       <direct name="DOUTMUX_IN_CY" input="CARRY4.CO[3]" output="DOUTMUX.CY"/>
       <direct name="DOUTMUX_OUT" input="DOUTMUX.OUT" output="SLICEL.DMUX"/>
       <direct name="COUTMUX_IN_C5Q" input="C5FF.Q" output="COUTMUX.C5Q"/>
       <direct name="COUTMUX_IN_XOR" input="CARRY4.O[2]" output="COUTMUX.XOR"/>
       <direct name="COUTMUX_IN_O6" input="CLUT.O6" output="COUTMUX.O6"/>
       <direct name="COUTMUX_IN_O5" input="CLUT.O5" output="COUTMUX.O5"/>
       <direct name="COUTMUX_IN_F7" input="F7BMUX.OUT" output="COUTMUX.F7"/>
       <direct name="COUTMUX_IN_CY" input="CARRY4.CO[2]" output="COUTMUX.CY"/>
       <direct name="COUTMUX_OUT" input="COUTMUX.OUT" output="SLICEL.CMUX"/>
       <direct name="BOUTMUX_IN_B5Q" input="B5FF.Q" output="BOUTMUX.B5Q"/>
       <direct name="BOUTMUX_IN_XOR" input="CARRY4.O[1]" output="BOUTMUX.XOR"/>
       <direct name="BOUTMUX_IN_O6" input="BLUT.O6" output="BOUTMUX.O6"/>
       <direct name="BOUTMUX_IN_O5" input="BLUT.O5" output="BOUTMUX.O5"/>
       <direct name="BOUTMUX_IN_F8" input="F8MUX.OUT" output="BOUTMUX.F8"/>
       <direct name="BOUTMUX_IN_CY" input="CARRY4.CO[1]" output="BOUTMUX.CY"/>
       <direct name="BOUTMUX_OUT" input="BOUTMUX.OUT" output="SLICEL.BMUX"/>
       <direct name="AOUTMUX_IN_A5Q" input="A5FF.Q" output="AOUTMUX.A5Q"/>
       <direct name="AOUTMUX_IN_XOR" input="CARRY4.O[0]" output="AOUTMUX.XOR"/>
       <direct name="AOUTMUX_IN_O6" input="ALUT.O6" output="AOUTMUX.O6"/>
       <direct name="AOUTMUX_IN_O5" input="ALUT.O5" output="AOUTMUX.O5"/>
       <direct name="AOUTMUX_IN_F7" input="F7BMUX.OUT" output="AOUTMUX.F7"/>
       <direct name="AOUTMUX_IN_CY" input="CARRY4.CO[0]" output="AOUTMUX.CY"/>
       <direct name="AOUTMUX_OUT" input="AOUTMUX.OUT" output="SLICEL.AMUX"/>
       <!-- WFFMUX -->
       <direct name="DFFMUX_IN_XOR" input="CARRY4.O[3]" output="DFFMUX.XOR"/>
       <direct name="DFFMUX_IN_O6" input="DLUT.O6" output="DFFMUX.O6"/>
       <direct name="DFFMUX_IN_O5" input="DLUT.O5" output="DFFMUX.O5"/>
       <direct name="DFFMUX_IN_DX" input="SLICEL.DX" output="DFFMUX.DX"/>
       <direct name="DFFMUX_IN_CY" input="CARRY4.CO[3]" output="DFFMUX.CY"/>
       <direct name="DFFMUX_OUT" input="DFFMUX.OUT" output="DFF.D"/>
       <direct name="CFFMUX_IN_XOR" input="CARRY4.O[2]" output="CFFMUX.XOR"/>
       <direct name="CFFMUX_IN_O6" input="CLUT.O6" output="CFFMUX.O6"/>
       <direct name="CFFMUX_IN_O5" input="CLUT.O5" output="CFFMUX.O5"/>
       <direct name="CFFMUX_IN_F7" input="F7BMUX.OUT" output="CFFMUX.F7"/>
       <direct name="CFFMUX_IN_CY" input="CARRY4.CO[2]" output="CFFMUX.CY"/>
       <direct name="CFFMUX_IN_CX" input="SLICEL.CX" output="CFFMUX.CX"/>
       <direct name="CFFMUX_OUT" input="CFFMUX.OUT" output="CFF.D"/>
       <direct name="BFFMUX_IN_XOR" input="CARRY4.O[1]" output="BFFMUX.XOR"/>
       <direct name="BFFMUX_IN_O6" input="BLUT.O6" output="BFFMUX.O6"/>
       <direct name="BFFMUX_IN_O5" input="BLUT.O5" output="BFFMUX.O5"/>
       <direct name="BFFMUX_IN_F8" input="F8MUX.OUT" output="BFFMUX.F8"/>
       <direct name="BFFMUX_IN_CY" input="CARRY4.CO[1]" output="BFFMUX.CY"/>
       <direct name="BFFMUX_IN_BX" input="SLICEL.BX" output="BFFMUX.BX"/>
       <direct name="BFFMUX_OUT" input="BFFMUX.OUT" output="BFF.D"/>
       <direct name="AFFMUX_IN_XOR" input="CARRY4.O[0]" output="AFFMUX.XOR"/>
       <direct name="AFFMUX_IN_O6" input="ALUT.O6" output="AFFMUX.O6"/>
       <direct name="AFFMUX_IN_O5" input="ALUT.O5" output="AFFMUX.O5"/>
       <direct name="AFFMUX_IN_F7" input="F7AMUX.OUT" output="AFFMUX.F7"/>
       <direct name="AFFMUX_IN_CY" input="CARRY4.CO[0]" output="AFFMUX.CY"/>
       <direct name="AFFMUX_IN_AX" input="SLICEL.AX" output="AFFMUX.AX"/>
       <direct name="AFFMUX_OUT" input="AFFMUX.OUT" output="AFF.D"/>
       <!-- AFF -->
       <direct name="DFF" input="DFF.Q" output="SLICEL.AQ"/>
       <direct name="CFF" input="CFF.Q" output="SLICEL.BQ"/>
       <direct name="BFF" input="BFF.Q" output="SLICEL.CQ"/>
       <direct name="AFF" input="AFF.Q" output="SLICEL.DQ"/>
       <!-- LUT O6 output -->
       <direct name="F7BMUX_I0" input="DLUT.O6" output="F7BMUX.I0"/>
       <direct name="CARRY_S3" input="DLUT.O6" output="CARRY4.S[3]"/>
       <direct name="SLICEL_DOUT" input="DLUT.O6" output="SLICEL.D"/>
       <direct name="F7BMUX_I1" input="CLUT.O6" output="F7BMUX.I1"/>
       <direct name="CARRY_S2" input="CLUT.O6" output="CARRY4.S[2]"/>
       <direct name="SLICEL_COUT" input="CLUT.O6" output="SLICEL.C"/>
       <direct name="F7AMUX_I0" input="BLUT.O6" output="F7AMUX.I0"/>
       <direct name="CARRY_S1" input="BLUT.O6" output="CARRY4.S[1]"/>
       <direct name="SLICEL_BOUT" input="BLUT.O6" output="SLICEL.B"/>
       <direct name="F7AMUX_I1" input="ALUT.O6" output="F7AMUX.I1"/>
       <direct name="CARRY_S0" input="ALUT.O6" output="CARRY4.S[0]"/>
       <direct name="SLICEL_AOUT" input="ALUT.O6" output="SLICEL.A"/>
       <!-- Select lines for F7 MUXes -->
       <direct name="CX7S" input="SLICEL.CX" output="F7BMUX.S0"/>
       <direct name="AX7S" input="SLICEL.AX" output="F7AMUX.S0"/>
       <!-- F8MUX -->
       <direct name="F8MUX_IN0" input="F7BMUX.OUT" output="F8MUX.I0"/>
       <direct name="F8MUX_IN1" input="F7AMUX.OUT" output="F8MUX.I1"/>
       <direct name="F8MUX_S" input="SLICEL.BX" output="F8MUX.S0"/>
       <!-- <direct name="F8MUX_O" input="F8MUX.O" output="" /> -->
       <!-- Carry -->
       <!-- FIXME! -->
       <direct name="PRECYINIT_MUX.CYINIT" input="SLICEL.AX" output="PRECYINIT_MUX.CYINIT">
        <!-- <pack_pattern name="chain" in_port="SLICEL.AX" out_port="PRECYINIT_MUX.CYINIT" /> -->
       </direct>
       <direct name="PRECYINIT_MUX.CI" input="SLICEL.CIN" output="PRECYINIT_MUX.CI">
        <!-- <pack_pattern name="chain" in_port="SLICEL.CIN" out_port="PRECYINIT_MUX.CI" /> -->
       </direct>
       <direct name="PRECYINIT_MUX.OUT" input="PRECYINIT_MUX.OUT" output="CARRY4.CIN">
        <!-- <pack_pattern name="chain" in_port="PRECYINIT_MUX.OUT" out_port="CARRY4.CIN" /> -->
       </direct>
       <direct name="DCY0_O5" input="DLUT.O5" output="DCY0.O5"/>
       <direct name="DCY0_DX" input="SLICEL.DX" output="DCY0.DX"/>
       <direct name="DCY0_O" input="DCY0.O" output="CARRY4.DI[3]"/>
       <direct name="CCY0_O5" input="CLUT.O5" output="CCY0.O5"/>
       <direct name="CCY0_CX" input="SLICEL.CX" output="CCY0.CX"/>
       <direct name="CCY0_O" input="CCY0.O" output="CARRY4.DI[2]"/>
       <direct name="BCY0_O5" input="BLUT.O5" output="BCY0.O5"/>
       <direct name="BCY0_BX" input="SLICEL.BX" output="BCY0.BX"/>
       <direct name="BCY0_O" input="BCY0.O" output="CARRY4.DI[1]"/>
       <direct name="ACY0_O5" input="ALUT.O5" output="ACY0.O5"/>
       <direct name="ACY0_AX" input="SLICEL.AX" output="ACY0.AX"/>
       <direct name="ACY0_O" input="ACY0.O" output="CARRY4.DI[0]"/>
       <direct name="COUT" input="CARRY4.CO[3]" output="SLICEL.COUT"/>
       <!-- Clock, Clock Enable and Reset -->
       <direct name="A5FF_CK" input="SLICEL.CLK" output="A5FF.CK"/>
       <direct name="AFF_CK" input="SLICEL.CLK" output="AFF.CK"/>
       <direct name="B5FF_CK" input="SLICEL.CLK" output="B5FF.CK"/>
       <direct name="BFF_CK" input="SLICEL.CLK" output="BFF.CK"/>
       <direct name="C5FF_CK" input="SLICEL.CLK" output="C5FF.CK"/>
       <direct name="CFF_CK" input="SLICEL.CLK" output="CFF.CK"/>
       <direct name="D5FF_CK" input="SLICEL.CLK" output="D5FF.CK"/>
       <direct name="DFF_CK" input="SLICEL.CLK" output="DFF.CK"/>
       <!-- <mux name="CEUSED" input="VCC SLICEL.CE" output="{}"/> -->
       <direct name="A5FF_CE" input="SLICEL.CE" output="A5FF.CE"/>
       <direct name="AFF_CE" input="SLICEL.CE" output="AFF.CE"/>
       <direct name="B5FF_CE" input="SLICEL.CE" output="B5FF.CE"/>
       <direct name="BFF_CE" input="SLICEL.CE" output="BFF.CE"/>
       <direct name="C5FF_CE" input="SLICEL.CE" output="C5FF.CE"/>
       <direct name="CFF_CE" input="SLICEL.CE" output="CFF.CE"/>
       <direct name="D5FF_CE" input="SLICEL.CE" output="D5FF.CE"/>
       <direct name="DFF_CE" input="SLICEL.CE" output="DFF.CE"/>
       <!-- <mux name="SRUSED" input="GND SLICEL.SR" output="{}"/> -->
       <direct name="A5FF_SR" input="SLICEL.SR" output="A5FF.SR"/>
       <direct name="AFF_SR" input="SLICEL.SR" output="AFF.SR"/>
       <direct name="B5FF_SR" input="SLICEL.SR" output="B5FF.SR"/>
       <direct name="BFF_SR" input="SLICEL.SR" output="BFF.SR"/>
       <direct name="C5FF_SR" input="SLICEL.SR" output="C5FF.SR"/>
       <direct name="CFF_SR" input="SLICEL.SR" output="CFF.SR"/>
       <direct name="D5FF_SR" input="SLICEL.SR" output="D5FF.SR"/>
       <direct name="DFF_SR" input="SLICEL.SR" output="DFF.SR"/>
      </interconnect>
     </pb_type>
     <input name="A1" num_pins="1"/>
     <input name="A2" num_pins="1"/>
     <input name="A3" num_pins="1"/>
     <input name="A4" num_pins="1"/>
     <input name="A5" num_pins="1"/>
     <input name="A6" num_pins="1"/>
     <input name="AX" num_pins="1"/>
     <input name="B1" num_pins="1"/>
     <input name="B2" num_pins="1"/>
     <input name="B3" num_pins="1"/>
     <input name="B4" num_pins="1"/>
     <input name="B5" num_pins="1"/>
     <input name="B6" num_pins="1"/>
     <input name="BX" num_pins="1"/>
     <input name="C1" num_pins="1"/>
     <input name="C2" num_pins="1"/>
     <input name="C3" num_pins="1"/>
     <input name="C4" num_pins="1"/>
     <input name="C5" num_pins="1"/>
     <input name="C6" num_pins="1"/>
     <input name="CE" num_pins="1"/>
     <input name="CIN" num_pins="1"/>
     <clock name="CLK" num_pins="1"/>
     <input name="CX" num_pins="1"/>
     <input name="D1" num_pins="1"/>
     <input name="D2" num_pins="1"/>
     <input name="D3" num_pins="1"/>
     <input name="D4" num_pins="1"/>
     <input name="D5" num_pins="1"/>
     <input name="D6" num_pins="1"/>
     <input name="DX" num_pins="1"/>
     <input name="SR" num_pins="1"/>
     <output name="A" num_pins="1"/>
     <output name="AMUX" num_pins="1"/>
     <output name="AQ" num_pins="1"/>
     <output name="B" num_pins="1"/>
     <output name="BMUX" num_pins="1"/>
     <output name="BQ" num_pins="1"/>
     <output name="C" num_pins="1"/>
     <output name="CMUX" num_pins="1"/>
     <output name="COUT" num_pins="1"/>
     <output name="CQ" num_pins="1"/>
     <output name="D" num_pins="1"/>
     <output name="DMUX" num_pins="1"/>
     <output name="DQ" num_pins="1"/>
     <interconnect>
      <!-- Slice->Cell -->
      <direct input="CLBLL_LL.A1" name="SLICEL.A1" output="SLICEL.A1"/>
      <direct input="CLBLL_LL.A2" name="SLICEL.A2" output="SLICEL.A2"/>
      <direct input="CLBLL_LL.A3" name="SLICEL.A3" output="SLICEL.A3"/>
      <direct input="CLBLL_LL.A4" name="SLICEL.A4" output="SLICEL.A4"/>
      <direct input="CLBLL_LL.A5" name="SLICEL.A5" output="SLICEL.A5"/>
      <direct input="CLBLL_LL.A6" name="SLICEL.A6" output="SLICEL.A6"/>
      <direct input="CLBLL_LL.AX" name="SLICEL.AX" output="SLICEL.AX"/>
      <direct input="CLBLL_LL.B1" name="SLICEL.B1" output="SLICEL.B1"/>
      <direct input="CLBLL_LL.B2" name="SLICEL.B2" output="SLICEL.B2"/>
      <direct input="CLBLL_LL.B3" name="SLICEL.B3" output="SLICEL.B3"/>
      <direct input="CLBLL_LL.B4" name="SLICEL.B4" output="SLICEL.B4"/>
      <direct input="CLBLL_LL.B5" name="SLICEL.B5" output="SLICEL.B5"/>
      <direct input="CLBLL_LL.B6" name="SLICEL.B6" output="SLICEL.B6"/>
      <direct input="CLBLL_LL.BX" name="SLICEL.BX" output="SLICEL.BX"/>
      <direct input="CLBLL_LL.C1" name="SLICEL.C1" output="SLICEL.C1"/>
      <direct input="CLBLL_LL.C2" name="SLICEL.C2" output="SLICEL.C2"/>
      <direct input="CLBLL_LL.C3" name="SLICEL.C3" output="SLICEL.C3"/>
      <direct input="CLBLL_LL.C4" name="SLICEL.C4" output="SLICEL.C4"/>
      <direct input="CLBLL_LL.C5" name="SLICEL.C5" output="SLICEL.C5"/>
      <direct input="CLBLL_LL.C6" name="SLICEL.C6" output="SLICEL.C6"/>
      <direct input="CLBLL_LL.CE" name="SLICEL.CE" output="SLICEL.CE"/>
      <direct input="CLBLL_LL.CIN" name="SLICEL.CIN" output="SLICEL.CIN"/>
      <direct input="CLBLL_LL.CLK" name="SLICEL.CLK" output="SLICEL.CLK"/>
      <direct input="CLBLL_LL.CX" name="SLICEL.CX" output="SLICEL.CX"/>
      <direct input="CLBLL_LL.D1" name="SLICEL.D1" output="SLICEL.D1"/>
      <direct input="CLBLL_LL.D2" name="SLICEL.D2" output="SLICEL.D2"/>
      <direct input="CLBLL_LL.D3" name="SLICEL.D3" output="SLICEL.D3"/>
      <direct input="CLBLL_LL.D4" name="SLICEL.D4" output="SLICEL.D4"/>
      <direct input="CLBLL_LL.D5" name="SLICEL.D5" output="SLICEL.D5"/>
      <direct input="CLBLL_LL.D6" name="SLICEL.D6" output="SLICEL.D6"/>
      <direct input="CLBLL_LL.DX" name="SLICEL.DX" output="SLICEL.DX"/>
      <direct input="CLBLL_LL.SR" name="SLICEL.SR" output="SLICEL.SR"/>
      <!-- Cell->Slice -->
      <direct input="SLICEL.A" name="CLBLL_LL.A" output="CLBLL_LL.A"/>
      <direct input="SLICEL.AMUX" name="CLBLL_LL.AMUX" output="CLBLL_LL.AMUX"/>
      <direct input="SLICEL.AQ" name="CLBLL_LL.AQ" output="CLBLL_LL.AQ"/>
      <direct input="SLICEL.B" name="CLBLL_LL.B" output="CLBLL_LL.B"/>
      <direct input="SLICEL.BMUX" name="CLBLL_LL.BMUX" output="CLBLL_LL.BMUX"/>
      <direct input="SLICEL.BQ" name="CLBLL_LL.BQ" output="CLBLL_LL.BQ"/>
      <direct input="SLICEL.C" name="CLBLL_LL.C" output="CLBLL_LL.C"/>
      <direct input="SLICEL.CMUX" name="CLBLL_LL.CMUX" output="CLBLL_LL.CMUX"/>
      <direct input="SLICEL.COUT" name="CLBLL_LL.COUT" output="CLBLL_LL.COUT"/>
      <direct input="SLICEL.CQ" name="CLBLL_LL.CQ" output="CLBLL_LL.CQ"/>
      <direct input="SLICEL.D" name="CLBLL_LL.D" output="CLBLL_LL.D"/>
      <direct input="SLICEL.DMUX" name="CLBLL_LL.DMUX" output="CLBLL_LL.DMUX"/>
      <direct input="SLICEL.DQ" name="CLBLL_LL.DQ" output="CLBLL_LL.DQ"/>
     </interconnect>
    </pb_type>
    <interconnect>
     <!-- Tile->Slice -->
     <direct input="TILE_CLBLL_L.BYP[0]" name="CLBLL_L.AX" output="CLBLL_L.AX"/>
     <direct input="TILE_CLBLL_L.BYP[1]" name="CLBLL_LL.AX" output="CLBLL_LL.AX"/>
     <direct input="TILE_CLBLL_L.BYP[2]" name="CLBLL_L.CX" output="CLBLL_L.CX"/>
     <direct input="TILE_CLBLL_L.BYP[3]" name="CLBLL_LL.CX" output="CLBLL_LL.CX"/>
     <direct input="TILE_CLBLL_L.BYP[4]" name="CLBLL_LL.BX" output="CLBLL_LL.BX"/>
     <direct input="TILE_CLBLL_L.BYP[5]" name="CLBLL_L.BX" output="CLBLL_L.BX"/>
     <direct input="TILE_CLBLL_L.BYP[6]" name="CLBLL_LL.DX" output="CLBLL_LL.DX"/>
     <direct input="TILE_CLBLL_L.BYP[7]" name="CLBLL_L.DX" output="CLBLL_L.DX"/>
     <direct input="TILE_CLBLL_L.CLK[0]" name="CLBLL_L.CLK" output="CLBLL_L.CLK"/>
     <direct input="TILE_CLBLL_L.CLK[1]" name="CLBLL_LL.CLK" output="CLBLL_LL.CLK"/>
     <direct input="TILE_CLBLL_L.CTRL[0]" name="CLBLL_L.SR" output="CLBLL_L.SR"/>
     <direct input="TILE_CLBLL_L.CTRL[1]" name="CLBLL_LL.SR" output="CLBLL_LL.SR"/>
     <direct input="TILE_CLBLL_L.FAN[6]" name="CLBLL_L.CE" output="CLBLL_L.CE"/>
     <direct input="TILE_CLBLL_L.FAN[7]" name="CLBLL_LL.CE" output="CLBLL_LL.CE"/>
     <direct input="TILE_CLBLL_L.IMUX[0]" name="CLBLL_L.A3" output="CLBLL_L.A3"/>
     <direct input="TILE_CLBLL_L.IMUX[1]" name="CLBLL_LL.A3" output="CLBLL_LL.A3"/>
     <direct input="TILE_CLBLL_L.IMUX[2]" name="CLBLL_LL.A2" output="CLBLL_LL.A2"/>
     <direct input="TILE_CLBLL_L.IMUX[3]" name="CLBLL_L.A2" output="CLBLL_L.A2"/>
     <direct input="TILE_CLBLL_L.IMUX[4]" name="CLBLL_LL.A6" output="CLBLL_LL.A6"/>
     <direct input="TILE_CLBLL_L.IMUX[5]" name="CLBLL_L.A6" output="CLBLL_L.A6"/>
     <direct input="TILE_CLBLL_L.IMUX[6]" name="CLBLL_L.A1" output="CLBLL_L.A1"/>
     <direct input="TILE_CLBLL_L.IMUX[7]" name="CLBLL_LL.A1" output="CLBLL_LL.A1"/>
     <direct input="TILE_CLBLL_L.IMUX[8]" name="CLBLL_LL.A5" output="CLBLL_LL.A5"/>
     <direct input="TILE_CLBLL_L.IMUX[9]" name="CLBLL_L.A5" output="CLBLL_L.A5"/>
     <direct input="TILE_CLBLL_L.IMUX[10]" name="CLBLL_L.A4" output="CLBLL_L.A4"/>
     <direct input="TILE_CLBLL_L.IMUX[11]" name="CLBLL_LL.A4" output="CLBLL_LL.A4"/>
     <direct input="TILE_CLBLL_L.IMUX[12]" name="CLBLL_LL.B6" output="CLBLL_LL.B6"/>
     <direct input="TILE_CLBLL_L.IMUX[13]" name="CLBLL_L.B6" output="CLBLL_L.B6"/>
     <direct input="TILE_CLBLL_L.IMUX[14]" name="CLBLL_L.B1" output="CLBLL_L.B1"/>
     <direct input="TILE_CLBLL_L.IMUX[15]" name="CLBLL_LL.B1" output="CLBLL_LL.B1"/>
     <direct input="TILE_CLBLL_L.IMUX[16]" name="CLBLL_L.B3" output="CLBLL_L.B3"/>
     <direct input="TILE_CLBLL_L.IMUX[17]" name="CLBLL_LL.B3" output="CLBLL_LL.B3"/>
     <direct input="TILE_CLBLL_L.IMUX[18]" name="CLBLL_LL.B2" output="CLBLL_LL.B2"/>
     <direct input="TILE_CLBLL_L.IMUX[19]" name="CLBLL_L.B2" output="CLBLL_L.B2"/>
     <direct input="TILE_CLBLL_L.IMUX[20]" name="CLBLL_L.C2" output="CLBLL_L.C2"/>
     <direct input="TILE_CLBLL_L.IMUX[21]" name="CLBLL_L.C4" output="CLBLL_L.C4"/>
     <direct input="TILE_CLBLL_L.IMUX[22]" name="CLBLL_LL.C3" output="CLBLL_LL.C3"/>
     <direct input="TILE_CLBLL_L.IMUX[23]" name="CLBLL_L.C3" output="CLBLL_L.C3"/>
     <direct input="TILE_CLBLL_L.IMUX[24]" name="CLBLL_LL.B5" output="CLBLL_LL.B5"/>
     <direct input="TILE_CLBLL_L.IMUX[25]" name="CLBLL_L.B5" output="CLBLL_L.B5"/>
     <direct input="TILE_CLBLL_L.IMUX[26]" name="CLBLL_L.B4" output="CLBLL_L.B4"/>
     <direct input="TILE_CLBLL_L.IMUX[27]" name="CLBLL_LL.B4" output="CLBLL_LL.B4"/>
     <direct input="TILE_CLBLL_L.IMUX[28]" name="CLBLL_LL.C4" output="CLBLL_LL.C4"/>
     <direct input="TILE_CLBLL_L.IMUX[29]" name="CLBLL_LL.C2" output="CLBLL_LL.C2"/>
     <direct input="TILE_CLBLL_L.IMUX[30]" name="CLBLL_L.C5" output="CLBLL_L.C5"/>
     <direct input="TILE_CLBLL_L.IMUX[31]" name="CLBLL_LL.C5" output="CLBLL_LL.C5"/>
     <direct input="TILE_CLBLL_L.IMUX[32]" name="CLBLL_LL.C1" output="CLBLL_LL.C1"/>
     <direct input="TILE_CLBLL_L.IMUX[33]" name="CLBLL_L.C1" output="CLBLL_L.C1"/>
     <direct input="TILE_CLBLL_L.IMUX[34]" name="CLBLL_L.C6" output="CLBLL_L.C6"/>
     <direct input="TILE_CLBLL_L.IMUX[35]" name="CLBLL_LL.C6" output="CLBLL_LL.C6"/>
     <direct input="TILE_CLBLL_L.IMUX[36]" name="CLBLL_L.D2" output="CLBLL_L.D2"/>
     <direct input="TILE_CLBLL_L.IMUX[37]" name="CLBLL_L.D4" output="CLBLL_L.D4"/>
     <direct input="TILE_CLBLL_L.IMUX[38]" name="CLBLL_LL.D3" output="CLBLL_LL.D3"/>
     <direct input="TILE_CLBLL_L.IMUX[39]" name="CLBLL_L.D3" output="CLBLL_L.D3"/>
     <direct input="TILE_CLBLL_L.IMUX[40]" name="CLBLL_LL.D1" output="CLBLL_LL.D1"/>
     <direct input="TILE_CLBLL_L.IMUX[41]" name="CLBLL_L.D1" output="CLBLL_L.D1"/>
     <direct input="TILE_CLBLL_L.IMUX[42]" name="CLBLL_L.D6" output="CLBLL_L.D6"/>
     <direct input="TILE_CLBLL_L.IMUX[43]" name="CLBLL_LL.D6" output="CLBLL_LL.D6"/>
     <direct input="TILE_CLBLL_L.IMUX[44]" name="CLBLL_LL.D4" output="CLBLL_LL.D4"/>
     <direct input="TILE_CLBLL_L.IMUX[45]" name="CLBLL_LL.D2" output="CLBLL_LL.D2"/>
     <direct input="TILE_CLBLL_L.IMUX[46]" name="CLBLL_L.D5" output="CLBLL_L.D5"/>
     <direct input="TILE_CLBLL_L.IMUX[47]" name="CLBLL_LL.D5" output="CLBLL_LL.D5"/>
     <direct input="TILE_CLBLL_L.LL_CIN_N" name="CLBLL_LL.CIN" output="CLBLL_LL.CIN"/>
     <direct input="TILE_CLBLL_L.L_CIN_N" name="CLBLL_L.CIN" output="CLBLL_L.CIN"/>
     <!-- Slice->Tile -->
     <direct input="CLBLL_L.A" name="TILE_CLBLL_L.LOGIC_OUTS[8]" output="TILE_CLBLL_L.LOGIC_OUTS[8]"/>
     <direct input="CLBLL_L.AMUX" name="TILE_CLBLL_L.LOGIC_OUTS[16]" output="TILE_CLBLL_L.LOGIC_OUTS[16]"/>
     <direct input="CLBLL_L.AQ" name="TILE_CLBLL_L.LOGIC_OUTS[0]" output="TILE_CLBLL_L.LOGIC_OUTS[0]"/>
     <direct input="CLBLL_L.B" name="TILE_CLBLL_L.LOGIC_OUTS[9]" output="TILE_CLBLL_L.LOGIC_OUTS[9]"/>
     <direct input="CLBLL_L.BMUX" name="TILE_CLBLL_L.LOGIC_OUTS[17]" output="TILE_CLBLL_L.LOGIC_OUTS[17]"/>
     <direct input="CLBLL_L.BQ" name="TILE_CLBLL_L.LOGIC_OUTS[1]" output="TILE_CLBLL_L.LOGIC_OUTS[1]"/>
     <direct input="CLBLL_L.C" name="TILE_CLBLL_L.LOGIC_OUTS[10]" output="TILE_CLBLL_L.LOGIC_OUTS[10]"/>
     <direct input="CLBLL_L.CMUX" name="TILE_CLBLL_L.LOGIC_OUTS[18]" output="TILE_CLBLL_L.LOGIC_OUTS[18]"/>
     <direct input="CLBLL_L.COUT" name="TILE_CLBLL_L.L_COUT_N" output="TILE_CLBLL_L.L_COUT_N"/>
     <direct input="CLBLL_L.CQ" name="TILE_CLBLL_L.LOGIC_OUTS[2]" output="TILE_CLBLL_L.LOGIC_OUTS[2]"/>
     <direct input="CLBLL_L.D" name="TILE_CLBLL_L.LOGIC_OUTS[11]" output="TILE_CLBLL_L.LOGIC_OUTS[11]"/>
     <direct input="CLBLL_L.DMUX" name="TILE_CLBLL_L.LOGIC_OUTS[19]" output="TILE_CLBLL_L.LOGIC_OUTS[19]"/>
     <direct input="CLBLL_L.DQ" name="TILE_CLBLL_L.LOGIC_OUTS[3]" output="TILE_CLBLL_L.LOGIC_OUTS[3]"/>
     <direct input="CLBLL_LL.A" name="TILE_CLBLL_L.LOGIC_OUTS[12]" output="TILE_CLBLL_L.LOGIC_OUTS[12]"/>
     <direct input="CLBLL_LL.AMUX" name="TILE_CLBLL_L.LOGIC_OUTS[20]" output="TILE_CLBLL_L.LOGIC_OUTS[20]"/>
     <direct input="CLBLL_LL.AQ" name="TILE_CLBLL_L.LOGIC_OUTS[4]" output="TILE_CLBLL_L.LOGIC_OUTS[4]"/>
     <direct input="CLBLL_LL.B" name="TILE_CLBLL_L.LOGIC_OUTS[13]" output="TILE_CLBLL_L.LOGIC_OUTS[13]"/>
     <direct input="CLBLL_LL.BMUX" name="TILE_CLBLL_L.LOGIC_OUTS[21]" output="TILE_CLBLL_L.LOGIC_OUTS[21]"/>
     <direct input="CLBLL_LL.BQ" name="TILE_CLBLL_L.LOGIC_OUTS[5]" output="TILE_CLBLL_L.LOGIC_OUTS[5]"/>
     <direct input="CLBLL_LL.C" name="TILE_CLBLL_L.LOGIC_OUTS[14]" output="TILE_CLBLL_L.LOGIC_OUTS[14]"/>
     <direct input="CLBLL_LL.CMUX" name="TILE_CLBLL_L.LOGIC_OUTS[22]" output="TILE_CLBLL_L.LOGIC_OUTS[22]"/>
     <direct input="CLBLL_LL.COUT" name="TILE_CLBLL_L.LL_COUT_N" output="TILE_CLBLL_L.LL_COUT_N"/>
     <direct input="CLBLL_LL.CQ" name="TILE_CLBLL_L.LOGIC_OUTS[6]" output="TILE_CLBLL_L.LOGIC_OUTS[6]"/>
     <direct input="CLBLL_LL.D" name="TILE_CLBLL_L.LOGIC_OUTS[15]" output="TILE_CLBLL_L.LOGIC_OUTS[15]"/>
     <direct input="CLBLL_LL.DMUX" name="TILE_CLBLL_L.LOGIC_OUTS[23]" output="TILE_CLBLL_L.LOGIC_OUTS[23]"/>
     <direct input="CLBLL_LL.DQ" name="TILE_CLBLL_L.LOGIC_OUTS[7]" output="TILE_CLBLL_L.LOGIC_OUTS[7]"/>
    </interconnect>
   </pb_type>
   <interconnect>
    <direct input="TILE_INT_L.CIN_N[0]" output="TILE_CLBLL_L.L_CIN_N[0]" name="TILE_CLBLL_L.L_CIN_N[0]"/>
    <direct input="TILE_INT_L.CIN_N[0]" output="TILE_CLBLL_L.LL_CIN_N[0]" name="TILE_CLBLL_L.LL_CIN_N[0]"/>
    <direct output="TILE_INT_L.COUT_N[0]" input="TILE_CLBLL_L.L_COUT_N[0]" name="TILE_CLBLL_L.L_COUT_N[0]"/>
    <direct output="TILE_INT_L.COUT_N[0]" input="TILE_CLBLL_L.LL_COUT_N[0]" name="TILE_CLBLL_L.LL_COUT_N[0]"/>
    <!-- Output muxes for EE2BEG -->
    <mux input="TILE_INT_L.EE2END[0] TILE_INT_L.EE4END[0] TILE_INT_L.EL1END[0] TILE_INT_L.ER1END[0] TILE_CLBLL_L.LOGIC_OUTS[0] TILE_CLBLL_L.LOGIC_OUTS[4] TILE_CLBLL_L.LOGIC_OUTS[8] TILE_CLBLL_L.LOGIC_OUTS[12] TILE_CLBLL_L.LOGIC_OUTS[18] TILE_CLBLL_L.LOGIC_OUTS[22] TILE_INT_L.NE2END[0] TILE_INT_L.NE6END[0] TILE_INT_L.NL1END[0] TILE_INT_L.NN2END[0] TILE_INT_L.NN6END[0] TILE_INT_L.NR1END[0] TILE_INT_L.SE2END[0] TILE_INT_L.SE6END[0] TILE_INT_L.SS2END[0] TILE_INT_L.SS6END[0]" name="TILE_INT_L.EE2BEG[0]" output="TILE_INT_L.EE2BEG[0]"/>
    <mux input="TILE_INT_L.EE2END[1] TILE_INT_L.EE4END[1] TILE_INT_L.EL1END[1] TILE_INT_L.ER1END[1] TILE_CLBLL_L.LOGIC_OUTS[1] TILE_CLBLL_L.LOGIC_OUTS[5] TILE_CLBLL_L.LOGIC_OUTS[9] TILE_CLBLL_L.LOGIC_OUTS[13] TILE_CLBLL_L.LOGIC_OUTS[19] TILE_CLBLL_L.LOGIC_OUTS[23] TILE_INT_L.NE2END[1] TILE_INT_L.NE6END[1] TILE_INT_L.NL1END[1] TILE_INT_L.NN2END[1] TILE_INT_L.NN6END[1] TILE_INT_L.NR1END[1] TILE_INT_L.SE2END[1] TILE_INT_L.SE6END[1] TILE_INT_L.SS2END[1] TILE_INT_L.SS6END[1]" name="TILE_INT_L.EE2BEG[1]" output="TILE_INT_L.EE2BEG[1]"/>
    <mux input="TILE_INT_L.EE2END[2] TILE_INT_L.EE4END[2] TILE_INT_L.EL1END[2] TILE_INT_L.ER1END[2] TILE_CLBLL_L.LOGIC_OUTS[2] TILE_CLBLL_L.LOGIC_OUTS[6] TILE_CLBLL_L.LOGIC_OUTS[10] TILE_CLBLL_L.LOGIC_OUTS[14] TILE_CLBLL_L.LOGIC_OUTS[16] TILE_CLBLL_L.LOGIC_OUTS[20] TILE_INT_L.NE2END[2] TILE_INT_L.NE6END[2] TILE_INT_L.NL1END[2] TILE_INT_L.NN2END[2] TILE_INT_L.NN6END[2] TILE_INT_L.NR1END[2] TILE_INT_L.SE2END[2] TILE_INT_L.SE6END[2] TILE_INT_L.SS2END[2] TILE_INT_L.SS6END[2]" name="TILE_INT_L.EE2BEG[2]" output="TILE_INT_L.EE2BEG[2]"/>
    <mux input="TILE_INT_L.EE2END[3] TILE_INT_L.EE4END[3] TILE_INT_L.EL1END[3] TILE_INT_L.ER1END[3] TILE_CLBLL_L.LOGIC_OUTS[3] TILE_CLBLL_L.LOGIC_OUTS[7] TILE_CLBLL_L.LOGIC_OUTS[11] TILE_CLBLL_L.LOGIC_OUTS[15] TILE_CLBLL_L.LOGIC_OUTS[17] TILE_CLBLL_L.LOGIC_OUTS[21] TILE_INT_L.NE2END[3] TILE_INT_L.NE6END[3] TILE_INT_L.NN2END[3] TILE_INT_L.NN6END[3] TILE_INT_L.NR1END[3] TILE_INT_L.SE2END[3] TILE_INT_L.SE6END[3] TILE_INT_L.SS2END[3] TILE_INT_L.SS6END[3]" name="TILE_INT_L.EE2BEG[3]" output="TILE_INT_L.EE2BEG[3]"/>
    <!-- Output muxes for EE4BEG -->
    <mux input="TILE_INT_L.EE2END[0] TILE_INT_L.EE4END[0] TILE_CLBLL_L.LOGIC_OUTS[0] TILE_CLBLL_L.LOGIC_OUTS[4] TILE_CLBLL_L.LOGIC_OUTS[8] TILE_CLBLL_L.LOGIC_OUTS[12] TILE_CLBLL_L.LOGIC_OUTS[18] TILE_CLBLL_L.LOGIC_OUTS[22] TILE_INT_L.NE2END[0] TILE_INT_L.NE6END[0] TILE_INT_L.NN2END[0] TILE_INT_L.NN6END[0] TILE_INT_L.SE2END[0] TILE_INT_L.SE6END[0] TILE_INT_L.SS2END[0] TILE_INT_L.SS6END[0] TILE_INT_L.SW2END[0] TILE_INT_L.SW6END[0]" name="TILE_INT_L.EE4BEG[0]" output="TILE_INT_L.EE4BEG[0]"/>
    <mux input="TILE_INT_L.EE2END[1] TILE_INT_L.EE4END[1] TILE_CLBLL_L.LOGIC_OUTS[1] TILE_CLBLL_L.LOGIC_OUTS[5] TILE_CLBLL_L.LOGIC_OUTS[9] TILE_CLBLL_L.LOGIC_OUTS[13] TILE_CLBLL_L.LOGIC_OUTS[19] TILE_CLBLL_L.LOGIC_OUTS[23] TILE_INT_L.NE2END[1] TILE_INT_L.NE6END[1] TILE_INT_L.NN2END[1] TILE_INT_L.NN6END[1] TILE_INT_L.SE2END[1] TILE_INT_L.SE6END[1] TILE_INT_L.SS2END[1] TILE_INT_L.SS6END[1] TILE_INT_L.SW2END[1] TILE_INT_L.SW6END[1]" name="TILE_INT_L.EE4BEG[1]" output="TILE_INT_L.EE4BEG[1]"/>
    <mux input="TILE_INT_L.EE2END[2] TILE_INT_L.EE4END[2] TILE_CLBLL_L.LOGIC_OUTS[2] TILE_CLBLL_L.LOGIC_OUTS[6] TILE_CLBLL_L.LOGIC_OUTS[10] TILE_CLBLL_L.LOGIC_OUTS[14] TILE_CLBLL_L.LOGIC_OUTS[16] TILE_CLBLL_L.LOGIC_OUTS[20] TILE_INT_L.NE2END[2] TILE_INT_L.NE6END[2] TILE_INT_L.NN2END[2] TILE_INT_L.NN6END[2] TILE_INT_L.SE2END[2] TILE_INT_L.SE6END[2] TILE_INT_L.SS2END[2] TILE_INT_L.SS6END[2] TILE_INT_L.SW2END[2] TILE_INT_L.SW6END[2]" name="TILE_INT_L.EE4BEG[2]" output="TILE_INT_L.EE4BEG[2]"/>
    <mux input="TILE_INT_L.EE2END[3] TILE_INT_L.EE4END[3] TILE_CLBLL_L.LOGIC_OUTS[3] TILE_CLBLL_L.LOGIC_OUTS[7] TILE_CLBLL_L.LOGIC_OUTS[11] TILE_CLBLL_L.LOGIC_OUTS[15] TILE_CLBLL_L.LOGIC_OUTS[17] TILE_CLBLL_L.LOGIC_OUTS[21] TILE_INT_L.NE2END[3] TILE_INT_L.NE6END[3] TILE_INT_L.NN2END[3] TILE_INT_L.NN6END[3] TILE_INT_L.SE2END[3] TILE_INT_L.SE6END[3] TILE_INT_L.SS2END[3] TILE_INT_L.SS6END[3] TILE_INT_L.SW2END[3] TILE_INT_L.SW6END[3]" name="TILE_INT_L.EE4BEG[3]" output="TILE_INT_L.EE4BEG[3]"/>
    <!-- Output muxes for EL1BEG -->
    <mux input="TILE_INT_L.EE2END[1] TILE_INT_L.EE4END[1] TILE_INT_L.EL1END[1] TILE_INT_L.ER1END[1] TILE_CLBLL_L.LOGIC_OUTS[1] TILE_CLBLL_L.LOGIC_OUTS[5] TILE_CLBLL_L.LOGIC_OUTS[9] TILE_CLBLL_L.LOGIC_OUTS[13] TILE_CLBLL_L.LOGIC_OUTS[19] TILE_CLBLL_L.LOGIC_OUTS[23] TILE_INT_L.NE2END[1] TILE_INT_L.NE6END[1] TILE_INT_L.NL1END[1] TILE_INT_L.NN2END[1] TILE_INT_L.NN6END[1] TILE_INT_L.NR1END[1] TILE_INT_L.NW2END[1] TILE_INT_L.NW6END[1] TILE_INT_L.SE2END[1] TILE_INT_L.SE6END[1]" name="TILE_INT_L.EL1BEG[0]" output="TILE_INT_L.EL1BEG[0]"/>
    <mux input="TILE_INT_L.EE2END[2] TILE_INT_L.EE4END[2] TILE_INT_L.EL1END[2] TILE_INT_L.ER1END[2] TILE_CLBLL_L.LOGIC_OUTS[2] TILE_CLBLL_L.LOGIC_OUTS[6] TILE_CLBLL_L.LOGIC_OUTS[10] TILE_CLBLL_L.LOGIC_OUTS[14] TILE_CLBLL_L.LOGIC_OUTS[16] TILE_CLBLL_L.LOGIC_OUTS[20] TILE_INT_L.NE2END[2] TILE_INT_L.NE6END[2] TILE_INT_L.NL1END[2] TILE_INT_L.NN2END[2] TILE_INT_L.NN6END[2] TILE_INT_L.NR1END[2] TILE_INT_L.NW2END[2] TILE_INT_L.NW6END[2] TILE_INT_L.SE2END[2] TILE_INT_L.SE6END[2]" name="TILE_INT_L.EL1BEG[1]" output="TILE_INT_L.EL1BEG[1]"/>
    <mux input="TILE_INT_L.EE2END[3] TILE_INT_L.EE4END[3] TILE_INT_L.EL1END[3] TILE_INT_L.ER1END[3] TILE_CLBLL_L.LOGIC_OUTS[3] TILE_CLBLL_L.LOGIC_OUTS[7] TILE_CLBLL_L.LOGIC_OUTS[11] TILE_CLBLL_L.LOGIC_OUTS[15] TILE_CLBLL_L.LOGIC_OUTS[17] TILE_CLBLL_L.LOGIC_OUTS[21] TILE_INT_L.NE2END[3] TILE_INT_L.NE6END[3] TILE_INT_L.NN2END[3] TILE_INT_L.NN6END[3] TILE_INT_L.NR1END[3] TILE_INT_L.NW2END[3] TILE_INT_L.NW6END[3] TILE_INT_L.SE2END[3] TILE_INT_L.SE6END[3]" name="TILE_INT_L.EL1BEG[2]" output="TILE_INT_L.EL1BEG[2]"/>
    <!-- Output muxes for ER1BEG -->
    <mux input="TILE_INT_L.EE2END[0] TILE_INT_L.EE4END[0] TILE_INT_L.EL1END[0] TILE_INT_L.ER1END[0] TILE_CLBLL_L.LOGIC_OUTS[0] TILE_CLBLL_L.LOGIC_OUTS[4] TILE_CLBLL_L.LOGIC_OUTS[8] TILE_CLBLL_L.LOGIC_OUTS[12] TILE_CLBLL_L.LOGIC_OUTS[18] TILE_CLBLL_L.LOGIC_OUTS[22] TILE_INT_L.SE2END[0] TILE_INT_L.SE6END[0] TILE_INT_L.SL1END[0] TILE_INT_L.SS2END[0] TILE_INT_L.SS6END[0] TILE_INT_L.SW2END[0] TILE_INT_L.SW6END[0] TILE_INT_L.WW2END[0] TILE_INT_L.WW4END[1]" name="TILE_INT_L.ER1BEG[1]" output="TILE_INT_L.ER1BEG[1]"/>
    <mux input="TILE_INT_L.EE2END[1] TILE_INT_L.EE4END[1] TILE_INT_L.EL1END[1] TILE_INT_L.ER1END[1] TILE_CLBLL_L.LOGIC_OUTS[1] TILE_CLBLL_L.LOGIC_OUTS[5] TILE_CLBLL_L.LOGIC_OUTS[9] TILE_CLBLL_L.LOGIC_OUTS[13] TILE_CLBLL_L.LOGIC_OUTS[19] TILE_CLBLL_L.LOGIC_OUTS[23] TILE_INT_L.SE2END[1] TILE_INT_L.SE6END[1] TILE_INT_L.SL1END[1] TILE_INT_L.SR1END[1] TILE_INT_L.SS2END[1] TILE_INT_L.SS6END[1] TILE_INT_L.SW2END[1] TILE_INT_L.SW6END[1] TILE_INT_L.WW2END[1] TILE_INT_L.WW4END[2]" name="TILE_INT_L.ER1BEG[2]" output="TILE_INT_L.ER1BEG[2]"/>
    <mux input="TILE_INT_L.EE2END[2] TILE_INT_L.EE4END[2] TILE_INT_L.EL1END[2] TILE_INT_L.ER1END[2] TILE_CLBLL_L.LOGIC_OUTS[2] TILE_CLBLL_L.LOGIC_OUTS[6] TILE_CLBLL_L.LOGIC_OUTS[10] TILE_CLBLL_L.LOGIC_OUTS[14] TILE_CLBLL_L.LOGIC_OUTS[16] TILE_CLBLL_L.LOGIC_OUTS[20] TILE_INT_L.SE2END[2] TILE_INT_L.SE6END[2] TILE_INT_L.SL1END[2] TILE_INT_L.SR1END[2] TILE_INT_L.SS2END[2] TILE_INT_L.SS6END[2] TILE_INT_L.SW2END[2] TILE_INT_L.SW6END[2] TILE_INT_L.WW2END[2] TILE_INT_L.WW4END[3]" name="TILE_INT_L.ER1BEG[3]" output="TILE_INT_L.ER1BEG[3]"/>
    <!-- Output muxes for NE2BEG -->
    <mux input="TILE_INT_L.EE2END[0] TILE_INT_L.EE4END[0] TILE_INT_L.EL1END[0] TILE_INT_L.ER1END[0] TILE_CLBLL_L.LOGIC_OUTS[0] TILE_CLBLL_L.LOGIC_OUTS[4] TILE_CLBLL_L.LOGIC_OUTS[8] TILE_CLBLL_L.LOGIC_OUTS[12] TILE_CLBLL_L.LOGIC_OUTS[18] TILE_CLBLL_L.LOGIC_OUTS[22] TILE_INT_L.NE2END[0] TILE_INT_L.NE6END[0] TILE_INT_L.NL1END[0] TILE_INT_L.NN2END[0] TILE_INT_L.NN6END[0] TILE_INT_L.NR1END[0] TILE_INT_L.NW2END[0] TILE_INT_L.NW6END[0] TILE_INT_L.SE2END[0] TILE_INT_L.SE6END[0]" name="TILE_INT_L.NE2BEG[0]" output="TILE_INT_L.NE2BEG[0]"/>
    <mux input="TILE_INT_L.EE2END[1] TILE_INT_L.EE4END[1] TILE_INT_L.EL1END[1] TILE_INT_L.ER1END[1] TILE_CLBLL_L.LOGIC_OUTS[1] TILE_CLBLL_L.LOGIC_OUTS[5] TILE_CLBLL_L.LOGIC_OUTS[9] TILE_CLBLL_L.LOGIC_OUTS[13] TILE_CLBLL_L.LOGIC_OUTS[19] TILE_CLBLL_L.LOGIC_OUTS[23] TILE_INT_L.NE2END[1] TILE_INT_L.NE6END[1] TILE_INT_L.NL1END[1] TILE_INT_L.NN2END[1] TILE_INT_L.NN6END[1] TILE_INT_L.NR1END[1] TILE_INT_L.NW2END[1] TILE_INT_L.NW6END[1] TILE_INT_L.SE2END[1] TILE_INT_L.SE6END[1]" name="TILE_INT_L.NE2BEG[1]" output="TILE_INT_L.NE2BEG[1]"/>
    <mux input="TILE_INT_L.EE2END[2] TILE_INT_L.EE4END[2] TILE_INT_L.EL1END[2] TILE_INT_L.ER1END[2] TILE_CLBLL_L.LOGIC_OUTS[2] TILE_CLBLL_L.LOGIC_OUTS[6] TILE_CLBLL_L.LOGIC_OUTS[10] TILE_CLBLL_L.LOGIC_OUTS[14] TILE_CLBLL_L.LOGIC_OUTS[16] TILE_CLBLL_L.LOGIC_OUTS[20] TILE_INT_L.NE2END[2] TILE_INT_L.NE6END[2] TILE_INT_L.NL1END[2] TILE_INT_L.NN2END[2] TILE_INT_L.NN6END[2] TILE_INT_L.NR1END[2] TILE_INT_L.NW2END[2] TILE_INT_L.NW6END[2] TILE_INT_L.SE2END[2] TILE_INT_L.SE6END[2]" name="TILE_INT_L.NE2BEG[2]" output="TILE_INT_L.NE2BEG[2]"/>
    <mux input="TILE_INT_L.EE2END[3] TILE_INT_L.EE4END[3] TILE_INT_L.EL1END[3] TILE_INT_L.ER1END[3] TILE_CLBLL_L.LOGIC_OUTS[3] TILE_CLBLL_L.LOGIC_OUTS[7] TILE_CLBLL_L.LOGIC_OUTS[11] TILE_CLBLL_L.LOGIC_OUTS[15] TILE_CLBLL_L.LOGIC_OUTS[17] TILE_CLBLL_L.LOGIC_OUTS[21] TILE_INT_L.NE2END[3] TILE_INT_L.NE6END[3] TILE_INT_L.NN2END[3] TILE_INT_L.NN6END[3] TILE_INT_L.NR1END[3] TILE_INT_L.NW2END[3] TILE_INT_L.NW6END[3] TILE_INT_L.SE2END[3] TILE_INT_L.SE6END[3]" name="TILE_INT_L.NE2BEG[3]" output="TILE_INT_L.NE2BEG[3]"/>
    <!-- Output muxes for NE6BEG -->
    <mux input="TILE_INT_L.EE2END[0] TILE_INT_L.EE4END[0] TILE_CLBLL_L.LOGIC_OUTS[0] TILE_CLBLL_L.LOGIC_OUTS[4] TILE_CLBLL_L.LOGIC_OUTS[8] TILE_CLBLL_L.LOGIC_OUTS[12] TILE_CLBLL_L.LOGIC_OUTS[18] TILE_CLBLL_L.LOGIC_OUTS[22] TILE_INT_L.NE2END[0] TILE_INT_L.NE6END[0] TILE_INT_L.NN2END[0] TILE_INT_L.NN6END[0] TILE_INT_L.NW2END[0] TILE_INT_L.NW6END[0] TILE_INT_L.SE2END[0] TILE_INT_L.SE6END[0] TILE_INT_L.WW4END[0]" name="TILE_INT_L.NE6BEG[0]" output="TILE_INT_L.NE6BEG[0]"/>
    <mux input="TILE_INT_L.EE2END[1] TILE_INT_L.EE4END[1] TILE_CLBLL_L.LOGIC_OUTS[1] TILE_CLBLL_L.LOGIC_OUTS[5] TILE_CLBLL_L.LOGIC_OUTS[9] TILE_CLBLL_L.LOGIC_OUTS[13] TILE_CLBLL_L.LOGIC_OUTS[19] TILE_CLBLL_L.LOGIC_OUTS[23] TILE_INT_L.NE2END[1] TILE_INT_L.NE6END[1] TILE_INT_L.NN2END[1] TILE_INT_L.NN6END[1] TILE_INT_L.NW2END[1] TILE_INT_L.NW6END[1] TILE_INT_L.SE2END[1] TILE_INT_L.SE6END[1] TILE_INT_L.WW2END[0] TILE_INT_L.WW4END[1]" name="TILE_INT_L.NE6BEG[1]" output="TILE_INT_L.NE6BEG[1]"/>
    <mux input="TILE_INT_L.EE2END[2] TILE_INT_L.EE4END[2] TILE_CLBLL_L.LOGIC_OUTS[2] TILE_CLBLL_L.LOGIC_OUTS[6] TILE_CLBLL_L.LOGIC_OUTS[10] TILE_CLBLL_L.LOGIC_OUTS[14] TILE_CLBLL_L.LOGIC_OUTS[16] TILE_CLBLL_L.LOGIC_OUTS[20] TILE_INT_L.NE2END[2] TILE_INT_L.NE6END[2] TILE_INT_L.NN2END[2] TILE_INT_L.NN6END[2] TILE_INT_L.NW2END[2] TILE_INT_L.NW6END[2] TILE_INT_L.SE2END[2] TILE_INT_L.SE6END[2] TILE_INT_L.WW2END[1] TILE_INT_L.WW4END[2]" name="TILE_INT_L.NE6BEG[2]" output="TILE_INT_L.NE6BEG[2]"/>
    <mux input="TILE_INT_L.EE2END[3] TILE_INT_L.EE4END[3] TILE_CLBLL_L.LOGIC_OUTS[3] TILE_CLBLL_L.LOGIC_OUTS[7] TILE_CLBLL_L.LOGIC_OUTS[11] TILE_CLBLL_L.LOGIC_OUTS[15] TILE_CLBLL_L.LOGIC_OUTS[17] TILE_CLBLL_L.LOGIC_OUTS[21] TILE_INT_L.NE2END[3] TILE_INT_L.NE6END[3] TILE_INT_L.NN2END[3] TILE_INT_L.NN6END[3] TILE_INT_L.NW2END[3] TILE_INT_L.NW6END[3] TILE_INT_L.SE2END[3] TILE_INT_L.SE6END[3] TILE_INT_L.WW2END[2] TILE_INT_L.WW4END[3]" name="TILE_INT_L.NE6BEG[3]" output="TILE_INT_L.NE6BEG[3]"/>
    <!-- Output muxes for NL1BEG -->
    <mux input="TILE_CLBLL_L.LOGIC_OUTS[1] TILE_CLBLL_L.LOGIC_OUTS[5] TILE_CLBLL_L.LOGIC_OUTS[9] TILE_CLBLL_L.LOGIC_OUTS[13] TILE_CLBLL_L.LOGIC_OUTS[19] TILE_CLBLL_L.LOGIC_OUTS[23] TILE_INT_L.NE2END[1] TILE_INT_L.NE6END[1] TILE_INT_L.NL1END[1] TILE_INT_L.NN2END[1] TILE_INT_L.NN6END[1] TILE_INT_L.NR1END[1] TILE_INT_L.NW2END[1] TILE_INT_L.NW6END[1] TILE_INT_L.SW2END[0] TILE_INT_L.SW6END[0] TILE_INT_L.WL1END[0] TILE_INT_L.WR1END[1] TILE_INT_L.WW2END[0] TILE_INT_L.WW4END[1]" name="TILE_INT_L.NL1BEG[0]" output="TILE_INT_L.NL1BEG[0]"/>
    <mux input="TILE_CLBLL_L.LOGIC_OUTS[2] TILE_CLBLL_L.LOGIC_OUTS[6] TILE_CLBLL_L.LOGIC_OUTS[10] TILE_CLBLL_L.LOGIC_OUTS[14] TILE_CLBLL_L.LOGIC_OUTS[16] TILE_CLBLL_L.LOGIC_OUTS[20] TILE_INT_L.NE2END[2] TILE_INT_L.NE6END[2] TILE_INT_L.NL1END[2] TILE_INT_L.NN2END[2] TILE_INT_L.NN6END[2] TILE_INT_L.NR1END[2] TILE_INT_L.NW2END[2] TILE_INT_L.NW6END[2] TILE_INT_L.SW2END[1] TILE_INT_L.SW6END[1] TILE_INT_L.WL1END[1] TILE_INT_L.WR1END[2] TILE_INT_L.WW2END[1] TILE_INT_L.WW4END[2]" name="TILE_INT_L.NL1BEG[1]" output="TILE_INT_L.NL1BEG[1]"/>
    <mux input="TILE_CLBLL_L.LOGIC_OUTS[3] TILE_CLBLL_L.LOGIC_OUTS[7] TILE_CLBLL_L.LOGIC_OUTS[11] TILE_CLBLL_L.LOGIC_OUTS[15] TILE_CLBLL_L.LOGIC_OUTS[17] TILE_CLBLL_L.LOGIC_OUTS[21] TILE_INT_L.NE2END[3] TILE_INT_L.NE6END[3] TILE_INT_L.NN2END[3] TILE_INT_L.NN6END[3] TILE_INT_L.NR1END[3] TILE_INT_L.NW2END[3] TILE_INT_L.NW6END[3] TILE_INT_L.SW2END[2] TILE_INT_L.SW6END[2] TILE_INT_L.WL1END[2] TILE_INT_L.WR1END[3] TILE_INT_L.WW2END[2] TILE_INT_L.WW4END[3]" name="TILE_INT_L.NL1BEG[2]" output="TILE_INT_L.NL1BEG[2]"/>
    <!-- Output muxes for NN2BEG -->
    <mux input="TILE_INT_L.EE2END[0] TILE_INT_L.EE4END[0] TILE_CLBLL_L.LOGIC_OUTS[0] TILE_CLBLL_L.LOGIC_OUTS[4] TILE_CLBLL_L.LOGIC_OUTS[8] TILE_CLBLL_L.LOGIC_OUTS[12] TILE_CLBLL_L.LOGIC_OUTS[18] TILE_CLBLL_L.LOGIC_OUTS[22] TILE_INT_L.NE2END[0] TILE_INT_L.NE6END[0] TILE_INT_L.NL1END[0] TILE_INT_L.NN2END[0] TILE_INT_L.NN6END[0] TILE_INT_L.NR1END[0] TILE_INT_L.NW2END[0] TILE_INT_L.NW6END[0] TILE_INT_L.WR1END[0] TILE_INT_L.WW4END[0]" name="TILE_INT_L.NN2BEG[0]" output="TILE_INT_L.NN2BEG[0]"/>
    <mux input="TILE_INT_L.EE2END[1] TILE_INT_L.EE4END[1] TILE_CLBLL_L.LOGIC_OUTS[1] TILE_CLBLL_L.LOGIC_OUTS[5] TILE_CLBLL_L.LOGIC_OUTS[9] TILE_CLBLL_L.LOGIC_OUTS[13] TILE_CLBLL_L.LOGIC_OUTS[19] TILE_CLBLL_L.LOGIC_OUTS[23] TILE_INT_L.NE2END[1] TILE_INT_L.NE6END[1] TILE_INT_L.NL1END[1] TILE_INT_L.NN2END[1] TILE_INT_L.NN6END[1] TILE_INT_L.NR1END[1] TILE_INT_L.NW2END[1] TILE_INT_L.NW6END[1] TILE_INT_L.WL1END[0] TILE_INT_L.WR1END[1] TILE_INT_L.WW2END[0] TILE_INT_L.WW4END[1]" name="TILE_INT_L.NN2BEG[1]" output="TILE_INT_L.NN2BEG[1]"/>
    <mux input="TILE_INT_L.EE2END[2] TILE_INT_L.EE4END[2] TILE_CLBLL_L.LOGIC_OUTS[2] TILE_CLBLL_L.LOGIC_OUTS[6] TILE_CLBLL_L.LOGIC_OUTS[10] TILE_CLBLL_L.LOGIC_OUTS[14] TILE_CLBLL_L.LOGIC_OUTS[16] TILE_CLBLL_L.LOGIC_OUTS[20] TILE_INT_L.NE2END[2] TILE_INT_L.NE6END[2] TILE_INT_L.NL1END[2] TILE_INT_L.NN2END[2] TILE_INT_L.NN6END[2] TILE_INT_L.NR1END[2] TILE_INT_L.NW2END[2] TILE_INT_L.NW6END[2] TILE_INT_L.WL1END[1] TILE_INT_L.WR1END[2] TILE_INT_L.WW2END[1] TILE_INT_L.WW4END[2]" name="TILE_INT_L.NN2BEG[2]" output="TILE_INT_L.NN2BEG[2]"/>
    <mux input="TILE_INT_L.EE2END[3] TILE_INT_L.EE4END[3] TILE_CLBLL_L.LOGIC_OUTS[3] TILE_CLBLL_L.LOGIC_OUTS[7] TILE_CLBLL_L.LOGIC_OUTS[11] TILE_CLBLL_L.LOGIC_OUTS[15] TILE_CLBLL_L.LOGIC_OUTS[17] TILE_CLBLL_L.LOGIC_OUTS[21] TILE_INT_L.NE2END[3] TILE_INT_L.NE6END[3] TILE_INT_L.NN2END[3] TILE_INT_L.NN6END[3] TILE_INT_L.NR1END[3] TILE_INT_L.NW2END[3] TILE_INT_L.NW6END[3] TILE_INT_L.WL1END[2] TILE_INT_L.WR1END[3] TILE_INT_L.WW2END[2] TILE_INT_L.WW4END[3]" name="TILE_INT_L.NN2BEG[3]" output="TILE_INT_L.NN2BEG[3]"/>
    <!-- Output muxes for NN6BEG -->
    <mux input="TILE_INT_L.EE2END[0] TILE_INT_L.EE4END[0] TILE_CLBLL_L.LOGIC_OUTS[0] TILE_CLBLL_L.LOGIC_OUTS[4] TILE_CLBLL_L.LOGIC_OUTS[8] TILE_CLBLL_L.LOGIC_OUTS[12] TILE_CLBLL_L.LOGIC_OUTS[18] TILE_CLBLL_L.LOGIC_OUTS[22] TILE_INT_L.NE2END[0] TILE_INT_L.NE6END[0] TILE_INT_L.NN2END[0] TILE_INT_L.NN6END[0] TILE_INT_L.NW2END[0] TILE_INT_L.NW6END[0] TILE_INT_L.SE2END[0] TILE_INT_L.SE6END[0] TILE_INT_L.WW4END[0]" name="TILE_INT_L.NN6BEG[0]" output="TILE_INT_L.NN6BEG[0]"/>
    <mux input="TILE_INT_L.EE2END[1] TILE_INT_L.EE4END[1] TILE_CLBLL_L.LOGIC_OUTS[1] TILE_CLBLL_L.LOGIC_OUTS[5] TILE_CLBLL_L.LOGIC_OUTS[9] TILE_CLBLL_L.LOGIC_OUTS[13] TILE_CLBLL_L.LOGIC_OUTS[19] TILE_CLBLL_L.LOGIC_OUTS[23] TILE_INT_L.NE2END[1] TILE_INT_L.NE6END[1] TILE_INT_L.NN2END[1] TILE_INT_L.NN6END[1] TILE_INT_L.NW2END[1] TILE_INT_L.NW6END[1] TILE_INT_L.SE2END[1] TILE_INT_L.SE6END[1] TILE_INT_L.WW2END[0] TILE_INT_L.WW4END[1]" name="TILE_INT_L.NN6BEG[1]" output="TILE_INT_L.NN6BEG[1]"/>
    <mux input="TILE_INT_L.EE2END[2] TILE_INT_L.EE4END[2] TILE_CLBLL_L.LOGIC_OUTS[2] TILE_CLBLL_L.LOGIC_OUTS[6] TILE_CLBLL_L.LOGIC_OUTS[10] TILE_CLBLL_L.LOGIC_OUTS[14] TILE_CLBLL_L.LOGIC_OUTS[16] TILE_CLBLL_L.LOGIC_OUTS[20] TILE_INT_L.NE2END[2] TILE_INT_L.NE6END[2] TILE_INT_L.NN2END[2] TILE_INT_L.NN6END[2] TILE_INT_L.NW2END[2] TILE_INT_L.NW6END[2] TILE_INT_L.SE2END[2] TILE_INT_L.SE6END[2] TILE_INT_L.WW2END[1] TILE_INT_L.WW4END[2]" name="TILE_INT_L.NN6BEG[2]" output="TILE_INT_L.NN6BEG[2]"/>
    <mux input="TILE_INT_L.EE2END[3] TILE_INT_L.EE4END[3] TILE_CLBLL_L.LOGIC_OUTS[3] TILE_CLBLL_L.LOGIC_OUTS[7] TILE_CLBLL_L.LOGIC_OUTS[11] TILE_CLBLL_L.LOGIC_OUTS[15] TILE_CLBLL_L.LOGIC_OUTS[17] TILE_CLBLL_L.LOGIC_OUTS[21] TILE_INT_L.NE2END[3] TILE_INT_L.NE6END[3] TILE_INT_L.NN2END[3] TILE_INT_L.NN6END[3] TILE_INT_L.NW2END[3] TILE_INT_L.NW6END[3] TILE_INT_L.SE2END[3] TILE_INT_L.SE6END[3] TILE_INT_L.WW2END[2] TILE_INT_L.WW4END[3]" name="TILE_INT_L.NN6BEG[3]" output="TILE_INT_L.NN6BEG[3]"/>
    <!-- Output muxes for NR1BEG -->
    <mux input="TILE_INT_L.EE2END[0] TILE_INT_L.EE4END[0] TILE_INT_L.EL1END[0] TILE_INT_L.ER1END[0] TILE_CLBLL_L.LOGIC_OUTS[0] TILE_CLBLL_L.LOGIC_OUTS[4] TILE_CLBLL_L.LOGIC_OUTS[8] TILE_CLBLL_L.LOGIC_OUTS[12] TILE_CLBLL_L.LOGIC_OUTS[18] TILE_CLBLL_L.LOGIC_OUTS[22] TILE_INT_L.NE2END[0] TILE_INT_L.NE6END[0] TILE_INT_L.NL1END[0] TILE_INT_L.NN2END[0] TILE_INT_L.NN6END[0] TILE_INT_L.NR1END[0] TILE_INT_L.SE2END[0] TILE_INT_L.SE6END[0] TILE_INT_L.SS2END[0] TILE_INT_L.SS6END[0]" name="TILE_INT_L.NR1BEG[0]" output="TILE_INT_L.NR1BEG[0]"/>
    <mux input="TILE_INT_L.EE2END[1] TILE_INT_L.EE4END[1] TILE_INT_L.EL1END[1] TILE_INT_L.ER1END[1] TILE_CLBLL_L.LOGIC_OUTS[1] TILE_CLBLL_L.LOGIC_OUTS[5] TILE_CLBLL_L.LOGIC_OUTS[9] TILE_CLBLL_L.LOGIC_OUTS[13] TILE_CLBLL_L.LOGIC_OUTS[19] TILE_CLBLL_L.LOGIC_OUTS[23] TILE_INT_L.NE2END[1] TILE_INT_L.NE6END[1] TILE_INT_L.NL1END[1] TILE_INT_L.NN2END[1] TILE_INT_L.NN6END[1] TILE_INT_L.NR1END[1] TILE_INT_L.SE2END[1] TILE_INT_L.SE6END[1] TILE_INT_L.SS2END[1] TILE_INT_L.SS6END[1]" name="TILE_INT_L.NR1BEG[1]" output="TILE_INT_L.NR1BEG[1]"/>
    <mux input="TILE_INT_L.EE2END[2] TILE_INT_L.EE4END[2] TILE_INT_L.EL1END[2] TILE_INT_L.ER1END[2] TILE_CLBLL_L.LOGIC_OUTS[2] TILE_CLBLL_L.LOGIC_OUTS[6] TILE_CLBLL_L.LOGIC_OUTS[10] TILE_CLBLL_L.LOGIC_OUTS[14] TILE_CLBLL_L.LOGIC_OUTS[16] TILE_CLBLL_L.LOGIC_OUTS[20] TILE_INT_L.NE2END[2] TILE_INT_L.NE6END[2] TILE_INT_L.NL1END[2] TILE_INT_L.NN2END[2] TILE_INT_L.NN6END[2] TILE_INT_L.NR1END[2] TILE_INT_L.SE2END[2] TILE_INT_L.SE6END[2] TILE_INT_L.SS2END[2] TILE_INT_L.SS6END[2]" name="TILE_INT_L.NR1BEG[2]" output="TILE_INT_L.NR1BEG[2]"/>
    <mux input="TILE_INT_L.EE2END[3] TILE_INT_L.EE4END[3] TILE_INT_L.EL1END[3] TILE_INT_L.ER1END[3] TILE_CLBLL_L.LOGIC_OUTS[3] TILE_CLBLL_L.LOGIC_OUTS[7] TILE_CLBLL_L.LOGIC_OUTS[11] TILE_CLBLL_L.LOGIC_OUTS[15] TILE_CLBLL_L.LOGIC_OUTS[17] TILE_CLBLL_L.LOGIC_OUTS[21] TILE_INT_L.NE2END[3] TILE_INT_L.NE6END[3] TILE_INT_L.NN2END[3] TILE_INT_L.NN6END[3] TILE_INT_L.NR1END[3] TILE_INT_L.SE2END[3] TILE_INT_L.SE6END[3] TILE_INT_L.SS2END[3] TILE_INT_L.SS6END[3]" name="TILE_INT_L.NR1BEG[3]" output="TILE_INT_L.NR1BEG[3]"/>
    <!-- Output muxes for NW2BEG -->
    <mux input="TILE_CLBLL_L.LOGIC_OUTS[0] TILE_CLBLL_L.LOGIC_OUTS[4] TILE_CLBLL_L.LOGIC_OUTS[8] TILE_CLBLL_L.LOGIC_OUTS[12] TILE_CLBLL_L.LOGIC_OUTS[18] TILE_CLBLL_L.LOGIC_OUTS[22] TILE_INT_L.NE2END[0] TILE_INT_L.NE6END[0] TILE_INT_L.NL1END[0] TILE_INT_L.NN2END[0] TILE_INT_L.NN6END[0] TILE_INT_L.NR1END[0] TILE_INT_L.NW2END[0] TILE_INT_L.NW6END[0] TILE_INT_L.WR1END[0] TILE_INT_L.WW4END[0]" name="TILE_INT_L.NW2BEG[0]" output="TILE_INT_L.NW2BEG[0]"/>
    <mux input="TILE_CLBLL_L.LOGIC_OUTS[1] TILE_CLBLL_L.LOGIC_OUTS[5] TILE_CLBLL_L.LOGIC_OUTS[9] TILE_CLBLL_L.LOGIC_OUTS[13] TILE_CLBLL_L.LOGIC_OUTS[19] TILE_CLBLL_L.LOGIC_OUTS[23] TILE_INT_L.NE2END[1] TILE_INT_L.NE6END[1] TILE_INT_L.NL1END[1] TILE_INT_L.NN2END[1] TILE_INT_L.NN6END[1] TILE_INT_L.NR1END[1] TILE_INT_L.NW2END[1] TILE_INT_L.NW6END[1] TILE_INT_L.SW2END[0] TILE_INT_L.SW6END[0] TILE_INT_L.WL1END[0] TILE_INT_L.WR1END[1] TILE_INT_L.WW2END[0] TILE_INT_L.WW4END[1]" name="TILE_INT_L.NW2BEG[1]" output="TILE_INT_L.NW2BEG[1]"/>
    <mux input="TILE_CLBLL_L.LOGIC_OUTS[2] TILE_CLBLL_L.LOGIC_OUTS[6] TILE_CLBLL_L.LOGIC_OUTS[10] TILE_CLBLL_L.LOGIC_OUTS[14] TILE_CLBLL_L.LOGIC_OUTS[16] TILE_CLBLL_L.LOGIC_OUTS[20] TILE_INT_L.NE2END[2] TILE_INT_L.NE6END[2] TILE_INT_L.NL1END[2] TILE_INT_L.NN2END[2] TILE_INT_L.NN6END[2] TILE_INT_L.NR1END[2] TILE_INT_L.NW2END[2] TILE_INT_L.NW6END[2] TILE_INT_L.SW2END[1] TILE_INT_L.SW6END[1] TILE_INT_L.WL1END[1] TILE_INT_L.WR1END[2] TILE_INT_L.WW2END[1] TILE_INT_L.WW4END[2]" name="TILE_INT_L.NW2BEG[2]" output="TILE_INT_L.NW2BEG[2]"/>
    <mux input="TILE_CLBLL_L.LOGIC_OUTS[3] TILE_CLBLL_L.LOGIC_OUTS[7] TILE_CLBLL_L.LOGIC_OUTS[11] TILE_CLBLL_L.LOGIC_OUTS[15] TILE_CLBLL_L.LOGIC_OUTS[17] TILE_CLBLL_L.LOGIC_OUTS[21] TILE_INT_L.NE2END[3] TILE_INT_L.NE6END[3] TILE_INT_L.NN2END[3] TILE_INT_L.NN6END[3] TILE_INT_L.NR1END[3] TILE_INT_L.NW2END[3] TILE_INT_L.NW6END[3] TILE_INT_L.SW2END[2] TILE_INT_L.SW6END[2] TILE_INT_L.WL1END[2] TILE_INT_L.WR1END[3] TILE_INT_L.WW2END[2] TILE_INT_L.WW4END[3]" name="TILE_INT_L.NW2BEG[3]" output="TILE_INT_L.NW2BEG[3]"/>
    <!-- Output muxes for NW6BEG -->
    <mux input="TILE_CLBLL_L.LOGIC_OUTS[0] TILE_CLBLL_L.LOGIC_OUTS[4] TILE_CLBLL_L.LOGIC_OUTS[8] TILE_CLBLL_L.LOGIC_OUTS[12] TILE_CLBLL_L.LOGIC_OUTS[18] TILE_CLBLL_L.LOGIC_OUTS[22] TILE_INT_L.NE2END[0] TILE_INT_L.NE6END[0] TILE_INT_L.NN2END[0] TILE_INT_L.NN6END[0] TILE_INT_L.NW2END[0] TILE_INT_L.NW6END[0] TILE_INT_L.WW4END[0]" name="TILE_INT_L.NW6BEG[0]" output="TILE_INT_L.NW6BEG[0]"/>
    <mux input="TILE_CLBLL_L.LOGIC_OUTS[1] TILE_CLBLL_L.LOGIC_OUTS[5] TILE_CLBLL_L.LOGIC_OUTS[9] TILE_CLBLL_L.LOGIC_OUTS[13] TILE_CLBLL_L.LOGIC_OUTS[19] TILE_CLBLL_L.LOGIC_OUTS[23] TILE_INT_L.NE2END[1] TILE_INT_L.NE6END[1] TILE_INT_L.NN2END[1] TILE_INT_L.NN6END[1] TILE_INT_L.NW2END[1] TILE_INT_L.NW6END[1] TILE_INT_L.SS2END[0] TILE_INT_L.SS6END[0] TILE_INT_L.SW2END[0] TILE_INT_L.SW6END[0] TILE_INT_L.WW2END[0] TILE_INT_L.WW4END[1]" name="TILE_INT_L.NW6BEG[1]" output="TILE_INT_L.NW6BEG[1]"/>
    <mux input="TILE_CLBLL_L.LOGIC_OUTS[2] TILE_CLBLL_L.LOGIC_OUTS[6] TILE_CLBLL_L.LOGIC_OUTS[10] TILE_CLBLL_L.LOGIC_OUTS[14] TILE_CLBLL_L.LOGIC_OUTS[16] TILE_CLBLL_L.LOGIC_OUTS[20] TILE_INT_L.NE2END[2] TILE_INT_L.NE6END[2] TILE_INT_L.NN2END[2] TILE_INT_L.NN6END[2] TILE_INT_L.NW2END[2] TILE_INT_L.NW6END[2] TILE_INT_L.SS2END[1] TILE_INT_L.SS6END[1] TILE_INT_L.SW2END[1] TILE_INT_L.SW6END[1] TILE_INT_L.WW2END[1] TILE_INT_L.WW4END[2]" name="TILE_INT_L.NW6BEG[2]" output="TILE_INT_L.NW6BEG[2]"/>
    <mux input="TILE_CLBLL_L.LOGIC_OUTS[3] TILE_CLBLL_L.LOGIC_OUTS[7] TILE_CLBLL_L.LOGIC_OUTS[11] TILE_CLBLL_L.LOGIC_OUTS[15] TILE_CLBLL_L.LOGIC_OUTS[17] TILE_CLBLL_L.LOGIC_OUTS[21] TILE_INT_L.NE2END[3] TILE_INT_L.NE6END[3] TILE_INT_L.NN2END[3] TILE_INT_L.NN6END[3] TILE_INT_L.NW2END[3] TILE_INT_L.NW6END[3] TILE_INT_L.SS2END[2] TILE_INT_L.SS6END[2] TILE_INT_L.SW2END[2] TILE_INT_L.SW6END[2] TILE_INT_L.WW2END[2] TILE_INT_L.WW4END[3]" name="TILE_INT_L.NW6BEG[3]" output="TILE_INT_L.NW6BEG[3]"/>
    <!-- Output muxes for SE2BEG -->
    <mux input="TILE_INT_L.EE2END[0] TILE_INT_L.EE4END[0] TILE_INT_L.EL1END[0] TILE_INT_L.ER1END[0] TILE_CLBLL_L.LOGIC_OUTS[0] TILE_CLBLL_L.LOGIC_OUTS[4] TILE_CLBLL_L.LOGIC_OUTS[8] TILE_CLBLL_L.LOGIC_OUTS[12] TILE_CLBLL_L.LOGIC_OUTS[18] TILE_CLBLL_L.LOGIC_OUTS[22] TILE_INT_L.NE2END[0] TILE_INT_L.NE6END[0] TILE_INT_L.SE2END[0] TILE_INT_L.SE6END[0] TILE_INT_L.SL1END[0] TILE_INT_L.SS2END[0] TILE_INT_L.SS6END[0] TILE_INT_L.SW2END[0] TILE_INT_L.SW6END[0]" name="TILE_INT_L.SE2BEG[0]" output="TILE_INT_L.SE2BEG[0]"/>
    <mux input="TILE_INT_L.EE2END[1] TILE_INT_L.EE4END[1] TILE_INT_L.EL1END[1] TILE_INT_L.ER1END[1] TILE_CLBLL_L.LOGIC_OUTS[1] TILE_CLBLL_L.LOGIC_OUTS[5] TILE_CLBLL_L.LOGIC_OUTS[9] TILE_CLBLL_L.LOGIC_OUTS[13] TILE_CLBLL_L.LOGIC_OUTS[19] TILE_CLBLL_L.LOGIC_OUTS[23] TILE_INT_L.NE2END[1] TILE_INT_L.NE6END[1] TILE_INT_L.SE2END[1] TILE_INT_L.SE6END[1] TILE_INT_L.SL1END[1] TILE_INT_L.SR1END[1] TILE_INT_L.SS2END[1] TILE_INT_L.SS6END[1] TILE_INT_L.SW2END[1] TILE_INT_L.SW6END[1]" name="TILE_INT_L.SE2BEG[1]" output="TILE_INT_L.SE2BEG[1]"/>
    <mux input="TILE_INT_L.EE2END[2] TILE_INT_L.EE4END[2] TILE_INT_L.EL1END[2] TILE_INT_L.ER1END[2] TILE_CLBLL_L.LOGIC_OUTS[2] TILE_CLBLL_L.LOGIC_OUTS[6] TILE_CLBLL_L.LOGIC_OUTS[10] TILE_CLBLL_L.LOGIC_OUTS[14] TILE_CLBLL_L.LOGIC_OUTS[16] TILE_CLBLL_L.LOGIC_OUTS[20] TILE_INT_L.NE2END[2] TILE_INT_L.NE6END[2] TILE_INT_L.SE2END[2] TILE_INT_L.SE6END[2] TILE_INT_L.SL1END[2] TILE_INT_L.SR1END[2] TILE_INT_L.SS2END[2] TILE_INT_L.SS6END[2] TILE_INT_L.SW2END[2] TILE_INT_L.SW6END[2]" name="TILE_INT_L.SE2BEG[2]" output="TILE_INT_L.SE2BEG[2]"/>
    <mux input="TILE_INT_L.EE2END[3] TILE_INT_L.EE4END[3] TILE_INT_L.EL1END[3] TILE_INT_L.ER1END[3] TILE_CLBLL_L.LOGIC_OUTS[3] TILE_CLBLL_L.LOGIC_OUTS[7] TILE_CLBLL_L.LOGIC_OUTS[11] TILE_CLBLL_L.LOGIC_OUTS[15] TILE_CLBLL_L.LOGIC_OUTS[17] TILE_CLBLL_L.LOGIC_OUTS[21] TILE_INT_L.NE2END[3] TILE_INT_L.NE6END[3] TILE_INT_L.SE2END[3] TILE_INT_L.SE6END[3] TILE_INT_L.SL1END[3] TILE_INT_L.SR1END[3] TILE_INT_L.SS2END[3] TILE_INT_L.SS6END[3] TILE_INT_L.SW2END[3] TILE_INT_L.SW6END[3]" name="TILE_INT_L.SE2BEG[3]" output="TILE_INT_L.SE2BEG[3]"/>
    <!-- Output muxes for SE6BEG -->
    <mux input="TILE_INT_L.EE2END[0] TILE_INT_L.EE4END[0] TILE_CLBLL_L.LOGIC_OUTS[0] TILE_CLBLL_L.LOGIC_OUTS[4] TILE_CLBLL_L.LOGIC_OUTS[8] TILE_CLBLL_L.LOGIC_OUTS[12] TILE_CLBLL_L.LOGIC_OUTS[18] TILE_CLBLL_L.LOGIC_OUTS[22] TILE_INT_L.NE2END[0] TILE_INT_L.NE6END[0] TILE_INT_L.NN2END[0] TILE_INT_L.NN6END[0] TILE_INT_L.SE2END[0] TILE_INT_L.SE6END[0] TILE_INT_L.SS2END[0] TILE_INT_L.SS6END[0] TILE_INT_L.SW2END[0] TILE_INT_L.SW6END[0]" name="TILE_INT_L.SE6BEG[0]" output="TILE_INT_L.SE6BEG[0]"/>
    <mux input="TILE_INT_L.EE2END[1] TILE_INT_L.EE4END[1] TILE_CLBLL_L.LOGIC_OUTS[1] TILE_CLBLL_L.LOGIC_OUTS[5] TILE_CLBLL_L.LOGIC_OUTS[9] TILE_CLBLL_L.LOGIC_OUTS[13] TILE_CLBLL_L.LOGIC_OUTS[19] TILE_CLBLL_L.LOGIC_OUTS[23] TILE_INT_L.NE2END[1] TILE_INT_L.NE6END[1] TILE_INT_L.NN2END[1] TILE_INT_L.NN6END[1] TILE_INT_L.SE2END[1] TILE_INT_L.SE6END[1] TILE_INT_L.SS2END[1] TILE_INT_L.SS6END[1] TILE_INT_L.SW2END[1] TILE_INT_L.SW6END[1]" name="TILE_INT_L.SE6BEG[1]" output="TILE_INT_L.SE6BEG[1]"/>
    <mux input="TILE_INT_L.EE2END[2] TILE_INT_L.EE4END[2] TILE_CLBLL_L.LOGIC_OUTS[2] TILE_CLBLL_L.LOGIC_OUTS[6] TILE_CLBLL_L.LOGIC_OUTS[10] TILE_CLBLL_L.LOGIC_OUTS[14] TILE_CLBLL_L.LOGIC_OUTS[16] TILE_CLBLL_L.LOGIC_OUTS[20] TILE_INT_L.NE2END[2] TILE_INT_L.NE6END[2] TILE_INT_L.NN2END[2] TILE_INT_L.NN6END[2] TILE_INT_L.SE2END[2] TILE_INT_L.SE6END[2] TILE_INT_L.SS2END[2] TILE_INT_L.SS6END[2] TILE_INT_L.SW2END[2] TILE_INT_L.SW6END[2]" name="TILE_INT_L.SE6BEG[2]" output="TILE_INT_L.SE6BEG[2]"/>
    <mux input="TILE_INT_L.EE2END[3] TILE_INT_L.EE4END[3] TILE_CLBLL_L.LOGIC_OUTS[3] TILE_CLBLL_L.LOGIC_OUTS[7] TILE_CLBLL_L.LOGIC_OUTS[11] TILE_CLBLL_L.LOGIC_OUTS[15] TILE_CLBLL_L.LOGIC_OUTS[17] TILE_CLBLL_L.LOGIC_OUTS[21] TILE_INT_L.NE2END[3] TILE_INT_L.NE6END[3] TILE_INT_L.NN2END[3] TILE_INT_L.NN6END[3] TILE_INT_L.SE2END[3] TILE_INT_L.SE6END[3] TILE_INT_L.SS2END[3] TILE_INT_L.SS6END[3] TILE_INT_L.SW2END[3] TILE_INT_L.SW6END[3]" name="TILE_INT_L.SE6BEG[3]" output="TILE_INT_L.SE6BEG[3]"/>
    <!-- Output muxes for SL1BEG -->
    <mux input="TILE_INT_L.EE2END[0] TILE_INT_L.EE4END[0] TILE_INT_L.EL1END[0] TILE_INT_L.ER1END[0] TILE_CLBLL_L.LOGIC_OUTS[0] TILE_CLBLL_L.LOGIC_OUTS[4] TILE_CLBLL_L.LOGIC_OUTS[8] TILE_CLBLL_L.LOGIC_OUTS[12] TILE_CLBLL_L.LOGIC_OUTS[18] TILE_CLBLL_L.LOGIC_OUTS[22] TILE_INT_L.NE2END[0] TILE_INT_L.NE6END[0] TILE_INT_L.SE2END[0] TILE_INT_L.SE6END[0] TILE_INT_L.SL1END[0] TILE_INT_L.SS2END[0] TILE_INT_L.SS6END[0] TILE_INT_L.SW2END[0] TILE_INT_L.SW6END[0]" name="TILE_INT_L.SL1BEG[0]" output="TILE_INT_L.SL1BEG[0]"/>
    <mux input="TILE_INT_L.EE2END[1] TILE_INT_L.EE4END[1] TILE_INT_L.EL1END[1] TILE_INT_L.ER1END[1] TILE_CLBLL_L.LOGIC_OUTS[1] TILE_CLBLL_L.LOGIC_OUTS[5] TILE_CLBLL_L.LOGIC_OUTS[9] TILE_CLBLL_L.LOGIC_OUTS[13] TILE_CLBLL_L.LOGIC_OUTS[19] TILE_CLBLL_L.LOGIC_OUTS[23] TILE_INT_L.NE2END[1] TILE_INT_L.NE6END[1] TILE_INT_L.SE2END[1] TILE_INT_L.SE6END[1] TILE_INT_L.SL1END[1] TILE_INT_L.SR1END[1] TILE_INT_L.SS2END[1] TILE_INT_L.SS6END[1] TILE_INT_L.SW2END[1] TILE_INT_L.SW6END[1]" name="TILE_INT_L.SL1BEG[1]" output="TILE_INT_L.SL1BEG[1]"/>
    <mux input="TILE_INT_L.EE2END[2] TILE_INT_L.EE4END[2] TILE_INT_L.EL1END[2] TILE_INT_L.ER1END[2] TILE_CLBLL_L.LOGIC_OUTS[2] TILE_CLBLL_L.LOGIC_OUTS[6] TILE_CLBLL_L.LOGIC_OUTS[10] TILE_CLBLL_L.LOGIC_OUTS[14] TILE_CLBLL_L.LOGIC_OUTS[16] TILE_CLBLL_L.LOGIC_OUTS[20] TILE_INT_L.NE2END[2] TILE_INT_L.NE6END[2] TILE_INT_L.SE2END[2] TILE_INT_L.SE6END[2] TILE_INT_L.SL1END[2] TILE_INT_L.SR1END[2] TILE_INT_L.SS2END[2] TILE_INT_L.SS6END[2] TILE_INT_L.SW2END[2] TILE_INT_L.SW6END[2]" name="TILE_INT_L.SL1BEG[2]" output="TILE_INT_L.SL1BEG[2]"/>
    <mux input="TILE_INT_L.EE2END[3] TILE_INT_L.EE4END[3] TILE_INT_L.EL1END[3] TILE_INT_L.ER1END[3] TILE_CLBLL_L.LOGIC_OUTS[3] TILE_CLBLL_L.LOGIC_OUTS[7] TILE_CLBLL_L.LOGIC_OUTS[11] TILE_CLBLL_L.LOGIC_OUTS[15] TILE_CLBLL_L.LOGIC_OUTS[17] TILE_CLBLL_L.LOGIC_OUTS[21] TILE_INT_L.NE2END[3] TILE_INT_L.NE6END[3] TILE_INT_L.SE2END[3] TILE_INT_L.SE6END[3] TILE_INT_L.SL1END[3] TILE_INT_L.SR1END[3] TILE_INT_L.SS2END[3] TILE_INT_L.SS6END[3] TILE_INT_L.SW2END[3] TILE_INT_L.SW6END[3]" name="TILE_INT_L.SL1BEG[3]" output="TILE_INT_L.SL1BEG[3]"/>
    <!-- Output muxes for SR1BEG -->
    <mux input="TILE_CLBLL_L.LOGIC_OUTS[0] TILE_CLBLL_L.LOGIC_OUTS[4] TILE_CLBLL_L.LOGIC_OUTS[8] TILE_CLBLL_L.LOGIC_OUTS[12] TILE_CLBLL_L.LOGIC_OUTS[18] TILE_CLBLL_L.LOGIC_OUTS[22] TILE_INT_L.NN2END[1] TILE_INT_L.NN6END[1] TILE_INT_L.NW2END[1] TILE_INT_L.NW6END[1] TILE_INT_L.SL1END[0] TILE_INT_L.SS2END[0] TILE_INT_L.SS6END[0] TILE_INT_L.SW2END[0] TILE_INT_L.SW6END[0] TILE_INT_L.WL1END[0] TILE_INT_L.WR1END[1] TILE_INT_L.WW2END[0] TILE_INT_L.WW4END[1]" name="TILE_INT_L.SR1BEG[1]" output="TILE_INT_L.SR1BEG[1]"/>
    <mux input="TILE_CLBLL_L.LOGIC_OUTS[1] TILE_CLBLL_L.LOGIC_OUTS[5] TILE_CLBLL_L.LOGIC_OUTS[9] TILE_CLBLL_L.LOGIC_OUTS[13] TILE_CLBLL_L.LOGIC_OUTS[19] TILE_CLBLL_L.LOGIC_OUTS[23] TILE_INT_L.NN2END[2] TILE_INT_L.NN6END[2] TILE_INT_L.NW2END[2] TILE_INT_L.NW6END[2] TILE_INT_L.SL1END[1] TILE_INT_L.SR1END[1] TILE_INT_L.SS2END[1] TILE_INT_L.SS6END[1] TILE_INT_L.SW2END[1] TILE_INT_L.SW6END[1] TILE_INT_L.WL1END[1] TILE_INT_L.WR1END[2] TILE_INT_L.WW2END[1] TILE_INT_L.WW4END[2]" name="TILE_INT_L.SR1BEG[2]" output="TILE_INT_L.SR1BEG[2]"/>
    <mux input="TILE_CLBLL_L.LOGIC_OUTS[2] TILE_CLBLL_L.LOGIC_OUTS[6] TILE_CLBLL_L.LOGIC_OUTS[10] TILE_CLBLL_L.LOGIC_OUTS[14] TILE_CLBLL_L.LOGIC_OUTS[16] TILE_CLBLL_L.LOGIC_OUTS[20] TILE_INT_L.NN2END[3] TILE_INT_L.NN6END[3] TILE_INT_L.NW2END[3] TILE_INT_L.NW6END[3] TILE_INT_L.SL1END[2] TILE_INT_L.SR1END[2] TILE_INT_L.SS2END[2] TILE_INT_L.SS6END[2] TILE_INT_L.SW2END[2] TILE_INT_L.SW6END[2] TILE_INT_L.WL1END[2] TILE_INT_L.WR1END[3] TILE_INT_L.WW2END[2] TILE_INT_L.WW4END[3]" name="TILE_INT_L.SR1BEG[3]" output="TILE_INT_L.SR1BEG[3]"/>
    <!-- Output muxes for SS2BEG -->
    <mux input="TILE_INT_L.EE2END[0] TILE_INT_L.EE4END[0] TILE_INT_L.EL1END[0] TILE_INT_L.ER1END[0] TILE_CLBLL_L.LOGIC_OUTS[0] TILE_CLBLL_L.LOGIC_OUTS[4] TILE_CLBLL_L.LOGIC_OUTS[8] TILE_CLBLL_L.LOGIC_OUTS[12] TILE_CLBLL_L.LOGIC_OUTS[18] TILE_CLBLL_L.LOGIC_OUTS[22] TILE_INT_L.SE2END[0] TILE_INT_L.SE6END[0] TILE_INT_L.SL1END[0] TILE_INT_L.SS2END[0] TILE_INT_L.SS6END[0] TILE_INT_L.SW2END[0] TILE_INT_L.SW6END[0] TILE_INT_L.WW2END[0] TILE_INT_L.WW4END[1]" name="TILE_INT_L.SS2BEG[0]" output="TILE_INT_L.SS2BEG[0]"/>
    <mux input="TILE_INT_L.EE2END[1] TILE_INT_L.EE4END[1] TILE_INT_L.EL1END[1] TILE_INT_L.ER1END[1] TILE_CLBLL_L.LOGIC_OUTS[1] TILE_CLBLL_L.LOGIC_OUTS[5] TILE_CLBLL_L.LOGIC_OUTS[9] TILE_CLBLL_L.LOGIC_OUTS[13] TILE_CLBLL_L.LOGIC_OUTS[19] TILE_CLBLL_L.LOGIC_OUTS[23] TILE_INT_L.SE2END[1] TILE_INT_L.SE6END[1] TILE_INT_L.SL1END[1] TILE_INT_L.SR1END[1] TILE_INT_L.SS2END[1] TILE_INT_L.SS6END[1] TILE_INT_L.SW2END[1] TILE_INT_L.SW6END[1] TILE_INT_L.WW2END[1] TILE_INT_L.WW4END[2]" name="TILE_INT_L.SS2BEG[1]" output="TILE_INT_L.SS2BEG[1]"/>
    <mux input="TILE_INT_L.EE2END[2] TILE_INT_L.EE4END[2] TILE_INT_L.EL1END[2] TILE_INT_L.ER1END[2] TILE_CLBLL_L.LOGIC_OUTS[2] TILE_CLBLL_L.LOGIC_OUTS[6] TILE_CLBLL_L.LOGIC_OUTS[10] TILE_CLBLL_L.LOGIC_OUTS[14] TILE_CLBLL_L.LOGIC_OUTS[16] TILE_CLBLL_L.LOGIC_OUTS[20] TILE_INT_L.SE2END[2] TILE_INT_L.SE6END[2] TILE_INT_L.SL1END[2] TILE_INT_L.SR1END[2] TILE_INT_L.SS2END[2] TILE_INT_L.SS6END[2] TILE_INT_L.SW2END[2] TILE_INT_L.SW6END[2] TILE_INT_L.WW2END[2] TILE_INT_L.WW4END[3]" name="TILE_INT_L.SS2BEG[2]" output="TILE_INT_L.SS2BEG[2]"/>
    <mux input="TILE_INT_L.EE2END[3] TILE_INT_L.EE4END[3] TILE_INT_L.EL1END[3] TILE_INT_L.ER1END[3] TILE_CLBLL_L.LOGIC_OUTS[3] TILE_CLBLL_L.LOGIC_OUTS[7] TILE_CLBLL_L.LOGIC_OUTS[11] TILE_CLBLL_L.LOGIC_OUTS[15] TILE_CLBLL_L.LOGIC_OUTS[17] TILE_CLBLL_L.LOGIC_OUTS[21] TILE_INT_L.SE2END[3] TILE_INT_L.SE6END[3] TILE_INT_L.SL1END[3] TILE_INT_L.SR1END[3] TILE_INT_L.SS2END[3] TILE_INT_L.SS6END[3] TILE_INT_L.SW2END[3] TILE_INT_L.SW6END[3] TILE_INT_L.WW2END[3]" name="TILE_INT_L.SS2BEG[3]" output="TILE_INT_L.SS2BEG[3]"/>
    <!-- Output muxes for SS6BEG -->
    <mux input="TILE_INT_L.EE2END[0] TILE_INT_L.EE4END[0] TILE_CLBLL_L.LOGIC_OUTS[0] TILE_CLBLL_L.LOGIC_OUTS[4] TILE_CLBLL_L.LOGIC_OUTS[8] TILE_CLBLL_L.LOGIC_OUTS[12] TILE_CLBLL_L.LOGIC_OUTS[18] TILE_CLBLL_L.LOGIC_OUTS[22] TILE_INT_L.NW2END[1] TILE_INT_L.NW6END[1] TILE_INT_L.SE2END[0] TILE_INT_L.SE6END[0] TILE_INT_L.SS2END[0] TILE_INT_L.SS6END[0] TILE_INT_L.SW2END[0] TILE_INT_L.SW6END[0] TILE_INT_L.WW2END[0] TILE_INT_L.WW4END[1]" name="TILE_INT_L.SS6BEG[0]" output="TILE_INT_L.SS6BEG[0]"/>
    <mux input="TILE_INT_L.EE2END[1] TILE_INT_L.EE4END[1] TILE_CLBLL_L.LOGIC_OUTS[1] TILE_CLBLL_L.LOGIC_OUTS[5] TILE_CLBLL_L.LOGIC_OUTS[9] TILE_CLBLL_L.LOGIC_OUTS[13] TILE_CLBLL_L.LOGIC_OUTS[19] TILE_CLBLL_L.LOGIC_OUTS[23] TILE_INT_L.NW2END[2] TILE_INT_L.NW6END[2] TILE_INT_L.SE2END[1] TILE_INT_L.SE6END[1] TILE_INT_L.SS2END[1] TILE_INT_L.SS6END[1] TILE_INT_L.SW2END[1] TILE_INT_L.SW6END[1] TILE_INT_L.WW2END[1] TILE_INT_L.WW4END[2]" name="TILE_INT_L.SS6BEG[1]" output="TILE_INT_L.SS6BEG[1]"/>
    <mux input="TILE_INT_L.EE2END[2] TILE_INT_L.EE4END[2] TILE_CLBLL_L.LOGIC_OUTS[2] TILE_CLBLL_L.LOGIC_OUTS[6] TILE_CLBLL_L.LOGIC_OUTS[10] TILE_CLBLL_L.LOGIC_OUTS[14] TILE_CLBLL_L.LOGIC_OUTS[16] TILE_CLBLL_L.LOGIC_OUTS[20] TILE_INT_L.NW2END[3] TILE_INT_L.NW6END[3] TILE_INT_L.SE2END[2] TILE_INT_L.SE6END[2] TILE_INT_L.SS2END[2] TILE_INT_L.SS6END[2] TILE_INT_L.SW2END[2] TILE_INT_L.SW6END[2] TILE_INT_L.WW2END[2] TILE_INT_L.WW4END[3]" name="TILE_INT_L.SS6BEG[2]" output="TILE_INT_L.SS6BEG[2]"/>
    <mux input="TILE_INT_L.EE2END[3] TILE_INT_L.EE4END[3] TILE_CLBLL_L.LOGIC_OUTS[3] TILE_CLBLL_L.LOGIC_OUTS[7] TILE_CLBLL_L.LOGIC_OUTS[11] TILE_CLBLL_L.LOGIC_OUTS[15] TILE_CLBLL_L.LOGIC_OUTS[17] TILE_CLBLL_L.LOGIC_OUTS[21] TILE_INT_L.SE2END[3] TILE_INT_L.SE6END[3] TILE_INT_L.SS2END[3] TILE_INT_L.SS6END[3] TILE_INT_L.SW2END[3] TILE_INT_L.SW6END[3] TILE_INT_L.WW2END[3]" name="TILE_INT_L.SS6BEG[3]" output="TILE_INT_L.SS6BEG[3]"/>
    <!-- Output muxes for SW2BEG -->
    <mux input="TILE_CLBLL_L.LOGIC_OUTS[0] TILE_CLBLL_L.LOGIC_OUTS[4] TILE_CLBLL_L.LOGIC_OUTS[8] TILE_CLBLL_L.LOGIC_OUTS[12] TILE_CLBLL_L.LOGIC_OUTS[18] TILE_CLBLL_L.LOGIC_OUTS[22] TILE_INT_L.NW2END[1] TILE_INT_L.NW6END[1] TILE_INT_L.SE2END[0] TILE_INT_L.SE6END[0] TILE_INT_L.SL1END[0] TILE_INT_L.SS2END[0] TILE_INT_L.SS6END[0] TILE_INT_L.SW2END[0] TILE_INT_L.SW6END[0] TILE_INT_L.WL1END[0] TILE_INT_L.WR1END[1] TILE_INT_L.WW2END[0] TILE_INT_L.WW4END[1]" name="TILE_INT_L.SW2BEG[0]" output="TILE_INT_L.SW2BEG[0]"/>
    <mux input="TILE_CLBLL_L.LOGIC_OUTS[1] TILE_CLBLL_L.LOGIC_OUTS[5] TILE_CLBLL_L.LOGIC_OUTS[9] TILE_CLBLL_L.LOGIC_OUTS[13] TILE_CLBLL_L.LOGIC_OUTS[19] TILE_CLBLL_L.LOGIC_OUTS[23] TILE_INT_L.NW2END[2] TILE_INT_L.NW6END[2] TILE_INT_L.SE2END[1] TILE_INT_L.SE6END[1] TILE_INT_L.SL1END[1] TILE_INT_L.SR1END[1] TILE_INT_L.SS2END[1] TILE_INT_L.SS6END[1] TILE_INT_L.SW2END[1] TILE_INT_L.SW6END[1] TILE_INT_L.WL1END[1] TILE_INT_L.WR1END[2] TILE_INT_L.WW2END[1] TILE_INT_L.WW4END[2]" name="TILE_INT_L.SW2BEG[1]" output="TILE_INT_L.SW2BEG[1]"/>
    <mux input="TILE_CLBLL_L.LOGIC_OUTS[2] TILE_CLBLL_L.LOGIC_OUTS[6] TILE_CLBLL_L.LOGIC_OUTS[10] TILE_CLBLL_L.LOGIC_OUTS[14] TILE_CLBLL_L.LOGIC_OUTS[16] TILE_CLBLL_L.LOGIC_OUTS[20] TILE_INT_L.NW2END[3] TILE_INT_L.NW6END[3] TILE_INT_L.SE2END[2] TILE_INT_L.SE6END[2] TILE_INT_L.SL1END[2] TILE_INT_L.SR1END[2] TILE_INT_L.SS2END[2] TILE_INT_L.SS6END[2] TILE_INT_L.SW2END[2] TILE_INT_L.SW6END[2] TILE_INT_L.WL1END[2] TILE_INT_L.WR1END[3] TILE_INT_L.WW2END[2] TILE_INT_L.WW4END[3]" name="TILE_INT_L.SW2BEG[2]" output="TILE_INT_L.SW2BEG[2]"/>
    <mux input="TILE_CLBLL_L.LOGIC_OUTS[3] TILE_CLBLL_L.LOGIC_OUTS[7] TILE_CLBLL_L.LOGIC_OUTS[11] TILE_CLBLL_L.LOGIC_OUTS[15] TILE_CLBLL_L.LOGIC_OUTS[17] TILE_CLBLL_L.LOGIC_OUTS[21] TILE_INT_L.SE2END[3] TILE_INT_L.SE6END[3] TILE_INT_L.SL1END[3] TILE_INT_L.SR1END[3] TILE_INT_L.SS2END[3] TILE_INT_L.SS6END[3] TILE_INT_L.SW2END[3] TILE_INT_L.SW6END[3] TILE_INT_L.WL1END[3] TILE_INT_L.WW2END[3]" name="TILE_INT_L.SW2BEG[3]" output="TILE_INT_L.SW2BEG[3]"/>
    <!-- Output muxes for SW6BEG -->
    <mux input="TILE_INT_L.EE2END[0] TILE_INT_L.EE4END[0] TILE_CLBLL_L.LOGIC_OUTS[0] TILE_CLBLL_L.LOGIC_OUTS[4] TILE_CLBLL_L.LOGIC_OUTS[8] TILE_CLBLL_L.LOGIC_OUTS[12] TILE_CLBLL_L.LOGIC_OUTS[18] TILE_CLBLL_L.LOGIC_OUTS[22] TILE_INT_L.NW2END[1] TILE_INT_L.NW6END[1] TILE_INT_L.SE2END[0] TILE_INT_L.SE6END[0] TILE_INT_L.SS2END[0] TILE_INT_L.SS6END[0] TILE_INT_L.SW2END[0] TILE_INT_L.SW6END[0] TILE_INT_L.WW2END[0] TILE_INT_L.WW4END[1]" name="TILE_INT_L.SW6BEG[0]" output="TILE_INT_L.SW6BEG[0]"/>
    <mux input="TILE_INT_L.EE2END[1] TILE_INT_L.EE4END[1] TILE_CLBLL_L.LOGIC_OUTS[1] TILE_CLBLL_L.LOGIC_OUTS[5] TILE_CLBLL_L.LOGIC_OUTS[9] TILE_CLBLL_L.LOGIC_OUTS[13] TILE_CLBLL_L.LOGIC_OUTS[19] TILE_CLBLL_L.LOGIC_OUTS[23] TILE_INT_L.NW2END[2] TILE_INT_L.NW6END[2] TILE_INT_L.SE2END[1] TILE_INT_L.SE6END[1] TILE_INT_L.SS2END[1] TILE_INT_L.SS6END[1] TILE_INT_L.SW2END[1] TILE_INT_L.SW6END[1] TILE_INT_L.WW2END[1] TILE_INT_L.WW4END[2]" name="TILE_INT_L.SW6BEG[1]" output="TILE_INT_L.SW6BEG[1]"/>
    <mux input="TILE_INT_L.EE2END[2] TILE_INT_L.EE4END[2] TILE_CLBLL_L.LOGIC_OUTS[2] TILE_CLBLL_L.LOGIC_OUTS[6] TILE_CLBLL_L.LOGIC_OUTS[10] TILE_CLBLL_L.LOGIC_OUTS[14] TILE_CLBLL_L.LOGIC_OUTS[16] TILE_CLBLL_L.LOGIC_OUTS[20] TILE_INT_L.NW2END[3] TILE_INT_L.NW6END[3] TILE_INT_L.SE2END[2] TILE_INT_L.SE6END[2] TILE_INT_L.SS2END[2] TILE_INT_L.SS6END[2] TILE_INT_L.SW2END[2] TILE_INT_L.SW6END[2] TILE_INT_L.WW2END[2] TILE_INT_L.WW4END[3]" name="TILE_INT_L.SW6BEG[2]" output="TILE_INT_L.SW6BEG[2]"/>
    <mux input="TILE_INT_L.EE2END[3] TILE_INT_L.EE4END[3] TILE_CLBLL_L.LOGIC_OUTS[3] TILE_CLBLL_L.LOGIC_OUTS[7] TILE_CLBLL_L.LOGIC_OUTS[11] TILE_CLBLL_L.LOGIC_OUTS[15] TILE_CLBLL_L.LOGIC_OUTS[17] TILE_CLBLL_L.LOGIC_OUTS[21] TILE_INT_L.SE2END[3] TILE_INT_L.SE6END[3] TILE_INT_L.SS2END[3] TILE_INT_L.SS6END[3] TILE_INT_L.SW2END[3] TILE_INT_L.SW6END[3] TILE_INT_L.WW2END[3]" name="TILE_INT_L.SW6BEG[3]" output="TILE_INT_L.SW6BEG[3]"/>
    <!-- Output muxes for WL1BEG -->
    <mux input="TILE_CLBLL_L.LOGIC_OUTS[1] TILE_CLBLL_L.LOGIC_OUTS[5] TILE_CLBLL_L.LOGIC_OUTS[9] TILE_CLBLL_L.LOGIC_OUTS[13] TILE_CLBLL_L.LOGIC_OUTS[19] TILE_CLBLL_L.LOGIC_OUTS[23] TILE_INT_L.NW2END[2] TILE_INT_L.NW6END[2] TILE_INT_L.SE2END[1] TILE_INT_L.SE6END[1] TILE_INT_L.SL1END[1] TILE_INT_L.SR1END[1] TILE_INT_L.SS2END[1] TILE_INT_L.SS6END[1] TILE_INT_L.SW2END[1] TILE_INT_L.SW6END[1] TILE_INT_L.WL1END[1] TILE_INT_L.WR1END[2] TILE_INT_L.WW2END[1] TILE_INT_L.WW4END[2]" name="TILE_INT_L.WL1BEG[0]" output="TILE_INT_L.WL1BEG[0]"/>
    <mux input="TILE_CLBLL_L.LOGIC_OUTS[2] TILE_CLBLL_L.LOGIC_OUTS[6] TILE_CLBLL_L.LOGIC_OUTS[10] TILE_CLBLL_L.LOGIC_OUTS[14] TILE_CLBLL_L.LOGIC_OUTS[16] TILE_CLBLL_L.LOGIC_OUTS[20] TILE_INT_L.NW2END[3] TILE_INT_L.NW6END[3] TILE_INT_L.SE2END[2] TILE_INT_L.SE6END[2] TILE_INT_L.SL1END[2] TILE_INT_L.SR1END[2] TILE_INT_L.SS2END[2] TILE_INT_L.SS6END[2] TILE_INT_L.SW2END[2] TILE_INT_L.SW6END[2] TILE_INT_L.WL1END[2] TILE_INT_L.WR1END[3] TILE_INT_L.WW2END[2] TILE_INT_L.WW4END[3]" name="TILE_INT_L.WL1BEG[1]" output="TILE_INT_L.WL1BEG[1]"/>
    <mux input="TILE_CLBLL_L.LOGIC_OUTS[3] TILE_CLBLL_L.LOGIC_OUTS[7] TILE_CLBLL_L.LOGIC_OUTS[11] TILE_CLBLL_L.LOGIC_OUTS[15] TILE_CLBLL_L.LOGIC_OUTS[17] TILE_CLBLL_L.LOGIC_OUTS[21] TILE_INT_L.SE2END[3] TILE_INT_L.SE6END[3] TILE_INT_L.SL1END[3] TILE_INT_L.SR1END[3] TILE_INT_L.SS2END[3] TILE_INT_L.SS6END[3] TILE_INT_L.SW2END[3] TILE_INT_L.SW6END[3] TILE_INT_L.WL1END[3] TILE_INT_L.WW2END[3]" name="TILE_INT_L.WL1BEG[2]" output="TILE_INT_L.WL1BEG[2]"/>
    <!-- Output muxes for WR1BEG -->
    <mux input="TILE_INT_L.EE2END[0] TILE_INT_L.EE4END[0] TILE_CLBLL_L.LOGIC_OUTS[0] TILE_CLBLL_L.LOGIC_OUTS[4] TILE_CLBLL_L.LOGIC_OUTS[8] TILE_CLBLL_L.LOGIC_OUTS[12] TILE_CLBLL_L.LOGIC_OUTS[18] TILE_CLBLL_L.LOGIC_OUTS[22] TILE_INT_L.NE2END[0] TILE_INT_L.NE6END[0] TILE_INT_L.NL1END[0] TILE_INT_L.NN2END[0] TILE_INT_L.NN6END[0] TILE_INT_L.NR1END[0] TILE_INT_L.NW2END[0] TILE_INT_L.NW6END[0] TILE_INT_L.WR1END[0] TILE_INT_L.WW4END[0]" name="TILE_INT_L.WR1BEG[1]" output="TILE_INT_L.WR1BEG[1]"/>
    <mux input="TILE_INT_L.EE2END[1] TILE_INT_L.EE4END[1] TILE_CLBLL_L.LOGIC_OUTS[1] TILE_CLBLL_L.LOGIC_OUTS[5] TILE_CLBLL_L.LOGIC_OUTS[9] TILE_CLBLL_L.LOGIC_OUTS[13] TILE_CLBLL_L.LOGIC_OUTS[19] TILE_CLBLL_L.LOGIC_OUTS[23] TILE_INT_L.NE2END[1] TILE_INT_L.NE6END[1] TILE_INT_L.NL1END[1] TILE_INT_L.NN2END[1] TILE_INT_L.NN6END[1] TILE_INT_L.NR1END[1] TILE_INT_L.NW2END[1] TILE_INT_L.NW6END[1] TILE_INT_L.WL1END[0] TILE_INT_L.WR1END[1] TILE_INT_L.WW2END[0] TILE_INT_L.WW4END[1]" name="TILE_INT_L.WR1BEG[2]" output="TILE_INT_L.WR1BEG[2]"/>
    <mux input="TILE_INT_L.EE2END[2] TILE_INT_L.EE4END[2] TILE_CLBLL_L.LOGIC_OUTS[2] TILE_CLBLL_L.LOGIC_OUTS[6] TILE_CLBLL_L.LOGIC_OUTS[10] TILE_CLBLL_L.LOGIC_OUTS[14] TILE_CLBLL_L.LOGIC_OUTS[16] TILE_CLBLL_L.LOGIC_OUTS[20] TILE_INT_L.NE2END[2] TILE_INT_L.NE6END[2] TILE_INT_L.NL1END[2] TILE_INT_L.NN2END[2] TILE_INT_L.NN6END[2] TILE_INT_L.NR1END[2] TILE_INT_L.NW2END[2] TILE_INT_L.NW6END[2] TILE_INT_L.WL1END[1] TILE_INT_L.WR1END[2] TILE_INT_L.WW2END[1] TILE_INT_L.WW4END[2]" name="TILE_INT_L.WR1BEG[3]" output="TILE_INT_L.WR1BEG[3]"/>
    <!-- Output muxes for WW2BEG -->
    <mux input="TILE_CLBLL_L.LOGIC_OUTS[0] TILE_CLBLL_L.LOGIC_OUTS[4] TILE_CLBLL_L.LOGIC_OUTS[8] TILE_CLBLL_L.LOGIC_OUTS[12] TILE_CLBLL_L.LOGIC_OUTS[18] TILE_CLBLL_L.LOGIC_OUTS[22] TILE_INT_L.NN2END[1] TILE_INT_L.NN6END[1] TILE_INT_L.NW2END[1] TILE_INT_L.NW6END[1] TILE_INT_L.SL1END[0] TILE_INT_L.SS2END[0] TILE_INT_L.SS6END[0] TILE_INT_L.SW2END[0] TILE_INT_L.SW6END[0] TILE_INT_L.WL1END[0] TILE_INT_L.WR1END[1] TILE_INT_L.WW2END[0] TILE_INT_L.WW4END[1]" name="TILE_INT_L.WW2BEG[0]" output="TILE_INT_L.WW2BEG[0]"/>
    <mux input="TILE_CLBLL_L.LOGIC_OUTS[1] TILE_CLBLL_L.LOGIC_OUTS[5] TILE_CLBLL_L.LOGIC_OUTS[9] TILE_CLBLL_L.LOGIC_OUTS[13] TILE_CLBLL_L.LOGIC_OUTS[19] TILE_CLBLL_L.LOGIC_OUTS[23] TILE_INT_L.NN2END[2] TILE_INT_L.NN6END[2] TILE_INT_L.NW2END[2] TILE_INT_L.NW6END[2] TILE_INT_L.SL1END[1] TILE_INT_L.SR1END[1] TILE_INT_L.SS2END[1] TILE_INT_L.SS6END[1] TILE_INT_L.SW2END[1] TILE_INT_L.SW6END[1] TILE_INT_L.WL1END[1] TILE_INT_L.WR1END[2] TILE_INT_L.WW2END[1] TILE_INT_L.WW4END[2]" name="TILE_INT_L.WW2BEG[1]" output="TILE_INT_L.WW2BEG[1]"/>
    <mux input="TILE_CLBLL_L.LOGIC_OUTS[2] TILE_CLBLL_L.LOGIC_OUTS[6] TILE_CLBLL_L.LOGIC_OUTS[10] TILE_CLBLL_L.LOGIC_OUTS[14] TILE_CLBLL_L.LOGIC_OUTS[16] TILE_CLBLL_L.LOGIC_OUTS[20] TILE_INT_L.NN2END[3] TILE_INT_L.NN6END[3] TILE_INT_L.NW2END[3] TILE_INT_L.NW6END[3] TILE_INT_L.SL1END[2] TILE_INT_L.SR1END[2] TILE_INT_L.SS2END[2] TILE_INT_L.SS6END[2] TILE_INT_L.SW2END[2] TILE_INT_L.SW6END[2] TILE_INT_L.WL1END[2] TILE_INT_L.WR1END[3] TILE_INT_L.WW2END[2] TILE_INT_L.WW4END[3]" name="TILE_INT_L.WW2BEG[2]" output="TILE_INT_L.WW2BEG[2]"/>
    <mux input="TILE_CLBLL_L.LOGIC_OUTS[3] TILE_CLBLL_L.LOGIC_OUTS[7] TILE_CLBLL_L.LOGIC_OUTS[11] TILE_CLBLL_L.LOGIC_OUTS[15] TILE_CLBLL_L.LOGIC_OUTS[17] TILE_CLBLL_L.LOGIC_OUTS[21] TILE_INT_L.SL1END[3] TILE_INT_L.SR1END[3] TILE_INT_L.SS2END[3] TILE_INT_L.SS6END[3] TILE_INT_L.SW2END[3] TILE_INT_L.SW6END[3] TILE_INT_L.WL1END[3] TILE_INT_L.WW2END[3]" name="TILE_INT_L.WW2BEG[3]" output="TILE_INT_L.WW2BEG[3]"/>
    <!-- Output muxes for WW4BEG -->
    <mux input="TILE_CLBLL_L.LOGIC_OUTS[0] TILE_CLBLL_L.LOGIC_OUTS[4] TILE_CLBLL_L.LOGIC_OUTS[8] TILE_CLBLL_L.LOGIC_OUTS[12] TILE_CLBLL_L.LOGIC_OUTS[18] TILE_CLBLL_L.LOGIC_OUTS[22] TILE_INT_L.NE2END[0] TILE_INT_L.NE6END[0] TILE_INT_L.NN2END[0] TILE_INT_L.NN6END[0] TILE_INT_L.NW2END[0] TILE_INT_L.NW6END[0] TILE_INT_L.WW4END[0]" name="TILE_INT_L.WW4BEG[0]" output="TILE_INT_L.WW4BEG[0]"/>
    <mux input="TILE_CLBLL_L.LOGIC_OUTS[1] TILE_CLBLL_L.LOGIC_OUTS[5] TILE_CLBLL_L.LOGIC_OUTS[9] TILE_CLBLL_L.LOGIC_OUTS[13] TILE_CLBLL_L.LOGIC_OUTS[19] TILE_CLBLL_L.LOGIC_OUTS[23] TILE_INT_L.NE2END[1] TILE_INT_L.NE6END[1] TILE_INT_L.NN2END[1] TILE_INT_L.NN6END[1] TILE_INT_L.NW2END[1] TILE_INT_L.NW6END[1] TILE_INT_L.SS2END[0] TILE_INT_L.SS6END[0] TILE_INT_L.SW2END[0] TILE_INT_L.SW6END[0] TILE_INT_L.WW2END[0] TILE_INT_L.WW4END[1]" name="TILE_INT_L.WW4BEG[1]" output="TILE_INT_L.WW4BEG[1]"/>
    <mux input="TILE_CLBLL_L.LOGIC_OUTS[2] TILE_CLBLL_L.LOGIC_OUTS[6] TILE_CLBLL_L.LOGIC_OUTS[10] TILE_CLBLL_L.LOGIC_OUTS[14] TILE_CLBLL_L.LOGIC_OUTS[16] TILE_CLBLL_L.LOGIC_OUTS[20] TILE_INT_L.NE2END[2] TILE_INT_L.NE6END[2] TILE_INT_L.NN2END[2] TILE_INT_L.NN6END[2] TILE_INT_L.NW2END[2] TILE_INT_L.NW6END[2] TILE_INT_L.SS2END[1] TILE_INT_L.SS6END[1] TILE_INT_L.SW2END[1] TILE_INT_L.SW6END[1] TILE_INT_L.WW2END[1] TILE_INT_L.WW4END[2]" name="TILE_INT_L.WW4BEG[2]" output="TILE_INT_L.WW4BEG[2]"/>
    <mux input="TILE_CLBLL_L.LOGIC_OUTS[3] TILE_CLBLL_L.LOGIC_OUTS[7] TILE_CLBLL_L.LOGIC_OUTS[11] TILE_CLBLL_L.LOGIC_OUTS[15] TILE_CLBLL_L.LOGIC_OUTS[17] TILE_CLBLL_L.LOGIC_OUTS[21] TILE_INT_L.NE2END[3] TILE_INT_L.NE6END[3] TILE_INT_L.NN2END[3] TILE_INT_L.NN6END[3] TILE_INT_L.NW2END[3] TILE_INT_L.NW6END[3] TILE_INT_L.SS2END[2] TILE_INT_L.SS6END[2] TILE_INT_L.SW2END[2] TILE_INT_L.SW6END[2] TILE_INT_L.WW2END[2] TILE_INT_L.WW4END[3]" name="TILE_INT_L.WW4BEG[3]" output="TILE_INT_L.WW4BEG[3]"/>
    <!-- Output muxes for BYP_L -->
    <mux input="TILE_INT_L.EE2END[0] TILE_INT_L.EL1END[0] TILE_INT_L.ER1END[0] TILE_INT_L.GFAN[0] TILE_CLBLL_L.LOGIC_OUTS[0] TILE_CLBLL_L.LOGIC_OUTS[12] TILE_CLBLL_L.LOGIC_OUTS[22] TILE_INT_L.NE2END[0] TILE_INT_L.NL1END[0] TILE_INT_L.NN2END[0] TILE_INT_L.NR1END[0] TILE_INT_L.NW2END[0] TILE_INT_L.SE2END[0] TILE_INT_L.SL1END[0] TILE_INT_L.SS2END[0] TILE_INT_L.SW2END[0] TILE_INT_L.WL1END[0] TILE_INT_L.WR1END[0]" name="TILE_INT_L.BYP_L[0]" output="TILE_CLBLL_L.BYP[0]"/>
    <mux input="TILE_INT_L.EE2END[0] TILE_INT_L.EL1END[1] TILE_INT_L.ER1END[0] TILE_INT_L.GFAN[0] TILE_CLBLL_L.LOGIC_OUTS[4] TILE_CLBLL_L.LOGIC_OUTS[8] TILE_CLBLL_L.LOGIC_OUTS[18] TILE_INT_L.NE2END[1] TILE_INT_L.NL1END[1] TILE_INT_L.NN2END[1] TILE_INT_L.NR1END[0] TILE_INT_L.NW2END[1] TILE_INT_L.SE2END[0] TILE_INT_L.SL1END[0] TILE_INT_L.SS2END[0] TILE_INT_L.SW2END[0] TILE_INT_L.WL1END[0] TILE_INT_L.WR1END[1] TILE_INT_L.WW2END[0]" name="TILE_INT_L.BYP_L[1]" output="TILE_CLBLL_L.BYP[1]"/>
    <mux input="TILE_INT_L.EE2END[1] TILE_INT_L.EL1END[1] TILE_INT_L.ER1END[1] TILE_INT_L.GFAN[0] TILE_CLBLL_L.LOGIC_OUTS[5] TILE_CLBLL_L.LOGIC_OUTS[9] TILE_CLBLL_L.LOGIC_OUTS[19] TILE_INT_L.NE2END[1] TILE_INT_L.NL1END[1] TILE_INT_L.NN2END[1] TILE_INT_L.NR1END[1] TILE_INT_L.NW2END[1] TILE_INT_L.SE2END[1] TILE_INT_L.SL1END[1] TILE_INT_L.SS2END[1] TILE_INT_L.SW2END[1] TILE_INT_L.WL1END[1] TILE_INT_L.WR1END[1] TILE_INT_L.WW2END[0]" name="TILE_INT_L.BYP_L[4]" output="TILE_CLBLL_L.BYP[4]"/>
    <mux input="TILE_INT_L.EE2END[1] TILE_INT_L.EL1END[2] TILE_INT_L.ER1END[1] TILE_INT_L.GFAN[0] TILE_CLBLL_L.LOGIC_OUTS[1] TILE_CLBLL_L.LOGIC_OUTS[13] TILE_CLBLL_L.LOGIC_OUTS[23] TILE_INT_L.NE2END[2] TILE_INT_L.NL1END[2] TILE_INT_L.NN2END[2] TILE_INT_L.NR1END[1] TILE_INT_L.NW2END[2] TILE_INT_L.SE2END[1] TILE_INT_L.SL1END[1] TILE_INT_L.SR1END[1] TILE_INT_L.SS2END[1] TILE_INT_L.SW2END[1] TILE_INT_L.WL1END[1] TILE_INT_L.WR1END[2] TILE_INT_L.WW2END[1]" name="TILE_INT_L.BYP_L[5]" output="TILE_CLBLL_L.BYP[5]"/>
    <mux input="TILE_INT_L.EE2END[2] TILE_INT_L.EL1END[2] TILE_INT_L.ER1END[2] TILE_INT_L.GFAN[1] TILE_CLBLL_L.LOGIC_OUTS[2] TILE_CLBLL_L.LOGIC_OUTS[14] TILE_CLBLL_L.LOGIC_OUTS[20] TILE_INT_L.NE2END[2] TILE_INT_L.NL1END[2] TILE_INT_L.NN2END[2] TILE_INT_L.NR1END[2] TILE_INT_L.NW2END[2] TILE_INT_L.SE2END[2] TILE_INT_L.SL1END[2] TILE_INT_L.SR1END[1] TILE_INT_L.SS2END[2] TILE_INT_L.SW2END[2] TILE_INT_L.WL1END[2] TILE_INT_L.WR1END[2] TILE_INT_L.WW2END[1]" name="TILE_INT_L.BYP_L[2]" output="TILE_CLBLL_L.BYP[2]"/>
    <mux input="TILE_INT_L.EE2END[2] TILE_INT_L.EL1END[3] TILE_INT_L.ER1END[2] TILE_INT_L.GFAN[1] TILE_CLBLL_L.LOGIC_OUTS[6] TILE_CLBLL_L.LOGIC_OUTS[10] TILE_CLBLL_L.LOGIC_OUTS[16] TILE_INT_L.NE2END[3] TILE_INT_L.NN2END[3] TILE_INT_L.NR1END[2] TILE_INT_L.NW2END[3] TILE_INT_L.SE2END[2] TILE_INT_L.SL1END[2] TILE_INT_L.SR1END[2] TILE_INT_L.SS2END[2] TILE_INT_L.SW2END[2] TILE_INT_L.WL1END[2] TILE_INT_L.WR1END[3] TILE_INT_L.WW2END[2]" name="TILE_INT_L.BYP_L[3]" output="TILE_CLBLL_L.BYP[3]"/>
    <mux input="TILE_INT_L.EE2END[3] TILE_INT_L.EL1END[3] TILE_INT_L.ER1END[3] TILE_INT_L.GFAN[1] TILE_CLBLL_L.LOGIC_OUTS[7] TILE_CLBLL_L.LOGIC_OUTS[11] TILE_CLBLL_L.LOGIC_OUTS[17] TILE_INT_L.NE2END[3] TILE_INT_L.NN2END[3] TILE_INT_L.NR1END[3] TILE_INT_L.NW2END[3] TILE_INT_L.SE2END[3] TILE_INT_L.SL1END[3] TILE_INT_L.SR1END[2] TILE_INT_L.SS2END[3] TILE_INT_L.SW2END[3] TILE_INT_L.WL1END[3] TILE_INT_L.WR1END[3] TILE_INT_L.WW2END[2]" name="TILE_INT_L.BYP_L[6]" output="TILE_CLBLL_L.BYP[6]"/>
    <mux input="TILE_INT_L.EE2END[3] TILE_INT_L.ER1END[3] TILE_INT_L.GFAN[1] TILE_CLBLL_L.LOGIC_OUTS[3] TILE_CLBLL_L.LOGIC_OUTS[15] TILE_CLBLL_L.LOGIC_OUTS[21] TILE_INT_L.NR1END[3] TILE_INT_L.SE2END[3] TILE_INT_L.SL1END[3] TILE_INT_L.SR1END[3] TILE_INT_L.SS2END[3] TILE_INT_L.SW2END[3] TILE_INT_L.WL1END[3] TILE_INT_L.WW2END[3]" name="TILE_INT_L.BYP_L[7]" output="TILE_CLBLL_L.BYP[7]"/>
    <!-- Output muxes for CLK_L -->
    <mux input="TILE_INT_L.ER1END[1] TILE_INT_L.GCLK_L_B[0] TILE_INT_L.GCLK_L_B[1] TILE_INT_L.GCLK_L_B[2] TILE_INT_L.GCLK_L_B[3] TILE_INT_L.GCLK_L_B[4] TILE_INT_L.GCLK_L_B[5] TILE_INT_L.SR1END[1] TILE_INT_L.WR1END[1]" name="TILE_INT_L.CLK_L[0]" output="TILE_CLBLL_L.CLK[0]"/>
    <mux input="TILE_INT_L.ER1END[1] TILE_INT_L.GCLK_L_B[0] TILE_INT_L.GCLK_L_B[1] TILE_INT_L.GCLK_L_B[2] TILE_INT_L.GCLK_L_B[3] TILE_INT_L.GCLK_L_B[4] TILE_INT_L.GCLK_L_B[5] TILE_INT_L.SR1END[1] TILE_INT_L.WR1END[1]" name="TILE_INT_L.CLK_L[1]" output="TILE_CLBLL_L.CLK[1]"/>
    <!-- Output muxes for CTRL_L -->
    <mux input="TILE_INT_L.EE4END[2] TILE_INT_L.ER1END[2] TILE_INT_L.GFAN[0] TILE_INT_L.GFAN[1] TILE_INT_L.NE6END[2] TILE_INT_L.NN6END[2] TILE_INT_L.NR1END[2] TILE_INT_L.NW6END[2] TILE_INT_L.SE6END[2] TILE_INT_L.SR1END[2] TILE_INT_L.SS6END[2] TILE_INT_L.SW6END[1] TILE_INT_L.WR1END[2] TILE_INT_L.WW4END[2]" name="TILE_INT_L.CTRL_L[0]" output="TILE_CLBLL_L.CTRL[0]"/>
    <mux input="TILE_INT_L.EE4END[2] TILE_INT_L.ER1END[2] TILE_INT_L.GFAN[0] TILE_INT_L.GFAN[1] TILE_INT_L.NE6END[2] TILE_INT_L.NN6END[2] TILE_INT_L.NR1END[2] TILE_INT_L.NW6END[2] TILE_INT_L.SE6END[2] TILE_INT_L.SR1END[2] TILE_INT_L.SS6END[2] TILE_INT_L.SW6END[1] TILE_INT_L.WR1END[2] TILE_INT_L.WW4END[2]" name="TILE_INT_L.CTRL_L[1]" output="TILE_CLBLL_L.CTRL[1]"/>
    <!-- Output muxes for FAN_L -->
    <mux input="TILE_INT_L.EE2END[0] TILE_INT_L.EL1END[0] TILE_INT_L.ER1END[0] TILE_INT_L.GFAN[0] TILE_CLBLL_L.LOGIC_OUTS[4] TILE_CLBLL_L.LOGIC_OUTS[8] TILE_CLBLL_L.LOGIC_OUTS[18] TILE_INT_L.NE2END[0] TILE_INT_L.NL1END[1] TILE_INT_L.NN2END[0] TILE_INT_L.NR1END[0] TILE_INT_L.NW2END[1] TILE_INT_L.SE2END[0] TILE_INT_L.SL1END[0] TILE_INT_L.SS2END[0] TILE_INT_L.SW2END[0] TILE_INT_L.WL1END[0] TILE_INT_L.WR1END[0] TILE_INT_L.WW2END[0]" name="TILE_INT_L.FAN_L[4]" output="TILE_CLBLL_L.FAN[4]"/>
    <mux input="TILE_INT_L.EE2END[0] TILE_INT_L.EL1END[0] TILE_INT_L.GFAN[0] TILE_CLBLL_L.LOGIC_OUTS[0] TILE_CLBLL_L.LOGIC_OUTS[12] TILE_CLBLL_L.LOGIC_OUTS[22] TILE_INT_L.NE2END[0] TILE_INT_L.NL1END[0] TILE_INT_L.NN2END[0] TILE_INT_L.NR1END[0] TILE_INT_L.NW2END[0] TILE_INT_L.SE2END[0] TILE_INT_L.SL1END[0] TILE_INT_L.WR1END[0]" name="TILE_INT_L.FAN_L[0]" output="TILE_CLBLL_L.FAN[0]"/>
    <mux input="TILE_INT_L.EE2END[1] TILE_INT_L.EL1END[1] TILE_INT_L.ER1END[0] TILE_INT_L.GFAN[0] TILE_CLBLL_L.LOGIC_OUTS[5] TILE_CLBLL_L.LOGIC_OUTS[9] TILE_CLBLL_L.LOGIC_OUTS[19] TILE_INT_L.NE2END[1] TILE_INT_L.NL1END[1] TILE_INT_L.NN2END[1] TILE_INT_L.NR1END[1] TILE_INT_L.NW2END[1] TILE_INT_L.SE2END[1] TILE_INT_L.SL1END[1] TILE_INT_L.SS2END[0] TILE_INT_L.SW2END[0] TILE_INT_L.WL1END[0] TILE_INT_L.WR1END[1] TILE_INT_L.WW2END[0]" name="TILE_INT_L.FAN_L[2]" output="TILE_CLBLL_L.FAN[2]"/>
    <mux input="TILE_INT_L.EE2END[1] TILE_INT_L.EL1END[1] TILE_INT_L.ER1END[1] TILE_INT_L.GFAN[0] TILE_CLBLL_L.LOGIC_OUTS[1] TILE_CLBLL_L.LOGIC_OUTS[13] TILE_CLBLL_L.LOGIC_OUTS[23] TILE_INT_L.NE2END[1] TILE_INT_L.NL1END[2] TILE_INT_L.NN2END[1] TILE_INT_L.NR1END[1] TILE_INT_L.NW2END[2] TILE_INT_L.SE2END[1] TILE_INT_L.SL1END[1] TILE_INT_L.SR1END[1] TILE_INT_L.SS2END[1] TILE_INT_L.SW2END[1] TILE_INT_L.WL1END[1] TILE_INT_L.WR1END[1] TILE_INT_L.WW2END[1]" name="TILE_INT_L.FAN_L[6]" output="TILE_CLBLL_L.FAN[6]"/>
    <mux input="TILE_INT_L.EE2END[2] TILE_INT_L.EL1END[2] TILE_INT_L.ER1END[1] TILE_INT_L.GFAN[1] TILE_CLBLL_L.LOGIC_OUTS[2] TILE_CLBLL_L.LOGIC_OUTS[14] TILE_CLBLL_L.LOGIC_OUTS[20] TILE_INT_L.NE2END[2] TILE_INT_L.NL1END[2] TILE_INT_L.NN2END[2] TILE_INT_L.NR1END[2] TILE_INT_L.NW2END[2] TILE_INT_L.SE2END[2] TILE_INT_L.SL1END[2] TILE_INT_L.SR1END[1] TILE_INT_L.SS2END[1] TILE_INT_L.SW2END[1] TILE_INT_L.WL1END[1] TILE_INT_L.WR1END[2] TILE_INT_L.WW2END[1]" name="TILE_INT_L.FAN_L[7]" output="TILE_CLBLL_L.FAN[7]"/>
    <mux input="TILE_INT_L.EE2END[2] TILE_INT_L.EL1END[2] TILE_INT_L.ER1END[2] TILE_INT_L.GFAN[1] TILE_CLBLL_L.LOGIC_OUTS[6] TILE_CLBLL_L.LOGIC_OUTS[10] TILE_CLBLL_L.LOGIC_OUTS[16] TILE_INT_L.NE2END[2] TILE_INT_L.NN2END[2] TILE_INT_L.NR1END[2] TILE_INT_L.NW2END[3] TILE_INT_L.SE2END[2] TILE_INT_L.SL1END[2] TILE_INT_L.SR1END[2] TILE_INT_L.SS2END[2] TILE_INT_L.SW2END[2] TILE_INT_L.WL1END[2] TILE_INT_L.WR1END[2] TILE_INT_L.WW2END[2]" name="TILE_INT_L.FAN_L[5]" output="TILE_CLBLL_L.FAN[5]"/>
    <mux input="TILE_INT_L.EE2END[3] TILE_INT_L.EL1END[3] TILE_INT_L.ER1END[2] TILE_INT_L.GFAN[1] TILE_CLBLL_L.LOGIC_OUTS[7] TILE_CLBLL_L.LOGIC_OUTS[11] TILE_CLBLL_L.LOGIC_OUTS[17] TILE_INT_L.NE2END[3] TILE_INT_L.NN2END[3] TILE_INT_L.NR1END[3] TILE_INT_L.NW2END[3] TILE_INT_L.SE2END[3] TILE_INT_L.SL1END[3] TILE_INT_L.SR1END[2] TILE_INT_L.SS2END[2] TILE_INT_L.SW2END[2] TILE_INT_L.WL1END[2] TILE_INT_L.WR1END[3] TILE_INT_L.WW2END[2]" name="TILE_INT_L.FAN_L[1]" output="TILE_CLBLL_L.FAN[1]"/>
    <mux input="TILE_INT_L.EE2END[3] TILE_INT_L.EL1END[3] TILE_INT_L.ER1END[3] TILE_INT_L.GFAN[1] TILE_CLBLL_L.LOGIC_OUTS[3] TILE_CLBLL_L.LOGIC_OUTS[15] TILE_CLBLL_L.LOGIC_OUTS[21] TILE_INT_L.NE2END[3] TILE_INT_L.NN2END[3] TILE_INT_L.NR1END[3] TILE_INT_L.SE2END[3] TILE_INT_L.SL1END[3] TILE_INT_L.SR1END[3] TILE_INT_L.SS2END[3] TILE_INT_L.SW2END[3] TILE_INT_L.WL1END[3] TILE_INT_L.WR1END[3] TILE_INT_L.WW2END[3]" name="TILE_INT_L.FAN_L[3]" output="TILE_CLBLL_L.FAN[3]"/>
    <!-- Output muxes for IMUX_L -->
    <mux input="TILE_INT_L.EE2END[0] TILE_INT_L.EL1END[0] TILE_INT_L.ER1END[0] TILE_INT_L.GFAN[0] TILE_CLBLL_L.LOGIC_OUTS[0] TILE_CLBLL_L.LOGIC_OUTS[12] TILE_CLBLL_L.LOGIC_OUTS[22] TILE_INT_L.NE2END[0] TILE_INT_L.NL1END[0] TILE_INT_L.NN2END[0] TILE_INT_L.NR1END[0] TILE_INT_L.NW2END[0] TILE_INT_L.SE2END[0] TILE_INT_L.SL1END[0] TILE_INT_L.SS2END[0] TILE_INT_L.SW2END[0] TILE_INT_L.WL1END[0] TILE_INT_L.WR1END[0]" name="TILE_CLBLL_L.IMUX[24]" output="TILE_CLBLL_L.IMUX[24]"/>
    <mux input="TILE_INT_L.EE2END[0] TILE_INT_L.EL1END[0] TILE_INT_L.ER1END[0] TILE_INT_L.GFAN[0] TILE_CLBLL_L.LOGIC_OUTS[0] TILE_CLBLL_L.LOGIC_OUTS[12] TILE_CLBLL_L.LOGIC_OUTS[22] TILE_INT_L.NE2END[0] TILE_INT_L.NL1END[0] TILE_INT_L.NN2END[0] TILE_INT_L.NR1END[0] TILE_INT_L.NW2END[0] TILE_INT_L.SE2END[0] TILE_INT_L.SL1END[0] TILE_INT_L.SS2END[0] TILE_INT_L.SW2END[0] TILE_INT_L.WL1END[0] TILE_INT_L.WR1END[0]" name="TILE_CLBLL_L.IMUX[32]" output="TILE_CLBLL_L.IMUX[32]"/>
    <mux input="TILE_INT_L.EE2END[0] TILE_INT_L.EL1END[0] TILE_INT_L.ER1END[0] TILE_INT_L.GFAN[0] TILE_CLBLL_L.LOGIC_OUTS[0] TILE_CLBLL_L.LOGIC_OUTS[12] TILE_CLBLL_L.LOGIC_OUTS[22] TILE_INT_L.NE2END[0] TILE_INT_L.NL1END[0] TILE_INT_L.NN2END[0] TILE_INT_L.NR1END[0] TILE_INT_L.NW2END[0] TILE_INT_L.SE2END[0] TILE_INT_L.SL1END[0] TILE_INT_L.SS2END[0] TILE_INT_L.SW2END[0] TILE_INT_L.WL1END[0] TILE_INT_L.WR1END[0]" name="TILE_CLBLL_L.IMUX[40]" output="TILE_CLBLL_L.IMUX[40]"/>
    <mux input="TILE_INT_L.EE2END[0] TILE_INT_L.EL1END[0] TILE_INT_L.ER1END[0] TILE_INT_L.GFAN[0] TILE_CLBLL_L.LOGIC_OUTS[4] TILE_CLBLL_L.LOGIC_OUTS[8] TILE_CLBLL_L.LOGIC_OUTS[18] TILE_INT_L.NE2END[0] TILE_INT_L.NL1END[1] TILE_INT_L.NN2END[0] TILE_INT_L.NR1END[0] TILE_INT_L.NW2END[1] TILE_INT_L.SE2END[0] TILE_INT_L.SL1END[0] TILE_INT_L.SS2END[0] TILE_INT_L.SW2END[0] TILE_INT_L.WL1END[0] TILE_INT_L.WR1END[0] TILE_INT_L.WW2END[0]" name="TILE_CLBLL_L.IMUX[17]" output="TILE_CLBLL_L.IMUX[17]"/>
    <mux input="TILE_INT_L.EE2END[0] TILE_INT_L.EL1END[0] TILE_INT_L.ER1END[0] TILE_INT_L.GFAN[0] TILE_CLBLL_L.LOGIC_OUTS[4] TILE_CLBLL_L.LOGIC_OUTS[8] TILE_CLBLL_L.LOGIC_OUTS[18] TILE_INT_L.NE2END[0] TILE_INT_L.NL1END[1] TILE_INT_L.NN2END[0] TILE_INT_L.NR1END[0] TILE_INT_L.NW2END[1] TILE_INT_L.SE2END[0] TILE_INT_L.SL1END[0] TILE_INT_L.SS2END[0] TILE_INT_L.SW2END[0] TILE_INT_L.WL1END[0] TILE_INT_L.WR1END[0] TILE_INT_L.WW2END[0]" name="TILE_CLBLL_L.IMUX[1]" output="TILE_CLBLL_L.IMUX[1]"/>
    <mux input="TILE_INT_L.EE2END[0] TILE_INT_L.EL1END[0] TILE_INT_L.ER1END[0] TILE_INT_L.GFAN[0] TILE_CLBLL_L.LOGIC_OUTS[4] TILE_CLBLL_L.LOGIC_OUTS[8] TILE_CLBLL_L.LOGIC_OUTS[18] TILE_INT_L.NE2END[0] TILE_INT_L.NL1END[1] TILE_INT_L.NN2END[0] TILE_INT_L.NR1END[0] TILE_INT_L.NW2END[1] TILE_INT_L.SE2END[0] TILE_INT_L.SL1END[0] TILE_INT_L.SS2END[0] TILE_INT_L.SW2END[0] TILE_INT_L.WL1END[0] TILE_INT_L.WR1END[0] TILE_INT_L.WW2END[0]" name="TILE_CLBLL_L.IMUX[9]" output="TILE_CLBLL_L.IMUX[9]"/>
    <mux input="TILE_INT_L.EE2END[0] TILE_INT_L.EL1END[0] TILE_INT_L.GFAN[0] TILE_CLBLL_L.LOGIC_OUTS[0] TILE_CLBLL_L.LOGIC_OUTS[12] TILE_CLBLL_L.LOGIC_OUTS[22] TILE_INT_L.NE2END[0] TILE_INT_L.NL1END[0] TILE_INT_L.NN2END[0] TILE_INT_L.NR1END[0] TILE_INT_L.NW2END[0] TILE_INT_L.SE2END[0] TILE_INT_L.SL1END[0] TILE_INT_L.WR1END[0]" name="TILE_CLBLL_L.IMUX[16]" output="TILE_CLBLL_L.IMUX[16]"/>
    <mux input="TILE_INT_L.EE2END[0] TILE_INT_L.EL1END[0] TILE_INT_L.GFAN[0] TILE_CLBLL_L.LOGIC_OUTS[0] TILE_CLBLL_L.LOGIC_OUTS[12] TILE_CLBLL_L.LOGIC_OUTS[22] TILE_INT_L.NE2END[0] TILE_INT_L.NL1END[0] TILE_INT_L.NN2END[0] TILE_INT_L.NR1END[0] TILE_INT_L.NW2END[0] TILE_INT_L.SE2END[0] TILE_INT_L.SL1END[0] TILE_INT_L.WR1END[0]" name="TILE_CLBLL_L.IMUX[8]" output="TILE_CLBLL_L.IMUX[8]"/>
    <mux input="TILE_INT_L.EE2END[0] TILE_INT_L.EL1END[0] TILE_INT_L.GFAN[0] TILE_CLBLL_L.LOGIC_OUTS[0] TILE_CLBLL_L.LOGIC_OUTS[12] TILE_CLBLL_L.LOGIC_OUTS[22] TILE_INT_L.NE2END[0] TILE_INT_L.NL1END[0] TILE_INT_L.NN2END[0] TILE_INT_L.NR1END[0] TILE_INT_L.NW2END[0] TILE_INT_L.SE2END[0] TILE_INT_L.SL1END[0] TILE_INT_L.WR1END[0]" name="TILE_CLBLL_L.IMUX[0]" output="TILE_CLBLL_L.IMUX[0]"/>
    <mux input="TILE_INT_L.EE2END[0] TILE_INT_L.EL1END[1] TILE_INT_L.ER1END[0] TILE_INT_L.GFAN[0] TILE_CLBLL_L.LOGIC_OUTS[4] TILE_CLBLL_L.LOGIC_OUTS[8] TILE_CLBLL_L.LOGIC_OUTS[18] TILE_INT_L.NE2END[1] TILE_INT_L.NL1END[1] TILE_INT_L.NN2END[1] TILE_INT_L.NR1END[0] TILE_INT_L.NW2END[1] TILE_INT_L.SE2END[0] TILE_INT_L.SL1END[0] TILE_INT_L.SS2END[0] TILE_INT_L.SW2END[0] TILE_INT_L.WL1END[0] TILE_INT_L.WR1END[1] TILE_INT_L.WW2END[0]" name="TILE_CLBLL_L.IMUX[25]" output="TILE_CLBLL_L.IMUX[25]"/>
    <mux input="TILE_INT_L.EE2END[0] TILE_INT_L.EL1END[1] TILE_INT_L.ER1END[0] TILE_INT_L.GFAN[0] TILE_CLBLL_L.LOGIC_OUTS[4] TILE_CLBLL_L.LOGIC_OUTS[8] TILE_CLBLL_L.LOGIC_OUTS[18] TILE_INT_L.NE2END[1] TILE_INT_L.NL1END[1] TILE_INT_L.NN2END[1] TILE_INT_L.NR1END[0] TILE_INT_L.NW2END[1] TILE_INT_L.SE2END[0] TILE_INT_L.SL1END[0] TILE_INT_L.SS2END[0] TILE_INT_L.SW2END[0] TILE_INT_L.WL1END[0] TILE_INT_L.WR1END[1] TILE_INT_L.WW2END[0]" name="TILE_CLBLL_L.IMUX[33]" output="TILE_CLBLL_L.IMUX[33]"/>
    <mux input="TILE_INT_L.EE2END[0] TILE_INT_L.EL1END[1] TILE_INT_L.ER1END[0] TILE_INT_L.GFAN[0] TILE_CLBLL_L.LOGIC_OUTS[4] TILE_CLBLL_L.LOGIC_OUTS[8] TILE_CLBLL_L.LOGIC_OUTS[18] TILE_INT_L.NE2END[1] TILE_INT_L.NL1END[1] TILE_INT_L.NN2END[1] TILE_INT_L.NR1END[0] TILE_INT_L.NW2END[1] TILE_INT_L.SE2END[0] TILE_INT_L.SL1END[0] TILE_INT_L.SS2END[0] TILE_INT_L.SW2END[0] TILE_INT_L.WL1END[0] TILE_INT_L.WR1END[1] TILE_INT_L.WW2END[0]" name="TILE_CLBLL_L.IMUX[41]" output="TILE_CLBLL_L.IMUX[41]"/>
    <mux input="TILE_INT_L.EE2END[1] TILE_INT_L.EL1END[1] TILE_INT_L.ER1END[0] TILE_INT_L.GFAN[0] TILE_CLBLL_L.LOGIC_OUTS[5] TILE_CLBLL_L.LOGIC_OUTS[9] TILE_CLBLL_L.LOGIC_OUTS[19] TILE_INT_L.NE2END[1] TILE_INT_L.NL1END[1] TILE_INT_L.NN2END[1] TILE_INT_L.NR1END[1] TILE_INT_L.NW2END[1] TILE_INT_L.SE2END[1] TILE_INT_L.SL1END[1] TILE_INT_L.SS2END[0] TILE_INT_L.SW2END[0] TILE_INT_L.WL1END[0] TILE_INT_L.WR1END[1] TILE_INT_L.WW2END[0]" name="TILE_CLBLL_L.IMUX[10]" output="TILE_CLBLL_L.IMUX[10]"/>
    <mux input="TILE_INT_L.EE2END[1] TILE_INT_L.EL1END[1] TILE_INT_L.ER1END[0] TILE_INT_L.GFAN[0] TILE_CLBLL_L.LOGIC_OUTS[5] TILE_CLBLL_L.LOGIC_OUTS[9] TILE_CLBLL_L.LOGIC_OUTS[19] TILE_INT_L.NE2END[1] TILE_INT_L.NL1END[1] TILE_INT_L.NN2END[1] TILE_INT_L.NR1END[1] TILE_INT_L.NW2END[1] TILE_INT_L.SE2END[1] TILE_INT_L.SL1END[1] TILE_INT_L.SS2END[0] TILE_INT_L.SW2END[0] TILE_INT_L.WL1END[0] TILE_INT_L.WR1END[1] TILE_INT_L.WW2END[0]" name="TILE_CLBLL_L.IMUX[18]" output="TILE_CLBLL_L.IMUX[18]"/>
    <mux input="TILE_INT_L.EE2END[1] TILE_INT_L.EL1END[1] TILE_INT_L.ER1END[0] TILE_INT_L.GFAN[0] TILE_CLBLL_L.LOGIC_OUTS[5] TILE_CLBLL_L.LOGIC_OUTS[9] TILE_CLBLL_L.LOGIC_OUTS[19] TILE_INT_L.NE2END[1] TILE_INT_L.NL1END[1] TILE_INT_L.NN2END[1] TILE_INT_L.NR1END[1] TILE_INT_L.NW2END[1] TILE_INT_L.SE2END[1] TILE_INT_L.SL1END[1] TILE_INT_L.SS2END[0] TILE_INT_L.SW2END[0] TILE_INT_L.WL1END[0] TILE_INT_L.WR1END[1] TILE_INT_L.WW2END[0]" name="TILE_CLBLL_L.IMUX[2]" output="TILE_CLBLL_L.IMUX[2]"/>
    <mux input="TILE_INT_L.EE2END[1] TILE_INT_L.EL1END[1] TILE_INT_L.ER1END[1] TILE_INT_L.GFAN[0] TILE_CLBLL_L.LOGIC_OUTS[1] TILE_CLBLL_L.LOGIC_OUTS[13] TILE_CLBLL_L.LOGIC_OUTS[23] TILE_INT_L.NE2END[1] TILE_INT_L.NL1END[2] TILE_INT_L.NN2END[1] TILE_INT_L.NR1END[1] TILE_INT_L.NW2END[2] TILE_INT_L.SE2END[1] TILE_INT_L.SL1END[1] TILE_INT_L.SR1END[1] TILE_INT_L.SS2END[1] TILE_INT_L.SW2END[1] TILE_INT_L.WL1END[1] TILE_INT_L.WR1END[1] TILE_INT_L.WW2END[1]" name="TILE_CLBLL_L.IMUX[11]" output="TILE_CLBLL_L.IMUX[11]"/>
    <mux input="TILE_INT_L.EE2END[1] TILE_INT_L.EL1END[1] TILE_INT_L.ER1END[1] TILE_INT_L.GFAN[0] TILE_CLBLL_L.LOGIC_OUTS[1] TILE_CLBLL_L.LOGIC_OUTS[13] TILE_CLBLL_L.LOGIC_OUTS[23] TILE_INT_L.NE2END[1] TILE_INT_L.NL1END[2] TILE_INT_L.NN2END[1] TILE_INT_L.NR1END[1] TILE_INT_L.NW2END[2] TILE_INT_L.SE2END[1] TILE_INT_L.SL1END[1] TILE_INT_L.SR1END[1] TILE_INT_L.SS2END[1] TILE_INT_L.SW2END[1] TILE_INT_L.WL1END[1] TILE_INT_L.WR1END[1] TILE_INT_L.WW2END[1]" name="TILE_CLBLL_L.IMUX[19]" output="TILE_CLBLL_L.IMUX[19]"/>
    <mux input="TILE_INT_L.EE2END[1] TILE_INT_L.EL1END[1] TILE_INT_L.ER1END[1] TILE_INT_L.GFAN[0] TILE_CLBLL_L.LOGIC_OUTS[1] TILE_CLBLL_L.LOGIC_OUTS[13] TILE_CLBLL_L.LOGIC_OUTS[23] TILE_INT_L.NE2END[1] TILE_INT_L.NL1END[2] TILE_INT_L.NN2END[1] TILE_INT_L.NR1END[1] TILE_INT_L.NW2END[2] TILE_INT_L.SE2END[1] TILE_INT_L.SL1END[1] TILE_INT_L.SR1END[1] TILE_INT_L.SS2END[1] TILE_INT_L.SW2END[1] TILE_INT_L.WL1END[1] TILE_INT_L.WR1END[1] TILE_INT_L.WW2END[1]" name="TILE_CLBLL_L.IMUX[3]" output="TILE_CLBLL_L.IMUX[3]"/>
    <mux input="TILE_INT_L.EE2END[1] TILE_INT_L.EL1END[1] TILE_INT_L.ER1END[1] TILE_INT_L.GFAN[0] TILE_CLBLL_L.LOGIC_OUTS[5] TILE_CLBLL_L.LOGIC_OUTS[9] TILE_CLBLL_L.LOGIC_OUTS[19] TILE_INT_L.NE2END[1] TILE_INT_L.NL1END[1] TILE_INT_L.NN2END[1] TILE_INT_L.NR1END[1] TILE_INT_L.NW2END[1] TILE_INT_L.SE2END[1] TILE_INT_L.SL1END[1] TILE_INT_L.SS2END[1] TILE_INT_L.SW2END[1] TILE_INT_L.WL1END[1] TILE_INT_L.WR1END[1] TILE_INT_L.WW2END[0]" name="TILE_CLBLL_L.IMUX[26]" output="TILE_CLBLL_L.IMUX[26]"/>
    <mux input="TILE_INT_L.EE2END[1] TILE_INT_L.EL1END[1] TILE_INT_L.ER1END[1] TILE_INT_L.GFAN[0] TILE_CLBLL_L.LOGIC_OUTS[5] TILE_CLBLL_L.LOGIC_OUTS[9] TILE_CLBLL_L.LOGIC_OUTS[19] TILE_INT_L.NE2END[1] TILE_INT_L.NL1END[1] TILE_INT_L.NN2END[1] TILE_INT_L.NR1END[1] TILE_INT_L.NW2END[1] TILE_INT_L.SE2END[1] TILE_INT_L.SL1END[1] TILE_INT_L.SS2END[1] TILE_INT_L.SW2END[1] TILE_INT_L.WL1END[1] TILE_INT_L.WR1END[1] TILE_INT_L.WW2END[0]" name="TILE_CLBLL_L.IMUX[34]" output="TILE_CLBLL_L.IMUX[34]"/>
    <mux input="TILE_INT_L.EE2END[1] TILE_INT_L.EL1END[1] TILE_INT_L.ER1END[1] TILE_INT_L.GFAN[0] TILE_CLBLL_L.LOGIC_OUTS[5] TILE_CLBLL_L.LOGIC_OUTS[9] TILE_CLBLL_L.LOGIC_OUTS[19] TILE_INT_L.NE2END[1] TILE_INT_L.NL1END[1] TILE_INT_L.NN2END[1] TILE_INT_L.NR1END[1] TILE_INT_L.NW2END[1] TILE_INT_L.SE2END[1] TILE_INT_L.SL1END[1] TILE_INT_L.SS2END[1] TILE_INT_L.SW2END[1] TILE_INT_L.WL1END[1] TILE_INT_L.WR1END[1] TILE_INT_L.WW2END[0]" name="TILE_CLBLL_L.IMUX[42]" output="TILE_CLBLL_L.IMUX[42]"/>
    <mux input="TILE_INT_L.EE2END[1] TILE_INT_L.EL1END[2] TILE_INT_L.ER1END[1] TILE_INT_L.GFAN[0] TILE_CLBLL_L.LOGIC_OUTS[1] TILE_CLBLL_L.LOGIC_OUTS[13] TILE_CLBLL_L.LOGIC_OUTS[23] TILE_INT_L.NE2END[2] TILE_INT_L.NL1END[2] TILE_INT_L.NN2END[2] TILE_INT_L.NR1END[1] TILE_INT_L.NW2END[2] TILE_INT_L.SE2END[1] TILE_INT_L.SL1END[1] TILE_INT_L.SR1END[1] TILE_INT_L.SS2END[1] TILE_INT_L.SW2END[1] TILE_INT_L.WL1END[1] TILE_INT_L.WR1END[2] TILE_INT_L.WW2END[1]" name="TILE_CLBLL_L.IMUX[27]" output="TILE_CLBLL_L.IMUX[27]"/>
    <mux input="TILE_INT_L.EE2END[1] TILE_INT_L.EL1END[2] TILE_INT_L.ER1END[1] TILE_INT_L.GFAN[0] TILE_CLBLL_L.LOGIC_OUTS[1] TILE_CLBLL_L.LOGIC_OUTS[13] TILE_CLBLL_L.LOGIC_OUTS[23] TILE_INT_L.NE2END[2] TILE_INT_L.NL1END[2] TILE_INT_L.NN2END[2] TILE_INT_L.NR1END[1] TILE_INT_L.NW2END[2] TILE_INT_L.SE2END[1] TILE_INT_L.SL1END[1] TILE_INT_L.SR1END[1] TILE_INT_L.SS2END[1] TILE_INT_L.SW2END[1] TILE_INT_L.WL1END[1] TILE_INT_L.WR1END[2] TILE_INT_L.WW2END[1]" name="TILE_CLBLL_L.IMUX[35]" output="TILE_CLBLL_L.IMUX[35]"/>
    <mux input="TILE_INT_L.EE2END[1] TILE_INT_L.EL1END[2] TILE_INT_L.ER1END[1] TILE_INT_L.GFAN[0] TILE_CLBLL_L.LOGIC_OUTS[1] TILE_CLBLL_L.LOGIC_OUTS[13] TILE_CLBLL_L.LOGIC_OUTS[23] TILE_INT_L.NE2END[2] TILE_INT_L.NL1END[2] TILE_INT_L.NN2END[2] TILE_INT_L.NR1END[1] TILE_INT_L.NW2END[2] TILE_INT_L.SE2END[1] TILE_INT_L.SL1END[1] TILE_INT_L.SR1END[1] TILE_INT_L.SS2END[1] TILE_INT_L.SW2END[1] TILE_INT_L.WL1END[1] TILE_INT_L.WR1END[2] TILE_INT_L.WW2END[1]" name="TILE_CLBLL_L.IMUX[43]" output="TILE_CLBLL_L.IMUX[43]"/>
    <mux input="TILE_INT_L.EE2END[2] TILE_INT_L.EL1END[2] TILE_INT_L.ER1END[1] TILE_INT_L.GFAN[1] TILE_CLBLL_L.LOGIC_OUTS[2] TILE_CLBLL_L.LOGIC_OUTS[14] TILE_CLBLL_L.LOGIC_OUTS[20] TILE_INT_L.NE2END[2] TILE_INT_L.NL1END[2] TILE_INT_L.NN2END[2] TILE_INT_L.NR1END[2] TILE_INT_L.NW2END[2] TILE_INT_L.SE2END[2] TILE_INT_L.SL1END[2] TILE_INT_L.SR1END[1] TILE_INT_L.SS2END[1] TILE_INT_L.SW2END[1] TILE_INT_L.WL1END[1] TILE_INT_L.WR1END[2] TILE_INT_L.WW2END[1]" name="TILE_CLBLL_L.IMUX[12]" output="TILE_CLBLL_L.IMUX[12]"/>
    <mux input="TILE_INT_L.EE2END[2] TILE_INT_L.EL1END[2] TILE_INT_L.ER1END[1] TILE_INT_L.GFAN[1] TILE_CLBLL_L.LOGIC_OUTS[2] TILE_CLBLL_L.LOGIC_OUTS[14] TILE_CLBLL_L.LOGIC_OUTS[20] TILE_INT_L.NE2END[2] TILE_INT_L.NL1END[2] TILE_INT_L.NN2END[2] TILE_INT_L.NR1END[2] TILE_INT_L.NW2END[2] TILE_INT_L.SE2END[2] TILE_INT_L.SL1END[2] TILE_INT_L.SR1END[1] TILE_INT_L.SS2END[1] TILE_INT_L.SW2END[1] TILE_INT_L.WL1END[1] TILE_INT_L.WR1END[2] TILE_INT_L.WW2END[1]" name="TILE_CLBLL_L.IMUX[20]" output="TILE_CLBLL_L.IMUX[20]"/>
    <mux input="TILE_INT_L.EE2END[2] TILE_INT_L.EL1END[2] TILE_INT_L.ER1END[1] TILE_INT_L.GFAN[1] TILE_CLBLL_L.LOGIC_OUTS[2] TILE_CLBLL_L.LOGIC_OUTS[14] TILE_CLBLL_L.LOGIC_OUTS[20] TILE_INT_L.NE2END[2] TILE_INT_L.NL1END[2] TILE_INT_L.NN2END[2] TILE_INT_L.NR1END[2] TILE_INT_L.NW2END[2] TILE_INT_L.SE2END[2] TILE_INT_L.SL1END[2] TILE_INT_L.SR1END[1] TILE_INT_L.SS2END[1] TILE_INT_L.SW2END[1] TILE_INT_L.WL1END[1] TILE_INT_L.WR1END[2] TILE_INT_L.WW2END[1]" name="TILE_CLBLL_L.IMUX[4]" output="TILE_CLBLL_L.IMUX[4]"/>
    <mux input="TILE_INT_L.EE2END[2] TILE_INT_L.EL1END[2] TILE_INT_L.ER1END[2] TILE_INT_L.GFAN[1] TILE_CLBLL_L.LOGIC_OUTS[2] TILE_CLBLL_L.LOGIC_OUTS[14] TILE_CLBLL_L.LOGIC_OUTS[20] TILE_INT_L.NE2END[2] TILE_INT_L.NL1END[2] TILE_INT_L.NN2END[2] TILE_INT_L.NR1END[2] TILE_INT_L.NW2END[2] TILE_INT_L.SE2END[2] TILE_INT_L.SL1END[2] TILE_INT_L.SR1END[1] TILE_INT_L.SS2END[2] TILE_INT_L.SW2END[2] TILE_INT_L.WL1END[2] TILE_INT_L.WR1END[2] TILE_INT_L.WW2END[1]" name="TILE_CLBLL_L.IMUX[28]" output="TILE_CLBLL_L.IMUX[28]"/>
    <mux input="TILE_INT_L.EE2END[2] TILE_INT_L.EL1END[2] TILE_INT_L.ER1END[2] TILE_INT_L.GFAN[1] TILE_CLBLL_L.LOGIC_OUTS[2] TILE_CLBLL_L.LOGIC_OUTS[14] TILE_CLBLL_L.LOGIC_OUTS[20] TILE_INT_L.NE2END[2] TILE_INT_L.NL1END[2] TILE_INT_L.NN2END[2] TILE_INT_L.NR1END[2] TILE_INT_L.NW2END[2] TILE_INT_L.SE2END[2] TILE_INT_L.SL1END[2] TILE_INT_L.SR1END[1] TILE_INT_L.SS2END[2] TILE_INT_L.SW2END[2] TILE_INT_L.WL1END[2] TILE_INT_L.WR1END[2] TILE_INT_L.WW2END[1]" name="TILE_CLBLL_L.IMUX[36]" output="TILE_CLBLL_L.IMUX[36]"/>
    <mux input="TILE_INT_L.EE2END[2] TILE_INT_L.EL1END[2] TILE_INT_L.ER1END[2] TILE_INT_L.GFAN[1] TILE_CLBLL_L.LOGIC_OUTS[2] TILE_CLBLL_L.LOGIC_OUTS[14] TILE_CLBLL_L.LOGIC_OUTS[20] TILE_INT_L.NE2END[2] TILE_INT_L.NL1END[2] TILE_INT_L.NN2END[2] TILE_INT_L.NR1END[2] TILE_INT_L.NW2END[2] TILE_INT_L.SE2END[2] TILE_INT_L.SL1END[2] TILE_INT_L.SR1END[1] TILE_INT_L.SS2END[2] TILE_INT_L.SW2END[2] TILE_INT_L.WL1END[2] TILE_INT_L.WR1END[2] TILE_INT_L.WW2END[1]" name="TILE_CLBLL_L.IMUX[44]" output="TILE_CLBLL_L.IMUX[44]"/>
    <mux input="TILE_INT_L.EE2END[2] TILE_INT_L.EL1END[2] TILE_INT_L.ER1END[2] TILE_INT_L.GFAN[1] TILE_CLBLL_L.LOGIC_OUTS[6] TILE_CLBLL_L.LOGIC_OUTS[10] TILE_CLBLL_L.LOGIC_OUTS[16] TILE_INT_L.NE2END[2] TILE_INT_L.NN2END[2] TILE_INT_L.NR1END[2] TILE_INT_L.NW2END[3] TILE_INT_L.SE2END[2] TILE_INT_L.SL1END[2] TILE_INT_L.SR1END[2] TILE_INT_L.SS2END[2] TILE_INT_L.SW2END[2] TILE_INT_L.WL1END[2] TILE_INT_L.WR1END[2] TILE_INT_L.WW2END[2]" name="TILE_CLBLL_L.IMUX[13]" output="TILE_CLBLL_L.IMUX[13]"/>
    <mux input="TILE_INT_L.EE2END[2] TILE_INT_L.EL1END[2] TILE_INT_L.ER1END[2] TILE_INT_L.GFAN[1] TILE_CLBLL_L.LOGIC_OUTS[6] TILE_CLBLL_L.LOGIC_OUTS[10] TILE_CLBLL_L.LOGIC_OUTS[16] TILE_INT_L.NE2END[2] TILE_INT_L.NN2END[2] TILE_INT_L.NR1END[2] TILE_INT_L.NW2END[3] TILE_INT_L.SE2END[2] TILE_INT_L.SL1END[2] TILE_INT_L.SR1END[2] TILE_INT_L.SS2END[2] TILE_INT_L.SW2END[2] TILE_INT_L.WL1END[2] TILE_INT_L.WR1END[2] TILE_INT_L.WW2END[2]" name="TILE_CLBLL_L.IMUX[21]" output="TILE_CLBLL_L.IMUX[21]"/>
    <mux input="TILE_INT_L.EE2END[2] TILE_INT_L.EL1END[2] TILE_INT_L.ER1END[2] TILE_INT_L.GFAN[1] TILE_CLBLL_L.LOGIC_OUTS[6] TILE_CLBLL_L.LOGIC_OUTS[10] TILE_CLBLL_L.LOGIC_OUTS[16] TILE_INT_L.NE2END[2] TILE_INT_L.NN2END[2] TILE_INT_L.NR1END[2] TILE_INT_L.NW2END[3] TILE_INT_L.SE2END[2] TILE_INT_L.SL1END[2] TILE_INT_L.SR1END[2] TILE_INT_L.SS2END[2] TILE_INT_L.SW2END[2] TILE_INT_L.WL1END[2] TILE_INT_L.WR1END[2] TILE_INT_L.WW2END[2]" name="TILE_CLBLL_L.IMUX[5]" output="TILE_CLBLL_L.IMUX[5]"/>
    <mux input="TILE_INT_L.EE2END[2] TILE_INT_L.EL1END[3] TILE_INT_L.ER1END[2] TILE_INT_L.GFAN[1] TILE_CLBLL_L.LOGIC_OUTS[6] TILE_CLBLL_L.LOGIC_OUTS[10] TILE_CLBLL_L.LOGIC_OUTS[16] TILE_INT_L.NE2END[3] TILE_INT_L.NN2END[3] TILE_INT_L.NR1END[2] TILE_INT_L.NW2END[3] TILE_INT_L.SE2END[2] TILE_INT_L.SL1END[2] TILE_INT_L.SR1END[2] TILE_INT_L.SS2END[2] TILE_INT_L.SW2END[2] TILE_INT_L.WL1END[2] TILE_INT_L.WR1END[3] TILE_INT_L.WW2END[2]" name="TILE_CLBLL_L.IMUX[29]" output="TILE_CLBLL_L.IMUX[29]"/>
    <mux input="TILE_INT_L.EE2END[2] TILE_INT_L.EL1END[3] TILE_INT_L.ER1END[2] TILE_INT_L.GFAN[1] TILE_CLBLL_L.LOGIC_OUTS[6] TILE_CLBLL_L.LOGIC_OUTS[10] TILE_CLBLL_L.LOGIC_OUTS[16] TILE_INT_L.NE2END[3] TILE_INT_L.NN2END[3] TILE_INT_L.NR1END[2] TILE_INT_L.NW2END[3] TILE_INT_L.SE2END[2] TILE_INT_L.SL1END[2] TILE_INT_L.SR1END[2] TILE_INT_L.SS2END[2] TILE_INT_L.SW2END[2] TILE_INT_L.WL1END[2] TILE_INT_L.WR1END[3] TILE_INT_L.WW2END[2]" name="TILE_CLBLL_L.IMUX[37]" output="TILE_CLBLL_L.IMUX[37]"/>
    <mux input="TILE_INT_L.EE2END[2] TILE_INT_L.EL1END[3] TILE_INT_L.ER1END[2] TILE_INT_L.GFAN[1] TILE_CLBLL_L.LOGIC_OUTS[6] TILE_CLBLL_L.LOGIC_OUTS[10] TILE_CLBLL_L.LOGIC_OUTS[16] TILE_INT_L.NE2END[3] TILE_INT_L.NN2END[3] TILE_INT_L.NR1END[2] TILE_INT_L.NW2END[3] TILE_INT_L.SE2END[2] TILE_INT_L.SL1END[2] TILE_INT_L.SR1END[2] TILE_INT_L.SS2END[2] TILE_INT_L.SW2END[2] TILE_INT_L.WL1END[2] TILE_INT_L.WR1END[3] TILE_INT_L.WW2END[2]" name="TILE_CLBLL_L.IMUX[45]" output="TILE_CLBLL_L.IMUX[45]"/>
    <mux input="TILE_INT_L.EE2END[3] TILE_INT_L.EL1END[3] TILE_INT_L.ER1END[2] TILE_INT_L.GFAN[1] TILE_CLBLL_L.LOGIC_OUTS[7] TILE_CLBLL_L.LOGIC_OUTS[11] TILE_CLBLL_L.LOGIC_OUTS[17] TILE_INT_L.NE2END[3] TILE_INT_L.NN2END[3] TILE_INT_L.NR1END[3] TILE_INT_L.NW2END[3] TILE_INT_L.SE2END[3] TILE_INT_L.SL1END[3] TILE_INT_L.SR1END[2] TILE_INT_L.SS2END[2] TILE_INT_L.SW2END[2] TILE_INT_L.WL1END[2] TILE_INT_L.WR1END[3] TILE_INT_L.WW2END[2]" name="TILE_CLBLL_L.IMUX[14]" output="TILE_CLBLL_L.IMUX[14]"/>
    <mux input="TILE_INT_L.EE2END[3] TILE_INT_L.EL1END[3] TILE_INT_L.ER1END[2] TILE_INT_L.GFAN[1] TILE_CLBLL_L.LOGIC_OUTS[7] TILE_CLBLL_L.LOGIC_OUTS[11] TILE_CLBLL_L.LOGIC_OUTS[17] TILE_INT_L.NE2END[3] TILE_INT_L.NN2END[3] TILE_INT_L.NR1END[3] TILE_INT_L.NW2END[3] TILE_INT_L.SE2END[3] TILE_INT_L.SL1END[3] TILE_INT_L.SR1END[2] TILE_INT_L.SS2END[2] TILE_INT_L.SW2END[2] TILE_INT_L.WL1END[2] TILE_INT_L.WR1END[3] TILE_INT_L.WW2END[2]" name="TILE_CLBLL_L.IMUX[22]" output="TILE_CLBLL_L.IMUX[22]"/>
    <mux input="TILE_INT_L.EE2END[3] TILE_INT_L.EL1END[3] TILE_INT_L.ER1END[2] TILE_INT_L.GFAN[1] TILE_CLBLL_L.LOGIC_OUTS[7] TILE_CLBLL_L.LOGIC_OUTS[11] TILE_CLBLL_L.LOGIC_OUTS[17] TILE_INT_L.NE2END[3] TILE_INT_L.NN2END[3] TILE_INT_L.NR1END[3] TILE_INT_L.NW2END[3] TILE_INT_L.SE2END[3] TILE_INT_L.SL1END[3] TILE_INT_L.SR1END[2] TILE_INT_L.SS2END[2] TILE_INT_L.SW2END[2] TILE_INT_L.WL1END[2] TILE_INT_L.WR1END[3] TILE_INT_L.WW2END[2]" name="TILE_CLBLL_L.IMUX[6]" output="TILE_CLBLL_L.IMUX[6]"/>
    <mux input="TILE_INT_L.EE2END[3] TILE_INT_L.EL1END[3] TILE_INT_L.ER1END[3] TILE_INT_L.GFAN[1] TILE_CLBLL_L.LOGIC_OUTS[3] TILE_CLBLL_L.LOGIC_OUTS[15] TILE_CLBLL_L.LOGIC_OUTS[21] TILE_INT_L.NE2END[3] TILE_INT_L.NN2END[3] TILE_INT_L.NR1END[3] TILE_INT_L.SE2END[3] TILE_INT_L.SL1END[3] TILE_INT_L.SR1END[3] TILE_INT_L.SS2END[3] TILE_INT_L.SW2END[3] TILE_INT_L.WL1END[3] TILE_INT_L.WR1END[3] TILE_INT_L.WW2END[3]" name="TILE_CLBLL_L.IMUX[15]" output="TILE_CLBLL_L.IMUX[15]"/>
    <mux input="TILE_INT_L.EE2END[3] TILE_INT_L.EL1END[3] TILE_INT_L.ER1END[3] TILE_INT_L.GFAN[1] TILE_CLBLL_L.LOGIC_OUTS[3] TILE_CLBLL_L.LOGIC_OUTS[15] TILE_CLBLL_L.LOGIC_OUTS[21] TILE_INT_L.NE2END[3] TILE_INT_L.NN2END[3] TILE_INT_L.NR1END[3] TILE_INT_L.SE2END[3] TILE_INT_L.SL1END[3] TILE_INT_L.SR1END[3] TILE_INT_L.SS2END[3] TILE_INT_L.SW2END[3] TILE_INT_L.WL1END[3] TILE_INT_L.WR1END[3] TILE_INT_L.WW2END[3]" name="TILE_CLBLL_L.IMUX[23]" output="TILE_CLBLL_L.IMUX[23]"/>
    <mux input="TILE_INT_L.EE2END[3] TILE_INT_L.EL1END[3] TILE_INT_L.ER1END[3] TILE_INT_L.GFAN[1] TILE_CLBLL_L.LOGIC_OUTS[3] TILE_CLBLL_L.LOGIC_OUTS[15] TILE_CLBLL_L.LOGIC_OUTS[21] TILE_INT_L.NE2END[3] TILE_INT_L.NN2END[3] TILE_INT_L.NR1END[3] TILE_INT_L.SE2END[3] TILE_INT_L.SL1END[3] TILE_INT_L.SR1END[3] TILE_INT_L.SS2END[3] TILE_INT_L.SW2END[3] TILE_INT_L.WL1END[3] TILE_INT_L.WR1END[3] TILE_INT_L.WW2END[3]" name="TILE_CLBLL_L.IMUX[7]" output="TILE_CLBLL_L.IMUX[7]"/>
    <mux input="TILE_INT_L.EE2END[3] TILE_INT_L.EL1END[3] TILE_INT_L.ER1END[3] TILE_INT_L.GFAN[1] TILE_CLBLL_L.LOGIC_OUTS[7] TILE_CLBLL_L.LOGIC_OUTS[11] TILE_CLBLL_L.LOGIC_OUTS[17] TILE_INT_L.NE2END[3] TILE_INT_L.NN2END[3] TILE_INT_L.NR1END[3] TILE_INT_L.NW2END[3] TILE_INT_L.SE2END[3] TILE_INT_L.SL1END[3] TILE_INT_L.SR1END[2] TILE_INT_L.SS2END[3] TILE_INT_L.SW2END[3] TILE_INT_L.WL1END[3] TILE_INT_L.WR1END[3] TILE_INT_L.WW2END[2]" name="TILE_CLBLL_L.IMUX[30]" output="TILE_CLBLL_L.IMUX[30]"/>
    <mux input="TILE_INT_L.EE2END[3] TILE_INT_L.EL1END[3] TILE_INT_L.ER1END[3] TILE_INT_L.GFAN[1] TILE_CLBLL_L.LOGIC_OUTS[7] TILE_CLBLL_L.LOGIC_OUTS[11] TILE_CLBLL_L.LOGIC_OUTS[17] TILE_INT_L.NE2END[3] TILE_INT_L.NN2END[3] TILE_INT_L.NR1END[3] TILE_INT_L.NW2END[3] TILE_INT_L.SE2END[3] TILE_INT_L.SL1END[3] TILE_INT_L.SR1END[2] TILE_INT_L.SS2END[3] TILE_INT_L.SW2END[3] TILE_INT_L.WL1END[3] TILE_INT_L.WR1END[3] TILE_INT_L.WW2END[2]" name="TILE_CLBLL_L.IMUX[38]" output="TILE_CLBLL_L.IMUX[38]"/>
    <mux input="TILE_INT_L.EE2END[3] TILE_INT_L.EL1END[3] TILE_INT_L.ER1END[3] TILE_INT_L.GFAN[1] TILE_CLBLL_L.LOGIC_OUTS[7] TILE_CLBLL_L.LOGIC_OUTS[11] TILE_CLBLL_L.LOGIC_OUTS[17] TILE_INT_L.NE2END[3] TILE_INT_L.NN2END[3] TILE_INT_L.NR1END[3] TILE_INT_L.NW2END[3] TILE_INT_L.SE2END[3] TILE_INT_L.SL1END[3] TILE_INT_L.SR1END[2] TILE_INT_L.SS2END[3] TILE_INT_L.SW2END[3] TILE_INT_L.WL1END[3] TILE_INT_L.WR1END[3] TILE_INT_L.WW2END[2]" name="TILE_CLBLL_L.IMUX[46]" output="TILE_CLBLL_L.IMUX[46]"/>
    <mux input="TILE_INT_L.EE2END[3] TILE_INT_L.ER1END[3] TILE_INT_L.GFAN[1] TILE_CLBLL_L.LOGIC_OUTS[3] TILE_CLBLL_L.LOGIC_OUTS[15] TILE_CLBLL_L.LOGIC_OUTS[21] TILE_INT_L.NR1END[3] TILE_INT_L.SE2END[3] TILE_INT_L.SL1END[3] TILE_INT_L.SR1END[3] TILE_INT_L.SS2END[3] TILE_INT_L.SW2END[3] TILE_INT_L.WL1END[3] TILE_INT_L.WW2END[3]" name="TILE_CLBLL_L.IMUX[31]" output="TILE_CLBLL_L.IMUX[31]"/>
    <mux input="TILE_INT_L.EE2END[3] TILE_INT_L.ER1END[3] TILE_INT_L.GFAN[1] TILE_CLBLL_L.LOGIC_OUTS[3] TILE_CLBLL_L.LOGIC_OUTS[15] TILE_CLBLL_L.LOGIC_OUTS[21] TILE_INT_L.NR1END[3] TILE_INT_L.SE2END[3] TILE_INT_L.SL1END[3] TILE_INT_L.SR1END[3] TILE_INT_L.SS2END[3] TILE_INT_L.SW2END[3] TILE_INT_L.WL1END[3] TILE_INT_L.WW2END[3]" name="TILE_CLBLL_L.IMUX[39]" output="TILE_CLBLL_L.IMUX[39]"/>
    <mux input="TILE_INT_L.EE2END[3] TILE_INT_L.ER1END[3] TILE_INT_L.GFAN[1] TILE_CLBLL_L.LOGIC_OUTS[3] TILE_CLBLL_L.LOGIC_OUTS[15] TILE_CLBLL_L.LOGIC_OUTS[21] TILE_INT_L.NR1END[3] TILE_INT_L.SE2END[3] TILE_INT_L.SL1END[3] TILE_INT_L.SR1END[3] TILE_INT_L.SS2END[3] TILE_INT_L.SW2END[3] TILE_INT_L.WL1END[3] TILE_INT_L.WW2END[3]" name="TILE_CLBLL_L.IMUX[47]" output="TILE_CLBLL_L.IMUX[47]"/>
   </interconnect>
   <pinlocations pattern="custom">
    <loc side="top" xoffset="0" yoffset="0">TILE_INT_L.COUT_N TILE_INT_L.COUT_N</loc>
    <loc side="bottom" xoffset="0" yoffset="0">TILE_INT_L.CIN_N TILE_INT_L.CIN_N</loc>
    <loc side="right" xoffset="0" yoffset="0">TILE_INT_L.EE2BEG TILE_INT_L.EE4BEG TILE_INT_L.EL1BEG TILE_INT_L.ER1BEG TILE_INT_L.NE2BEG TILE_INT_L.NE6BEG TILE_INT_L.NL1BEG TILE_INT_L.NN2BEG TILE_INT_L.NN6BEG TILE_INT_L.NR1BEG TILE_INT_L.NW2BEG TILE_INT_L.NW6BEG TILE_INT_L.SE2BEG TILE_INT_L.SE6BEG TILE_INT_L.SL1BEG TILE_INT_L.SR1BEG TILE_INT_L.SS2BEG TILE_INT_L.SS6BEG TILE_INT_L.SW2BEG TILE_INT_L.SW6BEG TILE_INT_L.WL1BEG TILE_INT_L.WR1BEG TILE_INT_L.WW2BEG TILE_INT_L.WW4BEG TILE_INT_L.EE2END TILE_INT_L.EE4END TILE_INT_L.EL1END TILE_INT_L.ER1END TILE_INT_L.NE2END TILE_INT_L.NE6END TILE_INT_L.NL1END TILE_INT_L.NN2END TILE_INT_L.NN6END TILE_INT_L.NR1END TILE_INT_L.NW2END TILE_INT_L.NW6END TILE_INT_L.SE2END TILE_INT_L.SE6END TILE_INT_L.SL1END TILE_INT_L.SR1END TILE_INT_L.SS2END TILE_INT_L.SS6END TILE_INT_L.SW2END TILE_INT_L.SW6END TILE_INT_L.WL1END TILE_INT_L.WR1END TILE_INT_L.WW2END TILE_INT_L.WW4END TILE_INT_L.GCLK_L_B TILE_INT_L.GFAN</loc>
    <!--
 <loc side="right" xoffset="0" yoffset="0">TILE_INT_L.BYP_L TILE_INT_L.CLK_L TILE_INT_L.CTRL_L TILE_INT_L.FAN_L TILE_INT_L.IMUX_L TILE_INT_L.LOGIC_OUTS_L</loc>
 -->
   </pinlocations>
   <fc default_in_type="frac" default_in_val="0.5" default_out_type="frac" default_out_val="0.5">
    <fc_override fc_type="abs" fc_val="0" port_name="CIN_N"/>
    <fc_override fc_type="abs" fc_val="0" port_name="COUT_N"/>
   </fc>
  </pb_type>
  <pb_type name="CLBLL_R">
   <input name="I" num_pins="1" equivalent="false"/>
   <output name="O" num_pins="1" equivalent="false"/>
   <pb_type name="DUMMY" num_pb="1" blif_model=".subckt DUMMY">
    <input name="I" num_pins="1" equivalent="false"/>
    <output name="O" num_pins="1" equivalent="false"/>
    <delay_constant in_port="DUMMY.I" max="10e-12" out_port="DUMMY.O"/>
   </pb_type>
   <interconnect>
    <direct name="I" input="CLBLL_R.I" output="DUMMY.I"/>
    <direct name="O" input="DUMMY.O" output="CLBLL_R.O"/>
   </interconnect>
   <fc default_in_type="frac" default_in_val="1.0" default_out_type="frac" default_out_val="1.0">
    <fc_override fc_type="abs" fc_val="0" segment_name="global"/>
   </fc>
   <pinlocations pattern="custom">
    <loc side="right" xoffset="0" yoffset="0">CLBLL_R.I</loc>
    <loc side="left" xoffset="0" yoffset="0">CLBLL_R.O</loc>
   </pinlocations>
  </pb_type>
  <pb_type name="CLBLM_L">
   <input name="I" num_pins="1" equivalent="false"/>
   <output name="O" num_pins="1" equivalent="false"/>
   <pb_type name="DUMMY" num_pb="1" blif_model=".subckt DUMMY">
    <input name="I" num_pins="1" equivalent="false"/>
    <output name="O" num_pins="1" equivalent="false"/>
    <delay_constant in_port="DUMMY.I" max="10e-12" out_port="DUMMY.O"/>
   </pb_type>
   <interconnect>
    <direct name="I" input="CLBLM_L.I" output="DUMMY.I"/>
    <direct name="O" input="DUMMY.O" output="CLBLM_L.O"/>
   </interconnect>
   <fc default_in_type="frac" default_in_val="1.0" default_out_type="frac" default_out_val="1.0">
    <fc_override fc_type="abs" fc_val="0" segment_name="global"/>
   </fc>
   <pinlocations pattern="custom">
    <loc side="right" xoffset="0" yoffset="0">CLBLM_L.I</loc>
    <loc side="left" xoffset="0" yoffset="0">CLBLM_L.O</loc>
   </pinlocations>
  </pb_type>
  <pb_type name="CLBLM_R">
   <input name="I" num_pins="1" equivalent="false"/>
   <output name="O" num_pins="1" equivalent="false"/>
   <pb_type name="DUMMY" num_pb="1" blif_model=".subckt DUMMY">
    <input name="I" num_pins="1" equivalent="false"/>
    <output name="O" num_pins="1" equivalent="false"/>
    <delay_constant in_port="DUMMY.I" max="10e-12" out_port="DUMMY.O"/>
   </pb_type>
   <interconnect>
    <direct name="I" input="CLBLM_R.I" output="DUMMY.I"/>
    <direct name="O" input="DUMMY.O" output="CLBLM_R.O"/>
   </interconnect>
   <fc default_in_type="frac" default_in_val="1.0" default_out_type="frac" default_out_val="1.0">
    <fc_override fc_type="abs" fc_val="0" segment_name="global"/>
   </fc>
   <pinlocations pattern="custom">
    <loc side="right" xoffset="0" yoffset="0">CLBLM_R.I</loc>
    <loc side="left" xoffset="0" yoffset="0">CLBLM_R.O</loc>
   </pinlocations>
  </pb_type>
  <pb_type name="INT_R">
   <input name="I" num_pins="1" equivalent="false"/>
   <output name="O" num_pins="1" equivalent="false"/>
   <pb_type name="DUMMY" num_pb="1" blif_model=".subckt DUMMY">
    <input name="I" num_pins="1" equivalent="false"/>
    <output name="O" num_pins="1" equivalent="false"/>
    <delay_constant in_port="DUMMY.I" max="10e-12" out_port="DUMMY.O"/>
   </pb_type>
   <interconnect>
    <direct name="I" input="INT_R.I" output="DUMMY.I"/>
    <direct name="O" input="DUMMY.O" output="INT_R.O"/>
   </interconnect>
   <fc default_in_type="frac" default_in_val="1.0" default_out_type="frac" default_out_val="1.0">
    <fc_override fc_type="abs" fc_val="0" segment_name="global"/>
   </fc>
   <pinlocations pattern="custom">
    <loc side="right" xoffset="0" yoffset="0">INT_R.I</loc>
    <loc side="left" xoffset="0" yoffset="0">INT_R.O</loc>
   </pinlocations>
  </pb_type>
  <pb_type name="HCLK_L">
   <input name="I" num_pins="1" equivalent="false"/>
   <output name="O" num_pins="1" equivalent="false"/>
   <pb_type name="DUMMY" num_pb="1" blif_model=".subckt DUMMY">
    <input name="I" num_pins="1" equivalent="false"/>
    <output name="O" num_pins="1" equivalent="false"/>
    <delay_constant in_port="DUMMY.I" max="10e-12" out_port="DUMMY.O"/>
   </pb_type>
   <interconnect>
    <direct name="I" input="HCLK_L.I" output="DUMMY.I"/>
    <direct name="O" input="DUMMY.O" output="HCLK_L.O"/>
   </interconnect>
   <fc default_in_type="frac" default_in_val="1.0" default_out_type="frac" default_out_val="1.0">
    <fc_override fc_type="abs" fc_val="0" segment_name="global"/>
   </fc>
   <pinlocations pattern="custom">
    <loc side="right" xoffset="0" yoffset="0">HCLK_L.I</loc>
    <loc side="left" xoffset="0" yoffset="0">HCLK_L.O</loc>
   </pinlocations>
  </pb_type>
  <pb_type name="HCLK_R">
   <input name="I" num_pins="1" equivalent="false"/>
   <output name="O" num_pins="1" equivalent="false"/>
   <pb_type name="DUMMY" num_pb="1" blif_model=".subckt DUMMY">
    <input name="I" num_pins="1" equivalent="false"/>
    <output name="O" num_pins="1" equivalent="false"/>
    <delay_constant in_port="DUMMY.I" max="10e-12" out_port="DUMMY.O"/>
   </pb_type>
   <interconnect>
    <direct name="I" input="HCLK_R.I" output="DUMMY.I"/>
    <direct name="O" input="DUMMY.O" output="HCLK_R.O"/>
   </interconnect>
   <fc default_in_type="frac" default_in_val="1.0" default_out_type="frac" default_out_val="1.0">
    <fc_override fc_type="abs" fc_val="0" segment_name="global"/>
   </fc>
   <pinlocations pattern="custom">
    <loc side="right" xoffset="0" yoffset="0">HCLK_R.I</loc>
    <loc side="left" xoffset="0" yoffset="0">HCLK_R.O</loc>
   </pinlocations>
  </pb_type>
 </complexblocklist>
 <directlist>
  <!-- CLBX_L -->
  <direct name="BLOCK_CLBLL_L_INT_L_CARRY" from_pin="TILE_INT_L.COUT_N" to_pin="TILE_INT_L.CIN_N" x_offset="0" y_offset="1" z_offset="0"/>
  <!--
 <direct name="TILE_CLBLM_L_M_CARRY" from_pin="TILE_CLBLM_L.M_COUT_N" to_pin="TILE_CLBLM_L.M_CIN_N" x_offset="0" y_offset="1" z_offset="0"/>
 <direct name="TILE_CLBLM_L_L_CARRY" from_pin="TILE_CLBLM_L.L_COUT_N" to_pin="TILE_CLBLM_L.L_CIN_N" x_offset="0" y_offset="1" z_offset="0"/>
 -->
  <!-- CLBX_R
 <direct name="TILE_CLBLL_R_L_CARRY" from_pin="TILE_CLBLL_R.L_COUT_N" to_pin="TILE_CLBLL_R.L_CIN_N" x_offset="0" y_offset="1" z_offset="0"/>
 <direct name="TILE_CLBLL_R_LL_CARRY" from_pin="TILE_CLBLL_R.LL_COUT_N" to_pin="TILE_CLBLL_R.LL_CIN_N" x_offset="0" y_offset="1" z_offset="0"/>
 <direct name="TILE_CLBLM_R_M_CARRY" from_pin="TILE_CLBLM_R.L_COUT_N" to_pin="TILE_CLBLM_R.L_CIN_N" x_offset="0" y_offset="1" z_offset="0"/>
 <direct name="TILE_CLBLM_R_L_CARRY" from_pin="TILE_CLBLM_R.M_COUT_N" to_pin="TILE_CLBLM_R.M_CIN_N" x_offset="0" y_offset="1" z_offset="0"/>
 -->
 </directlist>
</architecture>
