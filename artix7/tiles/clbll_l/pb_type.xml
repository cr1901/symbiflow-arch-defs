<pb_type xmlns:xi="http://www.w3.org/2001/XInclude" name="CLBLL_L" num_pb="1">
  <!-- Tile Inputs -->
  <input name="BYP                 " num_pins="8"/>
  <clock name="CLK                 " num_pins="2"/>
  <input name="CTRL                " num_pins="2"/>
  <input name="FAN6                " num_pins="1"/>
  <input name="FAN7                " num_pins="1"/>
  <input name="IMUX                " num_pins="48"/>
  <input name="LL_CIN_N            " num_pins="1"/>
  <input name="L_CIN_N             " num_pins="1"/>
  <!-- Tile Outputs -->
  <output name="LL_COUT_N           " num_pins="1"/>
  <output name="LOGIC_OUTS          " num_pins="24"/>
  <output name="L_COUT_N            " num_pins="1"/>
  <!-- Internal Slices -->
  <pb_type name="CLBLL_L" num_pb="1">
    <xi:include href="../../primitives/slicel/pb_type.xml"/>
    <input name=" A1    " num_pins="1"/>
    <input name=" A2    " num_pins="1"/>
    <input name=" A3    " num_pins="1"/>
    <input name=" A4    " num_pins="1"/>
    <input name=" A5    " num_pins="1"/>
    <input name=" A6    " num_pins="1"/>
    <input name=" AX    " num_pins="1"/>
    <input name=" B1    " num_pins="1"/>
    <input name=" B2    " num_pins="1"/>
    <input name=" B3    " num_pins="1"/>
    <input name=" B4    " num_pins="1"/>
    <input name=" B5    " num_pins="1"/>
    <input name=" B6    " num_pins="1"/>
    <input name=" BX    " num_pins="1"/>
    <input name=" C1    " num_pins="1"/>
    <input name=" C2    " num_pins="1"/>
    <input name=" C3    " num_pins="1"/>
    <input name=" C4    " num_pins="1"/>
    <input name=" C5    " num_pins="1"/>
    <input name=" C6    " num_pins="1"/>
    <input name=" CE    " num_pins="1"/>
    <input name=" CIN   " num_pins="1"/>
    <clock name=" CLK   " num_pins="1"/>
    <input name=" CX    " num_pins="1"/>
    <input name=" D1    " num_pins="1"/>
    <input name=" D2    " num_pins="1"/>
    <input name=" D3    " num_pins="1"/>
    <input name=" D4    " num_pins="1"/>
    <input name=" D5    " num_pins="1"/>
    <input name=" D6    " num_pins="1"/>
    <input name=" DX    " num_pins="1"/>
    <input name=" SR    " num_pins="1"/>
    <output name="A     " num_pins="1"/>
    <output name="AMUX  " num_pins="1"/>
    <output name="AQ    " num_pins="1"/>
    <output name="B     " num_pins="1"/>
    <output name="BMUX  " num_pins="1"/>
    <output name="BQ    " num_pins="1"/>
    <output name="C     " num_pins="1"/>
    <output name="CMUX  " num_pins="1"/>
    <output name="COUT  " num_pins="1"/>
    <output name="CQ    " num_pins="1"/>
    <output name="D     " num_pins="1"/>
    <output name="DMUX  " num_pins="1"/>
    <output name="DQ    " num_pins="1"/>
    <interconnect>
      <!-- Slice->Cell -->
      <direct input="CLBLL_L.A1                    " name="SLICEL.A1                     " output="SLICEL.A1                     "/>
      <direct input="CLBLL_L.A2                    " name="SLICEL.A2                     " output="SLICEL.A2                     "/>
      <direct input="CLBLL_L.A3                    " name="SLICEL.A3                     " output="SLICEL.A3                     "/>
      <direct input="CLBLL_L.A4                    " name="SLICEL.A4                     " output="SLICEL.A4                     "/>
      <direct input="CLBLL_L.A5                    " name="SLICEL.A5                     " output="SLICEL.A5                     "/>
      <direct input="CLBLL_L.A6                    " name="SLICEL.A6                     " output="SLICEL.A6                     "/>
      <direct input="CLBLL_L.AX                    " name="SLICEL.AX                     " output="SLICEL.AX                     "/>
      <direct input="CLBLL_L.B1                    " name="SLICEL.B1                     " output="SLICEL.B1                     "/>
      <direct input="CLBLL_L.B2                    " name="SLICEL.B2                     " output="SLICEL.B2                     "/>
      <direct input="CLBLL_L.B3                    " name="SLICEL.B3                     " output="SLICEL.B3                     "/>
      <direct input="CLBLL_L.B4                    " name="SLICEL.B4                     " output="SLICEL.B4                     "/>
      <direct input="CLBLL_L.B5                    " name="SLICEL.B5                     " output="SLICEL.B5                     "/>
      <direct input="CLBLL_L.B6                    " name="SLICEL.B6                     " output="SLICEL.B6                     "/>
      <direct input="CLBLL_L.BX                    " name="SLICEL.BX                     " output="SLICEL.BX                     "/>
      <direct input="CLBLL_L.C1                    " name="SLICEL.C1                     " output="SLICEL.C1                     "/>
      <direct input="CLBLL_L.C2                    " name="SLICEL.C2                     " output="SLICEL.C2                     "/>
      <direct input="CLBLL_L.C3                    " name="SLICEL.C3                     " output="SLICEL.C3                     "/>
      <direct input="CLBLL_L.C4                    " name="SLICEL.C4                     " output="SLICEL.C4                     "/>
      <direct input="CLBLL_L.C5                    " name="SLICEL.C5                     " output="SLICEL.C5                     "/>
      <direct input="CLBLL_L.C6                    " name="SLICEL.C6                     " output="SLICEL.C6                     "/>
      <direct input="CLBLL_L.CE                    " name="SLICEL.CE                     " output="SLICEL.CE                     "/>
      <direct input="CLBLL_L.CIN                   " name="SLICEL.CIN                    " output="SLICEL.CIN                    "/>
      <direct input="CLBLL_L.CLK                   " name="SLICEL.CLK                    " output="SLICEL.CLK                    "/>
      <direct input="CLBLL_L.CX                    " name="SLICEL.CX                     " output="SLICEL.CX                     "/>
      <direct input="CLBLL_L.D1                    " name="SLICEL.D1                     " output="SLICEL.D1                     "/>
      <direct input="CLBLL_L.D2                    " name="SLICEL.D2                     " output="SLICEL.D2                     "/>
      <direct input="CLBLL_L.D3                    " name="SLICEL.D3                     " output="SLICEL.D3                     "/>
      <direct input="CLBLL_L.D4                    " name="SLICEL.D4                     " output="SLICEL.D4                     "/>
      <direct input="CLBLL_L.D5                    " name="SLICEL.D5                     " output="SLICEL.D5                     "/>
      <direct input="CLBLL_L.D6                    " name="SLICEL.D6                     " output="SLICEL.D6                     "/>
      <direct input="CLBLL_L.DX                    " name="SLICEL.DX                     " output="SLICEL.DX                     "/>
      <direct input="CLBLL_L.SR                    " name="SLICEL.SR                     " output="SLICEL.SR                     "/>
      <!-- Cell->Slice -->
      <direct input="SLICEL.A                      " name="CLBLL_L.A                     " output="CLBLL_L.A                     "/>
      <direct input="SLICEL.AMUX                   " name="CLBLL_L.AMUX                  " output="CLBLL_L.AMUX                  "/>
      <direct input="SLICEL.AQ                     " name="CLBLL_L.AQ                    " output="CLBLL_L.AQ                    "/>
      <direct input="SLICEL.B                      " name="CLBLL_L.B                     " output="CLBLL_L.B                     "/>
      <direct input="SLICEL.BMUX                   " name="CLBLL_L.BMUX                  " output="CLBLL_L.BMUX                  "/>
      <direct input="SLICEL.BQ                     " name="CLBLL_L.BQ                    " output="CLBLL_L.BQ                    "/>
      <direct input="SLICEL.C                      " name="CLBLL_L.C                     " output="CLBLL_L.C                     "/>
      <direct input="SLICEL.CMUX                   " name="CLBLL_L.CMUX                  " output="CLBLL_L.CMUX                  "/>
      <direct input="SLICEL.COUT                   " name="CLBLL_L.COUT                  " output="CLBLL_L.COUT                  "/>
      <direct input="SLICEL.CQ                     " name="CLBLL_L.CQ                    " output="CLBLL_L.CQ                    "/>
      <direct input="SLICEL.D                      " name="CLBLL_L.D                     " output="CLBLL_L.D                     "/>
      <direct input="SLICEL.DMUX                   " name="CLBLL_L.DMUX                  " output="CLBLL_L.DMUX                  "/>
      <direct input="SLICEL.DQ                     " name="CLBLL_L.DQ                    " output="CLBLL_L.DQ                    "/>
    </interconnect>
  </pb_type>
  <pb_type name="CLBLL_LL" num_pb="1">
    <xi:include href="../../primitives/slicel/pb_type.xml"/>
    <input name=" A1    " num_pins="1"/>
    <input name=" A2    " num_pins="1"/>
    <input name=" A3    " num_pins="1"/>
    <input name=" A4    " num_pins="1"/>
    <input name=" A5    " num_pins="1"/>
    <input name=" A6    " num_pins="1"/>
    <input name=" AX    " num_pins="1"/>
    <input name=" B1    " num_pins="1"/>
    <input name=" B2    " num_pins="1"/>
    <input name=" B3    " num_pins="1"/>
    <input name=" B4    " num_pins="1"/>
    <input name=" B5    " num_pins="1"/>
    <input name=" B6    " num_pins="1"/>
    <input name=" BX    " num_pins="1"/>
    <input name=" C1    " num_pins="1"/>
    <input name=" C2    " num_pins="1"/>
    <input name=" C3    " num_pins="1"/>
    <input name=" C4    " num_pins="1"/>
    <input name=" C5    " num_pins="1"/>
    <input name=" C6    " num_pins="1"/>
    <input name=" CE    " num_pins="1"/>
    <input name=" CIN   " num_pins="1"/>
    <clock name=" CLK   " num_pins="1"/>
    <input name=" CX    " num_pins="1"/>
    <input name=" D1    " num_pins="1"/>
    <input name=" D2    " num_pins="1"/>
    <input name=" D3    " num_pins="1"/>
    <input name=" D4    " num_pins="1"/>
    <input name=" D5    " num_pins="1"/>
    <input name=" D6    " num_pins="1"/>
    <input name=" DX    " num_pins="1"/>
    <input name=" SR    " num_pins="1"/>
    <output name="A     " num_pins="1"/>
    <output name="AMUX  " num_pins="1"/>
    <output name="AQ    " num_pins="1"/>
    <output name="B     " num_pins="1"/>
    <output name="BMUX  " num_pins="1"/>
    <output name="BQ    " num_pins="1"/>
    <output name="C     " num_pins="1"/>
    <output name="CMUX  " num_pins="1"/>
    <output name="COUT  " num_pins="1"/>
    <output name="CQ    " num_pins="1"/>
    <output name="D     " num_pins="1"/>
    <output name="DMUX  " num_pins="1"/>
    <output name="DQ    " num_pins="1"/>
    <interconnect>
      <!-- Slice->Cell -->
      <direct input="CLBLL_LL.A1                   " name="SLICEL.A1                     " output="SLICEL.A1                     "/>
      <direct input="CLBLL_LL.A2                   " name="SLICEL.A2                     " output="SLICEL.A2                     "/>
      <direct input="CLBLL_LL.A3                   " name="SLICEL.A3                     " output="SLICEL.A3                     "/>
      <direct input="CLBLL_LL.A4                   " name="SLICEL.A4                     " output="SLICEL.A4                     "/>
      <direct input="CLBLL_LL.A5                   " name="SLICEL.A5                     " output="SLICEL.A5                     "/>
      <direct input="CLBLL_LL.A6                   " name="SLICEL.A6                     " output="SLICEL.A6                     "/>
      <direct input="CLBLL_LL.AX                   " name="SLICEL.AX                     " output="SLICEL.AX                     "/>
      <direct input="CLBLL_LL.B1                   " name="SLICEL.B1                     " output="SLICEL.B1                     "/>
      <direct input="CLBLL_LL.B2                   " name="SLICEL.B2                     " output="SLICEL.B2                     "/>
      <direct input="CLBLL_LL.B3                   " name="SLICEL.B3                     " output="SLICEL.B3                     "/>
      <direct input="CLBLL_LL.B4                   " name="SLICEL.B4                     " output="SLICEL.B4                     "/>
      <direct input="CLBLL_LL.B5                   " name="SLICEL.B5                     " output="SLICEL.B5                     "/>
      <direct input="CLBLL_LL.B6                   " name="SLICEL.B6                     " output="SLICEL.B6                     "/>
      <direct input="CLBLL_LL.BX                   " name="SLICEL.BX                     " output="SLICEL.BX                     "/>
      <direct input="CLBLL_LL.C1                   " name="SLICEL.C1                     " output="SLICEL.C1                     "/>
      <direct input="CLBLL_LL.C2                   " name="SLICEL.C2                     " output="SLICEL.C2                     "/>
      <direct input="CLBLL_LL.C3                   " name="SLICEL.C3                     " output="SLICEL.C3                     "/>
      <direct input="CLBLL_LL.C4                   " name="SLICEL.C4                     " output="SLICEL.C4                     "/>
      <direct input="CLBLL_LL.C5                   " name="SLICEL.C5                     " output="SLICEL.C5                     "/>
      <direct input="CLBLL_LL.C6                   " name="SLICEL.C6                     " output="SLICEL.C6                     "/>
      <direct input="CLBLL_LL.CE                   " name="SLICEL.CE                     " output="SLICEL.CE                     "/>
      <direct input="CLBLL_LL.CIN                  " name="SLICEL.CIN                    " output="SLICEL.CIN                    "/>
      <direct input="CLBLL_LL.CLK                  " name="SLICEL.CLK                    " output="SLICEL.CLK                    "/>
      <direct input="CLBLL_LL.CX                   " name="SLICEL.CX                     " output="SLICEL.CX                     "/>
      <direct input="CLBLL_LL.D1                   " name="SLICEL.D1                     " output="SLICEL.D1                     "/>
      <direct input="CLBLL_LL.D2                   " name="SLICEL.D2                     " output="SLICEL.D2                     "/>
      <direct input="CLBLL_LL.D3                   " name="SLICEL.D3                     " output="SLICEL.D3                     "/>
      <direct input="CLBLL_LL.D4                   " name="SLICEL.D4                     " output="SLICEL.D4                     "/>
      <direct input="CLBLL_LL.D5                   " name="SLICEL.D5                     " output="SLICEL.D5                     "/>
      <direct input="CLBLL_LL.D6                   " name="SLICEL.D6                     " output="SLICEL.D6                     "/>
      <direct input="CLBLL_LL.DX                   " name="SLICEL.DX                     " output="SLICEL.DX                     "/>
      <direct input="CLBLL_LL.SR                   " name="SLICEL.SR                     " output="SLICEL.SR                     "/>
      <!-- Cell->Slice -->
      <direct input="SLICEL.A                      " name="CLBLL_LL.A                    " output="CLBLL_LL.A                    "/>
      <direct input="SLICEL.AMUX                   " name="CLBLL_LL.AMUX                 " output="CLBLL_LL.AMUX                 "/>
      <direct input="SLICEL.AQ                     " name="CLBLL_LL.AQ                   " output="CLBLL_LL.AQ                   "/>
      <direct input="SLICEL.B                      " name="CLBLL_LL.B                    " output="CLBLL_LL.B                    "/>
      <direct input="SLICEL.BMUX                   " name="CLBLL_LL.BMUX                 " output="CLBLL_LL.BMUX                 "/>
      <direct input="SLICEL.BQ                     " name="CLBLL_LL.BQ                   " output="CLBLL_LL.BQ                   "/>
      <direct input="SLICEL.C                      " name="CLBLL_LL.C                    " output="CLBLL_LL.C                    "/>
      <direct input="SLICEL.CMUX                   " name="CLBLL_LL.CMUX                 " output="CLBLL_LL.CMUX                 "/>
      <direct input="SLICEL.COUT                   " name="CLBLL_LL.COUT                 " output="CLBLL_LL.COUT                 "/>
      <direct input="SLICEL.CQ                     " name="CLBLL_LL.CQ                   " output="CLBLL_LL.CQ                   "/>
      <direct input="SLICEL.D                      " name="CLBLL_LL.D                    " output="CLBLL_LL.D                    "/>
      <direct input="SLICEL.DMUX                   " name="CLBLL_LL.DMUX                 " output="CLBLL_LL.DMUX                 "/>
      <direct input="SLICEL.DQ                     " name="CLBLL_LL.DQ                   " output="CLBLL_LL.DQ                   "/>
    </interconnect>
  </pb_type>
  <interconnect>
    <!-- Tile->Slice -->
    <direct input="CLBLL_L.BYP[0]                " name="CLBLL_L.AX                    " output="CLBLL_L.AX                    "/>
    <direct input="CLBLL_L.BYP[1]                " name="CLBLL_LL.AX                   " output="CLBLL_LL.AX                   "/>
    <direct input="CLBLL_L.BYP[2]                " name="CLBLL_L.CX                    " output="CLBLL_L.CX                    "/>
    <direct input="CLBLL_L.BYP[3]                " name="CLBLL_LL.CX                   " output="CLBLL_LL.CX                   "/>
    <direct input="CLBLL_L.BYP[4]                " name="CLBLL_LL.BX                   " output="CLBLL_LL.BX                   "/>
    <direct input="CLBLL_L.BYP[5]                " name="CLBLL_L.BX                    " output="CLBLL_L.BX                    "/>
    <direct input="CLBLL_L.BYP[6]                " name="CLBLL_LL.DX                   " output="CLBLL_LL.DX                   "/>
    <direct input="CLBLL_L.BYP[7]                " name="CLBLL_L.DX                    " output="CLBLL_L.DX                    "/>
    <direct input="CLBLL_L.CLK[0]                " name="CLBLL_L.CLK                   " output="CLBLL_L.CLK                   "/>
    <direct input="CLBLL_L.CLK[1]                " name="CLBLL_LL.CLK                  " output="CLBLL_LL.CLK                  "/>
    <direct input="CLBLL_L.CTRL[0]               " name="CLBLL_L.SR                    " output="CLBLL_L.SR                    "/>
    <direct input="CLBLL_L.CTRL[1]               " name="CLBLL_LL.SR                   " output="CLBLL_LL.SR                   "/>
    <direct input="CLBLL_L.FAN6                  " name="CLBLL_L.CE                    " output="CLBLL_L.CE                    "/>
    <direct input="CLBLL_L.FAN7                  " name="CLBLL_LL.CE                   " output="CLBLL_LL.CE                   "/>
    <direct input="CLBLL_L.IMUX[0]               " name="CLBLL_L.A3                    " output="CLBLL_L.A3                    "/>
    <direct input="CLBLL_L.IMUX[1]               " name="CLBLL_LL.A3                   " output="CLBLL_LL.A3                   "/>
    <direct input="CLBLL_L.IMUX[2]               " name="CLBLL_LL.A2                   " output="CLBLL_LL.A2                   "/>
    <direct input="CLBLL_L.IMUX[3]               " name="CLBLL_L.A2                    " output="CLBLL_L.A2                    "/>
    <direct input="CLBLL_L.IMUX[4]               " name="CLBLL_LL.A6                   " output="CLBLL_LL.A6                   "/>
    <direct input="CLBLL_L.IMUX[5]               " name="CLBLL_L.A6                    " output="CLBLL_L.A6                    "/>
    <direct input="CLBLL_L.IMUX[6]               " name="CLBLL_L.A1                    " output="CLBLL_L.A1                    "/>
    <direct input="CLBLL_L.IMUX[7]               " name="CLBLL_LL.A1                   " output="CLBLL_LL.A1                   "/>
    <direct input="CLBLL_L.IMUX[8]               " name="CLBLL_LL.A5                   " output="CLBLL_LL.A5                   "/>
    <direct input="CLBLL_L.IMUX[9]               " name="CLBLL_L.A5                    " output="CLBLL_L.A5                    "/>
    <direct input="CLBLL_L.IMUX[10]              " name="CLBLL_L.A4                    " output="CLBLL_L.A4                    "/>
    <direct input="CLBLL_L.IMUX[11]              " name="CLBLL_LL.A4                   " output="CLBLL_LL.A4                   "/>
    <direct input="CLBLL_L.IMUX[12]              " name="CLBLL_LL.B6                   " output="CLBLL_LL.B6                   "/>
    <direct input="CLBLL_L.IMUX[13]              " name="CLBLL_L.B6                    " output="CLBLL_L.B6                    "/>
    <direct input="CLBLL_L.IMUX[14]              " name="CLBLL_L.B1                    " output="CLBLL_L.B1                    "/>
    <direct input="CLBLL_L.IMUX[15]              " name="CLBLL_LL.B1                   " output="CLBLL_LL.B1                   "/>
    <direct input="CLBLL_L.IMUX[16]              " name="CLBLL_L.B3                    " output="CLBLL_L.B3                    "/>
    <direct input="CLBLL_L.IMUX[17]              " name="CLBLL_LL.B3                   " output="CLBLL_LL.B3                   "/>
    <direct input="CLBLL_L.IMUX[18]              " name="CLBLL_LL.B2                   " output="CLBLL_LL.B2                   "/>
    <direct input="CLBLL_L.IMUX[19]              " name="CLBLL_L.B2                    " output="CLBLL_L.B2                    "/>
    <direct input="CLBLL_L.IMUX[20]              " name="CLBLL_L.C2                    " output="CLBLL_L.C2                    "/>
    <direct input="CLBLL_L.IMUX[21]              " name="CLBLL_L.C4                    " output="CLBLL_L.C4                    "/>
    <direct input="CLBLL_L.IMUX[22]              " name="CLBLL_LL.C3                   " output="CLBLL_LL.C3                   "/>
    <direct input="CLBLL_L.IMUX[23]              " name="CLBLL_L.C3                    " output="CLBLL_L.C3                    "/>
    <direct input="CLBLL_L.IMUX[24]              " name="CLBLL_LL.B5                   " output="CLBLL_LL.B5                   "/>
    <direct input="CLBLL_L.IMUX[25]              " name="CLBLL_L.B5                    " output="CLBLL_L.B5                    "/>
    <direct input="CLBLL_L.IMUX[26]              " name="CLBLL_L.B4                    " output="CLBLL_L.B4                    "/>
    <direct input="CLBLL_L.IMUX[27]              " name="CLBLL_LL.B4                   " output="CLBLL_LL.B4                   "/>
    <direct input="CLBLL_L.IMUX[28]              " name="CLBLL_LL.C4                   " output="CLBLL_LL.C4                   "/>
    <direct input="CLBLL_L.IMUX[29]              " name="CLBLL_LL.C2                   " output="CLBLL_LL.C2                   "/>
    <direct input="CLBLL_L.IMUX[30]              " name="CLBLL_L.C5                    " output="CLBLL_L.C5                    "/>
    <direct input="CLBLL_L.IMUX[31]              " name="CLBLL_LL.C5                   " output="CLBLL_LL.C5                   "/>
    <direct input="CLBLL_L.IMUX[32]              " name="CLBLL_LL.C1                   " output="CLBLL_LL.C1                   "/>
    <direct input="CLBLL_L.IMUX[33]              " name="CLBLL_L.C1                    " output="CLBLL_L.C1                    "/>
    <direct input="CLBLL_L.IMUX[34]              " name="CLBLL_L.C6                    " output="CLBLL_L.C6                    "/>
    <direct input="CLBLL_L.IMUX[35]              " name="CLBLL_LL.C6                   " output="CLBLL_LL.C6                   "/>
    <direct input="CLBLL_L.IMUX[36]              " name="CLBLL_L.D2                    " output="CLBLL_L.D2                    "/>
    <direct input="CLBLL_L.IMUX[37]              " name="CLBLL_L.D4                    " output="CLBLL_L.D4                    "/>
    <direct input="CLBLL_L.IMUX[38]              " name="CLBLL_LL.D3                   " output="CLBLL_LL.D3                   "/>
    <direct input="CLBLL_L.IMUX[39]              " name="CLBLL_L.D3                    " output="CLBLL_L.D3                    "/>
    <direct input="CLBLL_L.IMUX[40]              " name="CLBLL_LL.D1                   " output="CLBLL_LL.D1                   "/>
    <direct input="CLBLL_L.IMUX[41]              " name="CLBLL_L.D1                    " output="CLBLL_L.D1                    "/>
    <direct input="CLBLL_L.IMUX[42]              " name="CLBLL_L.D6                    " output="CLBLL_L.D6                    "/>
    <direct input="CLBLL_L.IMUX[43]              " name="CLBLL_LL.D6                   " output="CLBLL_LL.D6                   "/>
    <direct input="CLBLL_L.IMUX[44]              " name="CLBLL_LL.D4                   " output="CLBLL_LL.D4                   "/>
    <direct input="CLBLL_L.IMUX[45]              " name="CLBLL_LL.D2                   " output="CLBLL_LL.D2                   "/>
    <direct input="CLBLL_L.IMUX[46]              " name="CLBLL_L.D5                    " output="CLBLL_L.D5                    "/>
    <direct input="CLBLL_L.IMUX[47]              " name="CLBLL_LL.D5                   " output="CLBLL_LL.D5                   "/>
    <direct input="CLBLL_L.LL_CIN_N              " name="CLBLL_LL.CIN                  " output="CLBLL_LL.CIN                  "/>
    <direct input="CLBLL_L.L_CIN_N               " name="CLBLL_L.CIN                   " output="CLBLL_L.CIN                   "/>
    <!-- Slice->Tile -->
    <direct input="CLBLL_L.A                     " name="CLBLL_L.LOGIC_OUTS[8]         " output="CLBLL_L.LOGIC_OUTS[8]         "/>
    <direct input="CLBLL_L.AMUX                  " name="CLBLL_L.LOGIC_OUTS[16]        " output="CLBLL_L.LOGIC_OUTS[16]        "/>
    <direct input="CLBLL_L.AQ                    " name="CLBLL_L.LOGIC_OUTS[0]         " output="CLBLL_L.LOGIC_OUTS[0]         "/>
    <direct input="CLBLL_L.B                     " name="CLBLL_L.LOGIC_OUTS[9]         " output="CLBLL_L.LOGIC_OUTS[9]         "/>
    <direct input="CLBLL_L.BMUX                  " name="CLBLL_L.LOGIC_OUTS[17]        " output="CLBLL_L.LOGIC_OUTS[17]        "/>
    <direct input="CLBLL_L.BQ                    " name="CLBLL_L.LOGIC_OUTS[1]         " output="CLBLL_L.LOGIC_OUTS[1]         "/>
    <direct input="CLBLL_L.C                     " name="CLBLL_L.LOGIC_OUTS[10]        " output="CLBLL_L.LOGIC_OUTS[10]        "/>
    <direct input="CLBLL_L.CMUX                  " name="CLBLL_L.LOGIC_OUTS[18]        " output="CLBLL_L.LOGIC_OUTS[18]        "/>
    <direct input="CLBLL_L.COUT                  " name="CLBLL_L.L_COUT_N              " output="CLBLL_L.L_COUT_N              "/>
    <direct input="CLBLL_L.CQ                    " name="CLBLL_L.LOGIC_OUTS[2]         " output="CLBLL_L.LOGIC_OUTS[2]         "/>
    <direct input="CLBLL_L.D                     " name="CLBLL_L.LOGIC_OUTS[11]        " output="CLBLL_L.LOGIC_OUTS[11]        "/>
    <direct input="CLBLL_L.DMUX                  " name="CLBLL_L.LOGIC_OUTS[19]        " output="CLBLL_L.LOGIC_OUTS[19]        "/>
    <direct input="CLBLL_L.DQ                    " name="CLBLL_L.LOGIC_OUTS[3]         " output="CLBLL_L.LOGIC_OUTS[3]         "/>
    <direct input="CLBLL_LL.A                    " name="CLBLL_L.LOGIC_OUTS[12]        " output="CLBLL_L.LOGIC_OUTS[12]        "/>
    <direct input="CLBLL_LL.AMUX                 " name="CLBLL_L.LOGIC_OUTS[20]        " output="CLBLL_L.LOGIC_OUTS[20]        "/>
    <direct input="CLBLL_LL.AQ                   " name="CLBLL_L.LOGIC_OUTS[4]         " output="CLBLL_L.LOGIC_OUTS[4]         "/>
    <direct input="CLBLL_LL.B                    " name="CLBLL_L.LOGIC_OUTS[13]        " output="CLBLL_L.LOGIC_OUTS[13]        "/>
    <direct input="CLBLL_LL.BMUX                 " name="CLBLL_L.LOGIC_OUTS[21]        " output="CLBLL_L.LOGIC_OUTS[21]        "/>
    <direct input="CLBLL_LL.BQ                   " name="CLBLL_L.LOGIC_OUTS[5]         " output="CLBLL_L.LOGIC_OUTS[5]         "/>
    <direct input="CLBLL_LL.C                    " name="CLBLL_L.LOGIC_OUTS[14]        " output="CLBLL_L.LOGIC_OUTS[14]        "/>
    <direct input="CLBLL_LL.CMUX                 " name="CLBLL_L.LOGIC_OUTS[22]        " output="CLBLL_L.LOGIC_OUTS[22]        "/>
    <direct input="CLBLL_LL.COUT                 " name="CLBLL_L.LL_COUT_N             " output="CLBLL_L.LL_COUT_N             "/>
    <direct input="CLBLL_LL.CQ                   " name="CLBLL_L.LOGIC_OUTS[6]         " output="CLBLL_L.LOGIC_OUTS[6]         "/>
    <direct input="CLBLL_LL.D                    " name="CLBLL_L.LOGIC_OUTS[15]        " output="CLBLL_L.LOGIC_OUTS[15]        "/>
    <direct input="CLBLL_LL.DMUX                 " name="CLBLL_L.LOGIC_OUTS[23]        " output="CLBLL_L.LOGIC_OUTS[23]        "/>
    <direct input="CLBLL_LL.DQ                   " name="CLBLL_L.LOGIC_OUTS[7]         " output="CLBLL_L.LOGIC_OUTS[7]         "/>
  </interconnect>
</pb_type>
